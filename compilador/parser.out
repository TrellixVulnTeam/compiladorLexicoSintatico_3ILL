Grammar:

Rule 0     S' -> initial
Rule 1     initial -> ALGORITMO CARACTERE VAR declaracaoType INICIO blocoType FIMALGORITMO
Rule 2     blocoType -> <empty>
Rule 3     blocoType -> bloco
Rule 4     declaracaoType -> <empty>
Rule 5     declaracaoType -> declaracaoTypeAux
Rule 6     declaracaoTypeAux -> declaracao
Rule 7     declaracaoTypeAux -> declaracao declaracaoTypeAux
Rule 8     declaracao -> vartype : LOGICO
Rule 9     declaracao -> vartype : CARACTERE
Rule 10    declaracao -> vartype : REAL
Rule 11    declaracao -> vartype : INTEIRO
Rule 12    vartype -> ID , vartype
Rule 13    vartype -> ID
Rule 14    bloco -> cmd bloco
Rule 15    bloco -> cmd
Rule 16    cmd -> cmdRepeticao
Rule 17    cmd -> LIMPATELA
Rule 18    cmd -> cmdCondicao
Rule 19    cmd -> cmdleitura
Rule 20    cmd -> cmdescrita
Rule 21    cmd -> cmdattrib
Rule 22    cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
Rule 23    cmdleitura -> LEIA ( ID )
Rule 24    cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
Rule 25    cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE
Rule 26    expressaoRelacional -> termoRelacional
Rule 27    expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional
Rule 28    termoRelacional -> ( expressaoRelacional )
Rule 29    termoRelacional -> FALSO
Rule 30    termoRelacional -> VERDADEIRO
Rule 31    termoRelacional -> NAO termoRelacional
Rule 32    termoRelacional -> expr OP_REL expr
Rule 33    OP_BOOL -> XOU
Rule 34    OP_BOOL -> OU
Rule 35    OP_BOOL -> E
Rule 36    OP_REL -> EQ  [precedence=nonassoc, level=1]
Rule 37    OP_REL -> GT  [precedence=nonassoc, level=1]
Rule 38    OP_REL -> GE  [precedence=nonassoc, level=1]
Rule 39    OP_REL -> LT  [precedence=nonassoc, level=1]
Rule 40    OP_REL -> LE  [precedence=nonassoc, level=1]
Rule 41    OP_REL -> NE  [precedence=nonassoc, level=1]
Rule 42    cmdattrib -> ID ASSIGN ( typeArgs )
Rule 43    cmdattrib -> ID ASSIGN typeArgs
Rule 44    cmdattrib -> ID ASSIGN expr
Rule 45    typeArgs -> FALSO
Rule 46    typeArgs -> VERDADEIRO
Rule 47    cmdescrita -> ESCREVAL ( )
Rule 48    cmdescrita -> ESCREVAL ( typeArgsEscrita )
Rule 49    cmdescrita -> ESCREVA ( )
Rule 50    cmdescrita -> ESCREVA ( typeArgsEscrita )
Rule 51    typeArgsEscritaAux -> typeArgs
Rule 52    typeArgsEscritaAux -> expr
Rule 53    typeArgsEscrita -> typeArgsEscritaAux
Rule 54    typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux
Rule 55    expr -> CARACTERE
Rule 56    expr -> ID
Rule 57    expr -> REAL
Rule 58    expr -> INTEIRO
Rule 59    expr -> - expr  [precedence=right, level=5]
Rule 60    expr -> expr ^ expr  [precedence=right, level=4]
Rule 61    expr -> expr MOD expr  [precedence=left, level=3]
Rule 62    expr -> expr % expr  [precedence=left, level=3]
Rule 63    expr -> expr \ expr  [precedence=left, level=3]
Rule 64    expr -> expr / expr  [precedence=left, level=3]
Rule 65    expr -> expr * expr  [precedence=left, level=3]
Rule 66    expr -> expr - expr  [precedence=left, level=2]
Rule 67    expr -> expr + expr  [precedence=left, level=2]
Rule 68    expr -> ( expr )

Unused terminals:

    FIMFUNCAO
    RETORNE
    FIMESCOLHA
    ESCOLHA
    POS
    FUNCAO
    VETOR
    REPITA
    PROCEDIMENTO
    CARAC
    FIMREPITA
    CRONOMETRO
    ECO
    TIMER
    ASC
    FIMPROCEDIMENTO

Terminals, with rules where they appear:

%                    : 62
(                    : 23 28 42 47 48 49 50 68
)                    : 23 28 42 47 48 49 50 68
*                    : 65
+                    : 67
,                    : 12 54
-                    : 59 66
/                    : 64
:                    : 8 9 10 11
ALGORITMO            : 1
ASC                  : 
ASSIGN               : 42 43 44
CARAC                : 
CARACTERE            : 1 9 55
CRONOMETRO           : 
E                    : 35
ECO                  : 
ENQUANTO             : 22
ENTAO                : 24 25
EQ                   : 36
ESCOLHA              : 
ESCREVA              : 49 50
ESCREVAL             : 47 48
FACA                 : 22
FALSO                : 29 45
FIMALGORITMO         : 1
FIMENQUANTO          : 22
FIMESCOLHA           : 
FIMFUNCAO            : 
FIMPROCEDIMENTO      : 
FIMREPITA            : 
FIMSE                : 24 25
FUNCAO               : 
GE                   : 38
GT                   : 37
ID                   : 12 13 23 42 43 44 56
INICIO               : 1
INTEIRO              : 11 58
LE                   : 40
LEIA                 : 23
LIMPATELA            : 17
LOGICO               : 8
LT                   : 39
MOD                  : 61
NAO                  : 31
NE                   : 41
OU                   : 34
POS                  : 
PROCEDIMENTO         : 
REAL                 : 10 57
REPITA               : 
RETORNE              : 
SE                   : 24 25
SENAO                : 24
TIMER                : 
VAR                  : 1
VERDADEIRO           : 30 46
VETOR                : 
XOU                  : 33
\                    : 63
^                    : 60
error                : 

Nonterminals, with rules where they appear:

OP_BOOL              : 27
OP_REL               : 32
bloco                : 3 14 22 24 24 25
blocoType            : 1
cmd                  : 14 15
cmdCondicao          : 18
cmdRepeticao         : 16
cmdattrib            : 21
cmdescrita           : 20
cmdleitura           : 19
declaracao           : 6 7
declaracaoType       : 1
declaracaoTypeAux    : 5 7
expr                 : 32 32 44 52 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68
expressaoRelacional  : 22 24 25 27 28
initial              : 0
termoRelacional      : 26 27 31
typeArgs             : 42 43 51
typeArgsEscrita      : 48 50 54
typeArgsEscritaAux   : 53 54
vartype              : 8 9 10 11 12


state 0

    (0) S' -> . initial
    (1) initial -> . ALGORITMO CARACTERE VAR declaracaoType INICIO blocoType FIMALGORITMO
    ALGORITMO       shift and go to state 2

    initial                        shift and go to state 1

state 1

    (0) S' -> initial .


state 2

    (1) initial -> ALGORITMO . CARACTERE VAR declaracaoType INICIO blocoType FIMALGORITMO
    CARACTERE       shift and go to state 3


state 3

    (1) initial -> ALGORITMO CARACTERE . VAR declaracaoType INICIO blocoType FIMALGORITMO
    VAR             shift and go to state 4


state 4

    (1) initial -> ALGORITMO CARACTERE VAR . declaracaoType INICIO blocoType FIMALGORITMO
    (4) declaracaoType -> .
    (5) declaracaoType -> . declaracaoTypeAux
    (6) declaracaoTypeAux -> . declaracao
    (7) declaracaoTypeAux -> . declaracao declaracaoTypeAux
    (8) declaracao -> . vartype : LOGICO
    (9) declaracao -> . vartype : CARACTERE
    (10) declaracao -> . vartype : REAL
    (11) declaracao -> . vartype : INTEIRO
    (12) vartype -> . ID , vartype
    (13) vartype -> . ID
    INICIO          reduce using rule 4 (declaracaoType -> .)
    ID              shift and go to state 9

    declaracaoType                 shift and go to state 5
    declaracaoTypeAux              shift and go to state 6
    declaracao                     shift and go to state 7
    vartype                        shift and go to state 8

state 5

    (1) initial -> ALGORITMO CARACTERE VAR declaracaoType . INICIO blocoType FIMALGORITMO
    INICIO          shift and go to state 10


state 6

    (5) declaracaoType -> declaracaoTypeAux .
    INICIO          reduce using rule 5 (declaracaoType -> declaracaoTypeAux .)


state 7

    (6) declaracaoTypeAux -> declaracao .
    (7) declaracaoTypeAux -> declaracao . declaracaoTypeAux
    (6) declaracaoTypeAux -> . declaracao
    (7) declaracaoTypeAux -> . declaracao declaracaoTypeAux
    (8) declaracao -> . vartype : LOGICO
    (9) declaracao -> . vartype : CARACTERE
    (10) declaracao -> . vartype : REAL
    (11) declaracao -> . vartype : INTEIRO
    (12) vartype -> . ID , vartype
    (13) vartype -> . ID
    INICIO          reduce using rule 6 (declaracaoTypeAux -> declaracao .)
    ID              shift and go to state 9

    declaracao                     shift and go to state 7
    declaracaoTypeAux              shift and go to state 11
    vartype                        shift and go to state 8

state 8

    (8) declaracao -> vartype . : LOGICO
    (9) declaracao -> vartype . : CARACTERE
    (10) declaracao -> vartype . : REAL
    (11) declaracao -> vartype . : INTEIRO
    :               shift and go to state 12


state 9

    (12) vartype -> ID . , vartype
    (13) vartype -> ID .
    ,               shift and go to state 13
    :               reduce using rule 13 (vartype -> ID .)


state 10

    (1) initial -> ALGORITMO CARACTERE VAR declaracaoType INICIO . blocoType FIMALGORITMO
    (2) blocoType -> .
    (3) blocoType -> . bloco
    (14) bloco -> . cmd bloco
    (15) bloco -> . cmd
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 2 (blocoType -> .)
    LIMPATELA       shift and go to state 18
    ENQUANTO        shift and go to state 23
    SE              shift and go to state 24
    LEIA            shift and go to state 25
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 26

    blocoType                      shift and go to state 14
    bloco                          shift and go to state 15
    cmd                            shift and go to state 16
    cmdRepeticao                   shift and go to state 17
    cmdCondicao                    shift and go to state 19
    cmdleitura                     shift and go to state 20
    cmdescrita                     shift and go to state 21
    cmdattrib                      shift and go to state 22

state 11

    (7) declaracaoTypeAux -> declaracao declaracaoTypeAux .
    INICIO          reduce using rule 7 (declaracaoTypeAux -> declaracao declaracaoTypeAux .)


state 12

    (8) declaracao -> vartype : . LOGICO
    (9) declaracao -> vartype : . CARACTERE
    (10) declaracao -> vartype : . REAL
    (11) declaracao -> vartype : . INTEIRO
    LOGICO          shift and go to state 29
    CARACTERE       shift and go to state 30
    REAL            shift and go to state 31
    INTEIRO         shift and go to state 32


state 13

    (12) vartype -> ID , . vartype
    (12) vartype -> . ID , vartype
    (13) vartype -> . ID
    ID              shift and go to state 9

    vartype                        shift and go to state 33

state 14

    (1) initial -> ALGORITMO CARACTERE VAR declaracaoType INICIO blocoType . FIMALGORITMO
    FIMALGORITMO    shift and go to state 34


state 15

    (3) blocoType -> bloco .
    FIMALGORITMO    reduce using rule 3 (blocoType -> bloco .)


state 16

    (14) bloco -> cmd . bloco
    (15) bloco -> cmd .
    (14) bloco -> . cmd bloco
    (15) bloco -> . cmd
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 15 (bloco -> cmd .)
    FIMENQUANTO     reduce using rule 15 (bloco -> cmd .)
    SENAO           reduce using rule 15 (bloco -> cmd .)
    FIMSE           reduce using rule 15 (bloco -> cmd .)
    LIMPATELA       shift and go to state 18
    ENQUANTO        shift and go to state 23
    SE              shift and go to state 24
    LEIA            shift and go to state 25
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 26

    cmd                            shift and go to state 16
    bloco                          shift and go to state 35
    cmdRepeticao                   shift and go to state 17
    cmdCondicao                    shift and go to state 19
    cmdleitura                     shift and go to state 20
    cmdescrita                     shift and go to state 21
    cmdattrib                      shift and go to state 22

state 17

    (16) cmd -> cmdRepeticao .
    LIMPATELA       reduce using rule 16 (cmd -> cmdRepeticao .)
    ENQUANTO        reduce using rule 16 (cmd -> cmdRepeticao .)
    SE              reduce using rule 16 (cmd -> cmdRepeticao .)
    LEIA            reduce using rule 16 (cmd -> cmdRepeticao .)
    ESCREVAL        reduce using rule 16 (cmd -> cmdRepeticao .)
    ESCREVA         reduce using rule 16 (cmd -> cmdRepeticao .)
    ID              reduce using rule 16 (cmd -> cmdRepeticao .)
    FIMALGORITMO    reduce using rule 16 (cmd -> cmdRepeticao .)
    FIMENQUANTO     reduce using rule 16 (cmd -> cmdRepeticao .)
    SENAO           reduce using rule 16 (cmd -> cmdRepeticao .)
    FIMSE           reduce using rule 16 (cmd -> cmdRepeticao .)


state 18

    (17) cmd -> LIMPATELA .
    LIMPATELA       reduce using rule 17 (cmd -> LIMPATELA .)
    ENQUANTO        reduce using rule 17 (cmd -> LIMPATELA .)
    SE              reduce using rule 17 (cmd -> LIMPATELA .)
    LEIA            reduce using rule 17 (cmd -> LIMPATELA .)
    ESCREVAL        reduce using rule 17 (cmd -> LIMPATELA .)
    ESCREVA         reduce using rule 17 (cmd -> LIMPATELA .)
    ID              reduce using rule 17 (cmd -> LIMPATELA .)
    FIMALGORITMO    reduce using rule 17 (cmd -> LIMPATELA .)
    FIMENQUANTO     reduce using rule 17 (cmd -> LIMPATELA .)
    SENAO           reduce using rule 17 (cmd -> LIMPATELA .)
    FIMSE           reduce using rule 17 (cmd -> LIMPATELA .)


state 19

    (18) cmd -> cmdCondicao .
    LIMPATELA       reduce using rule 18 (cmd -> cmdCondicao .)
    ENQUANTO        reduce using rule 18 (cmd -> cmdCondicao .)
    SE              reduce using rule 18 (cmd -> cmdCondicao .)
    LEIA            reduce using rule 18 (cmd -> cmdCondicao .)
    ESCREVAL        reduce using rule 18 (cmd -> cmdCondicao .)
    ESCREVA         reduce using rule 18 (cmd -> cmdCondicao .)
    ID              reduce using rule 18 (cmd -> cmdCondicao .)
    FIMALGORITMO    reduce using rule 18 (cmd -> cmdCondicao .)
    FIMENQUANTO     reduce using rule 18 (cmd -> cmdCondicao .)
    SENAO           reduce using rule 18 (cmd -> cmdCondicao .)
    FIMSE           reduce using rule 18 (cmd -> cmdCondicao .)


state 20

    (19) cmd -> cmdleitura .
    LIMPATELA       reduce using rule 19 (cmd -> cmdleitura .)
    ENQUANTO        reduce using rule 19 (cmd -> cmdleitura .)
    SE              reduce using rule 19 (cmd -> cmdleitura .)
    LEIA            reduce using rule 19 (cmd -> cmdleitura .)
    ESCREVAL        reduce using rule 19 (cmd -> cmdleitura .)
    ESCREVA         reduce using rule 19 (cmd -> cmdleitura .)
    ID              reduce using rule 19 (cmd -> cmdleitura .)
    FIMALGORITMO    reduce using rule 19 (cmd -> cmdleitura .)
    FIMENQUANTO     reduce using rule 19 (cmd -> cmdleitura .)
    SENAO           reduce using rule 19 (cmd -> cmdleitura .)
    FIMSE           reduce using rule 19 (cmd -> cmdleitura .)


state 21

    (20) cmd -> cmdescrita .
    LIMPATELA       reduce using rule 20 (cmd -> cmdescrita .)
    ENQUANTO        reduce using rule 20 (cmd -> cmdescrita .)
    SE              reduce using rule 20 (cmd -> cmdescrita .)
    LEIA            reduce using rule 20 (cmd -> cmdescrita .)
    ESCREVAL        reduce using rule 20 (cmd -> cmdescrita .)
    ESCREVA         reduce using rule 20 (cmd -> cmdescrita .)
    ID              reduce using rule 20 (cmd -> cmdescrita .)
    FIMALGORITMO    reduce using rule 20 (cmd -> cmdescrita .)
    FIMENQUANTO     reduce using rule 20 (cmd -> cmdescrita .)
    SENAO           reduce using rule 20 (cmd -> cmdescrita .)
    FIMSE           reduce using rule 20 (cmd -> cmdescrita .)


state 22

    (21) cmd -> cmdattrib .
    LIMPATELA       reduce using rule 21 (cmd -> cmdattrib .)
    ENQUANTO        reduce using rule 21 (cmd -> cmdattrib .)
    SE              reduce using rule 21 (cmd -> cmdattrib .)
    LEIA            reduce using rule 21 (cmd -> cmdattrib .)
    ESCREVAL        reduce using rule 21 (cmd -> cmdattrib .)
    ESCREVA         reduce using rule 21 (cmd -> cmdattrib .)
    ID              reduce using rule 21 (cmd -> cmdattrib .)
    FIMALGORITMO    reduce using rule 21 (cmd -> cmdattrib .)
    FIMENQUANTO     reduce using rule 21 (cmd -> cmdattrib .)
    SENAO           reduce using rule 21 (cmd -> cmdattrib .)
    FIMSE           reduce using rule 21 (cmd -> cmdattrib .)


state 23

    (22) cmdRepeticao -> ENQUANTO . expressaoRelacional FACA bloco FIMENQUANTO
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 38
    FALSO           shift and go to state 39
    VERDADEIRO      shift and go to state 40
    NAO             shift and go to state 41
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47

    expressaoRelacional            shift and go to state 36
    termoRelacional                shift and go to state 37
    expr                           shift and go to state 42

state 24

    (24) cmdCondicao -> SE . expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> SE . expressaoRelacional ENTAO bloco FIMSE
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 38
    FALSO           shift and go to state 39
    VERDADEIRO      shift and go to state 40
    NAO             shift and go to state 41
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47

    expressaoRelacional            shift and go to state 48
    termoRelacional                shift and go to state 37
    expr                           shift and go to state 42

state 25

    (23) cmdleitura -> LEIA . ( ID )
    (               shift and go to state 49


state 26

    (42) cmdattrib -> ID . ASSIGN ( typeArgs )
    (43) cmdattrib -> ID . ASSIGN typeArgs
    (44) cmdattrib -> ID . ASSIGN expr
    ASSIGN          shift and go to state 50


state 27

    (47) cmdescrita -> ESCREVAL . ( )
    (48) cmdescrita -> ESCREVAL . ( typeArgsEscrita )
    (               shift and go to state 51


state 28

    (49) cmdescrita -> ESCREVA . ( )
    (50) cmdescrita -> ESCREVA . ( typeArgsEscrita )
    (               shift and go to state 52


state 29

    (8) declaracao -> vartype : LOGICO .
    ID              reduce using rule 8 (declaracao -> vartype : LOGICO .)
    INICIO          reduce using rule 8 (declaracao -> vartype : LOGICO .)


state 30

    (9) declaracao -> vartype : CARACTERE .
    ID              reduce using rule 9 (declaracao -> vartype : CARACTERE .)
    INICIO          reduce using rule 9 (declaracao -> vartype : CARACTERE .)


state 31

    (10) declaracao -> vartype : REAL .
    ID              reduce using rule 10 (declaracao -> vartype : REAL .)
    INICIO          reduce using rule 10 (declaracao -> vartype : REAL .)


state 32

    (11) declaracao -> vartype : INTEIRO .
    ID              reduce using rule 11 (declaracao -> vartype : INTEIRO .)
    INICIO          reduce using rule 11 (declaracao -> vartype : INTEIRO .)


state 33

    (12) vartype -> ID , vartype .
    :               reduce using rule 12 (vartype -> ID , vartype .)


state 34

    (1) initial -> ALGORITMO CARACTERE VAR declaracaoType INICIO blocoType FIMALGORITMO .
    $end            reduce using rule 1 (initial -> ALGORITMO CARACTERE VAR declaracaoType INICIO blocoType FIMALGORITMO .)


state 35

    (14) bloco -> cmd bloco .
    FIMALGORITMO    reduce using rule 14 (bloco -> cmd bloco .)
    FIMENQUANTO     reduce using rule 14 (bloco -> cmd bloco .)
    SENAO           reduce using rule 14 (bloco -> cmd bloco .)
    FIMSE           reduce using rule 14 (bloco -> cmd bloco .)


state 36

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional . FACA bloco FIMENQUANTO
    (27) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (33) OP_BOOL -> . XOU
    (34) OP_BOOL -> . OU
    (35) OP_BOOL -> . E
    FACA            shift and go to state 53
    XOU             shift and go to state 55
    OU              shift and go to state 56
    E               shift and go to state 57

    OP_BOOL                        shift and go to state 54

state 37

    (26) expressaoRelacional -> termoRelacional .
    FACA            reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    XOU             reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    OU              reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    E               reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    ENTAO           reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    )               reduce using rule 26 (expressaoRelacional -> termoRelacional .)


state 38

    (28) termoRelacional -> ( . expressaoRelacional )
    (68) expr -> ( . expr )
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 58
    FALSO           shift and go to state 39
    VERDADEIRO      shift and go to state 40
    NAO             shift and go to state 41

    expressaoRelacional            shift and go to state 59
    expr                           shift and go to state 60
    termoRelacional                shift and go to state 37

state 39

    (29) termoRelacional -> FALSO .
    FACA            reduce using rule 29 (termoRelacional -> FALSO .)
    XOU             reduce using rule 29 (termoRelacional -> FALSO .)
    OU              reduce using rule 29 (termoRelacional -> FALSO .)
    E               reduce using rule 29 (termoRelacional -> FALSO .)
    ENTAO           reduce using rule 29 (termoRelacional -> FALSO .)
    )               reduce using rule 29 (termoRelacional -> FALSO .)


state 40

    (30) termoRelacional -> VERDADEIRO .
    FACA            reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    XOU             reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    OU              reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    E               reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    ENTAO           reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    )               reduce using rule 30 (termoRelacional -> VERDADEIRO .)


state 41

    (31) termoRelacional -> NAO . termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 38
    FALSO           shift and go to state 39
    VERDADEIRO      shift and go to state 40
    NAO             shift and go to state 41
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47

    termoRelacional                shift and go to state 61
    expr                           shift and go to state 42

state 42

    (32) termoRelacional -> expr . OP_REL expr
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    (36) OP_REL -> . EQ
    (37) OP_REL -> . GT
    (38) OP_REL -> . GE
    (39) OP_REL -> . LT
    (40) OP_REL -> . LE
    (41) OP_REL -> . NE
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70
    EQ              shift and go to state 71
    GT              shift and go to state 72
    GE              shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    NE              shift and go to state 76

    OP_REL                         shift and go to state 62

state 43

    (55) expr -> CARACTERE .
    ^               reduce using rule 55 (expr -> CARACTERE .)
    MOD             reduce using rule 55 (expr -> CARACTERE .)
    %               reduce using rule 55 (expr -> CARACTERE .)
    \               reduce using rule 55 (expr -> CARACTERE .)
    /               reduce using rule 55 (expr -> CARACTERE .)
    *               reduce using rule 55 (expr -> CARACTERE .)
    -               reduce using rule 55 (expr -> CARACTERE .)
    +               reduce using rule 55 (expr -> CARACTERE .)
    EQ              reduce using rule 55 (expr -> CARACTERE .)
    GT              reduce using rule 55 (expr -> CARACTERE .)
    GE              reduce using rule 55 (expr -> CARACTERE .)
    LT              reduce using rule 55 (expr -> CARACTERE .)
    LE              reduce using rule 55 (expr -> CARACTERE .)
    NE              reduce using rule 55 (expr -> CARACTERE .)
    )               reduce using rule 55 (expr -> CARACTERE .)
    LIMPATELA       reduce using rule 55 (expr -> CARACTERE .)
    ENQUANTO        reduce using rule 55 (expr -> CARACTERE .)
    SE              reduce using rule 55 (expr -> CARACTERE .)
    LEIA            reduce using rule 55 (expr -> CARACTERE .)
    ESCREVAL        reduce using rule 55 (expr -> CARACTERE .)
    ESCREVA         reduce using rule 55 (expr -> CARACTERE .)
    ID              reduce using rule 55 (expr -> CARACTERE .)
    FIMALGORITMO    reduce using rule 55 (expr -> CARACTERE .)
    FIMENQUANTO     reduce using rule 55 (expr -> CARACTERE .)
    SENAO           reduce using rule 55 (expr -> CARACTERE .)
    FIMSE           reduce using rule 55 (expr -> CARACTERE .)
    ,               reduce using rule 55 (expr -> CARACTERE .)
    FACA            reduce using rule 55 (expr -> CARACTERE .)
    XOU             reduce using rule 55 (expr -> CARACTERE .)
    OU              reduce using rule 55 (expr -> CARACTERE .)
    E               reduce using rule 55 (expr -> CARACTERE .)
    ENTAO           reduce using rule 55 (expr -> CARACTERE .)


state 44

    (56) expr -> ID .
    ^               reduce using rule 56 (expr -> ID .)
    MOD             reduce using rule 56 (expr -> ID .)
    %               reduce using rule 56 (expr -> ID .)
    \               reduce using rule 56 (expr -> ID .)
    /               reduce using rule 56 (expr -> ID .)
    *               reduce using rule 56 (expr -> ID .)
    -               reduce using rule 56 (expr -> ID .)
    +               reduce using rule 56 (expr -> ID .)
    EQ              reduce using rule 56 (expr -> ID .)
    GT              reduce using rule 56 (expr -> ID .)
    GE              reduce using rule 56 (expr -> ID .)
    LT              reduce using rule 56 (expr -> ID .)
    LE              reduce using rule 56 (expr -> ID .)
    NE              reduce using rule 56 (expr -> ID .)
    )               reduce using rule 56 (expr -> ID .)
    LIMPATELA       reduce using rule 56 (expr -> ID .)
    ENQUANTO        reduce using rule 56 (expr -> ID .)
    SE              reduce using rule 56 (expr -> ID .)
    LEIA            reduce using rule 56 (expr -> ID .)
    ESCREVAL        reduce using rule 56 (expr -> ID .)
    ESCREVA         reduce using rule 56 (expr -> ID .)
    ID              reduce using rule 56 (expr -> ID .)
    FIMALGORITMO    reduce using rule 56 (expr -> ID .)
    FIMENQUANTO     reduce using rule 56 (expr -> ID .)
    SENAO           reduce using rule 56 (expr -> ID .)
    FIMSE           reduce using rule 56 (expr -> ID .)
    ,               reduce using rule 56 (expr -> ID .)
    FACA            reduce using rule 56 (expr -> ID .)
    XOU             reduce using rule 56 (expr -> ID .)
    OU              reduce using rule 56 (expr -> ID .)
    E               reduce using rule 56 (expr -> ID .)
    ENTAO           reduce using rule 56 (expr -> ID .)


state 45

    (57) expr -> REAL .
    ^               reduce using rule 57 (expr -> REAL .)
    MOD             reduce using rule 57 (expr -> REAL .)
    %               reduce using rule 57 (expr -> REAL .)
    \               reduce using rule 57 (expr -> REAL .)
    /               reduce using rule 57 (expr -> REAL .)
    *               reduce using rule 57 (expr -> REAL .)
    -               reduce using rule 57 (expr -> REAL .)
    +               reduce using rule 57 (expr -> REAL .)
    EQ              reduce using rule 57 (expr -> REAL .)
    GT              reduce using rule 57 (expr -> REAL .)
    GE              reduce using rule 57 (expr -> REAL .)
    LT              reduce using rule 57 (expr -> REAL .)
    LE              reduce using rule 57 (expr -> REAL .)
    NE              reduce using rule 57 (expr -> REAL .)
    )               reduce using rule 57 (expr -> REAL .)
    LIMPATELA       reduce using rule 57 (expr -> REAL .)
    ENQUANTO        reduce using rule 57 (expr -> REAL .)
    SE              reduce using rule 57 (expr -> REAL .)
    LEIA            reduce using rule 57 (expr -> REAL .)
    ESCREVAL        reduce using rule 57 (expr -> REAL .)
    ESCREVA         reduce using rule 57 (expr -> REAL .)
    ID              reduce using rule 57 (expr -> REAL .)
    FIMALGORITMO    reduce using rule 57 (expr -> REAL .)
    FIMENQUANTO     reduce using rule 57 (expr -> REAL .)
    SENAO           reduce using rule 57 (expr -> REAL .)
    FIMSE           reduce using rule 57 (expr -> REAL .)
    ,               reduce using rule 57 (expr -> REAL .)
    FACA            reduce using rule 57 (expr -> REAL .)
    XOU             reduce using rule 57 (expr -> REAL .)
    OU              reduce using rule 57 (expr -> REAL .)
    E               reduce using rule 57 (expr -> REAL .)
    ENTAO           reduce using rule 57 (expr -> REAL .)


state 46

    (58) expr -> INTEIRO .
    ^               reduce using rule 58 (expr -> INTEIRO .)
    MOD             reduce using rule 58 (expr -> INTEIRO .)
    %               reduce using rule 58 (expr -> INTEIRO .)
    \               reduce using rule 58 (expr -> INTEIRO .)
    /               reduce using rule 58 (expr -> INTEIRO .)
    *               reduce using rule 58 (expr -> INTEIRO .)
    -               reduce using rule 58 (expr -> INTEIRO .)
    +               reduce using rule 58 (expr -> INTEIRO .)
    EQ              reduce using rule 58 (expr -> INTEIRO .)
    GT              reduce using rule 58 (expr -> INTEIRO .)
    GE              reduce using rule 58 (expr -> INTEIRO .)
    LT              reduce using rule 58 (expr -> INTEIRO .)
    LE              reduce using rule 58 (expr -> INTEIRO .)
    NE              reduce using rule 58 (expr -> INTEIRO .)
    )               reduce using rule 58 (expr -> INTEIRO .)
    LIMPATELA       reduce using rule 58 (expr -> INTEIRO .)
    ENQUANTO        reduce using rule 58 (expr -> INTEIRO .)
    SE              reduce using rule 58 (expr -> INTEIRO .)
    LEIA            reduce using rule 58 (expr -> INTEIRO .)
    ESCREVAL        reduce using rule 58 (expr -> INTEIRO .)
    ESCREVA         reduce using rule 58 (expr -> INTEIRO .)
    ID              reduce using rule 58 (expr -> INTEIRO .)
    FIMALGORITMO    reduce using rule 58 (expr -> INTEIRO .)
    FIMENQUANTO     reduce using rule 58 (expr -> INTEIRO .)
    SENAO           reduce using rule 58 (expr -> INTEIRO .)
    FIMSE           reduce using rule 58 (expr -> INTEIRO .)
    ,               reduce using rule 58 (expr -> INTEIRO .)
    FACA            reduce using rule 58 (expr -> INTEIRO .)
    XOU             reduce using rule 58 (expr -> INTEIRO .)
    OU              reduce using rule 58 (expr -> INTEIRO .)
    E               reduce using rule 58 (expr -> INTEIRO .)
    ENTAO           reduce using rule 58 (expr -> INTEIRO .)


state 47

    (59) expr -> - . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 77

state 48

    (24) cmdCondicao -> SE expressaoRelacional . ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional . ENTAO bloco FIMSE
    (27) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (33) OP_BOOL -> . XOU
    (34) OP_BOOL -> . OU
    (35) OP_BOOL -> . E
    ENTAO           shift and go to state 79
    XOU             shift and go to state 55
    OU              shift and go to state 56
    E               shift and go to state 57

    OP_BOOL                        shift and go to state 54

state 49

    (23) cmdleitura -> LEIA ( . ID )
    ID              shift and go to state 80


state 50

    (42) cmdattrib -> ID ASSIGN . ( typeArgs )
    (43) cmdattrib -> ID ASSIGN . typeArgs
    (44) cmdattrib -> ID ASSIGN . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 81
    FALSO           shift and go to state 84
    VERDADEIRO      shift and go to state 85
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47

    typeArgs                       shift and go to state 82
    expr                           shift and go to state 83

state 51

    (47) cmdescrita -> ESCREVAL ( . )
    (48) cmdescrita -> ESCREVAL ( . typeArgsEscrita )
    (53) typeArgsEscrita -> . typeArgsEscritaAux
    (54) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (51) typeArgsEscritaAux -> . typeArgs
    (52) typeArgsEscritaAux -> . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    )               shift and go to state 86
    FALSO           shift and go to state 84
    VERDADEIRO      shift and go to state 85
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    typeArgsEscrita                shift and go to state 87
    typeArgsEscritaAux             shift and go to state 88
    typeArgs                       shift and go to state 89
    expr                           shift and go to state 90

state 52

    (49) cmdescrita -> ESCREVA ( . )
    (50) cmdescrita -> ESCREVA ( . typeArgsEscrita )
    (53) typeArgsEscrita -> . typeArgsEscritaAux
    (54) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (51) typeArgsEscritaAux -> . typeArgs
    (52) typeArgsEscritaAux -> . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    )               shift and go to state 91
    FALSO           shift and go to state 84
    VERDADEIRO      shift and go to state 85
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    typeArgsEscrita                shift and go to state 92
    typeArgsEscritaAux             shift and go to state 88
    typeArgs                       shift and go to state 89
    expr                           shift and go to state 90

state 53

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA . bloco FIMENQUANTO
    (14) bloco -> . cmd bloco
    (15) bloco -> . cmd
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 18
    ENQUANTO        shift and go to state 23
    SE              shift and go to state 24
    LEIA            shift and go to state 25
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 26

    bloco                          shift and go to state 93
    cmd                            shift and go to state 16
    cmdRepeticao                   shift and go to state 17
    cmdCondicao                    shift and go to state 19
    cmdleitura                     shift and go to state 20
    cmdescrita                     shift and go to state 21
    cmdattrib                      shift and go to state 22

state 54

    (27) expressaoRelacional -> expressaoRelacional OP_BOOL . termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 38
    FALSO           shift and go to state 39
    VERDADEIRO      shift and go to state 40
    NAO             shift and go to state 41
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47

    termoRelacional                shift and go to state 94
    expr                           shift and go to state 42

state 55

    (33) OP_BOOL -> XOU .
    (               reduce using rule 33 (OP_BOOL -> XOU .)
    FALSO           reduce using rule 33 (OP_BOOL -> XOU .)
    VERDADEIRO      reduce using rule 33 (OP_BOOL -> XOU .)
    NAO             reduce using rule 33 (OP_BOOL -> XOU .)
    CARACTERE       reduce using rule 33 (OP_BOOL -> XOU .)
    ID              reduce using rule 33 (OP_BOOL -> XOU .)
    REAL            reduce using rule 33 (OP_BOOL -> XOU .)
    INTEIRO         reduce using rule 33 (OP_BOOL -> XOU .)
    -               reduce using rule 33 (OP_BOOL -> XOU .)


state 56

    (34) OP_BOOL -> OU .
    (               reduce using rule 34 (OP_BOOL -> OU .)
    FALSO           reduce using rule 34 (OP_BOOL -> OU .)
    VERDADEIRO      reduce using rule 34 (OP_BOOL -> OU .)
    NAO             reduce using rule 34 (OP_BOOL -> OU .)
    CARACTERE       reduce using rule 34 (OP_BOOL -> OU .)
    ID              reduce using rule 34 (OP_BOOL -> OU .)
    REAL            reduce using rule 34 (OP_BOOL -> OU .)
    INTEIRO         reduce using rule 34 (OP_BOOL -> OU .)
    -               reduce using rule 34 (OP_BOOL -> OU .)


state 57

    (35) OP_BOOL -> E .
    (               reduce using rule 35 (OP_BOOL -> E .)
    FALSO           reduce using rule 35 (OP_BOOL -> E .)
    VERDADEIRO      reduce using rule 35 (OP_BOOL -> E .)
    NAO             reduce using rule 35 (OP_BOOL -> E .)
    CARACTERE       reduce using rule 35 (OP_BOOL -> E .)
    ID              reduce using rule 35 (OP_BOOL -> E .)
    REAL            reduce using rule 35 (OP_BOOL -> E .)
    INTEIRO         reduce using rule 35 (OP_BOOL -> E .)
    -               reduce using rule 35 (OP_BOOL -> E .)


state 58

    (68) expr -> ( . expr )
    (28) termoRelacional -> ( . expressaoRelacional )
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 58
    FALSO           shift and go to state 39
    VERDADEIRO      shift and go to state 40
    NAO             shift and go to state 41

    expr                           shift and go to state 60
    expressaoRelacional            shift and go to state 59
    termoRelacional                shift and go to state 37

state 59

    (28) termoRelacional -> ( expressaoRelacional . )
    (27) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (33) OP_BOOL -> . XOU
    (34) OP_BOOL -> . OU
    (35) OP_BOOL -> . E
    )               shift and go to state 95
    XOU             shift and go to state 55
    OU              shift and go to state 56
    E               shift and go to state 57

    OP_BOOL                        shift and go to state 54

state 60

    (68) expr -> ( expr . )
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    (32) termoRelacional -> expr . OP_REL expr
    (36) OP_REL -> . EQ
    (37) OP_REL -> . GT
    (38) OP_REL -> . GE
    (39) OP_REL -> . LT
    (40) OP_REL -> . LE
    (41) OP_REL -> . NE
    )               shift and go to state 96
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70
    EQ              shift and go to state 71
    GT              shift and go to state 72
    GE              shift and go to state 73
    LT              shift and go to state 74
    LE              shift and go to state 75
    NE              shift and go to state 76

    OP_REL                         shift and go to state 62

state 61

    (31) termoRelacional -> NAO termoRelacional .
    FACA            reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    XOU             reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    OU              reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    E               reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    ENTAO           reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    )               reduce using rule 31 (termoRelacional -> NAO termoRelacional .)


state 62

    (32) termoRelacional -> expr OP_REL . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 97

state 63

    (60) expr -> expr ^ . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 98

state 64

    (61) expr -> expr MOD . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 99

state 65

    (62) expr -> expr % . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 100

state 66

    (63) expr -> expr \ . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 101

state 67

    (64) expr -> expr / . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 102

state 68

    (65) expr -> expr * . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 103

state 69

    (66) expr -> expr - . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 104

state 70

    (67) expr -> expr + . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 105

state 71

    (36) OP_REL -> EQ .
    CARACTERE       reduce using rule 36 (OP_REL -> EQ .)
    ID              reduce using rule 36 (OP_REL -> EQ .)
    REAL            reduce using rule 36 (OP_REL -> EQ .)
    INTEIRO         reduce using rule 36 (OP_REL -> EQ .)
    -               reduce using rule 36 (OP_REL -> EQ .)
    (               reduce using rule 36 (OP_REL -> EQ .)


state 72

    (37) OP_REL -> GT .
    CARACTERE       reduce using rule 37 (OP_REL -> GT .)
    ID              reduce using rule 37 (OP_REL -> GT .)
    REAL            reduce using rule 37 (OP_REL -> GT .)
    INTEIRO         reduce using rule 37 (OP_REL -> GT .)
    -               reduce using rule 37 (OP_REL -> GT .)
    (               reduce using rule 37 (OP_REL -> GT .)


state 73

    (38) OP_REL -> GE .
    CARACTERE       reduce using rule 38 (OP_REL -> GE .)
    ID              reduce using rule 38 (OP_REL -> GE .)
    REAL            reduce using rule 38 (OP_REL -> GE .)
    INTEIRO         reduce using rule 38 (OP_REL -> GE .)
    -               reduce using rule 38 (OP_REL -> GE .)
    (               reduce using rule 38 (OP_REL -> GE .)


state 74

    (39) OP_REL -> LT .
    CARACTERE       reduce using rule 39 (OP_REL -> LT .)
    ID              reduce using rule 39 (OP_REL -> LT .)
    REAL            reduce using rule 39 (OP_REL -> LT .)
    INTEIRO         reduce using rule 39 (OP_REL -> LT .)
    -               reduce using rule 39 (OP_REL -> LT .)
    (               reduce using rule 39 (OP_REL -> LT .)


state 75

    (40) OP_REL -> LE .
    CARACTERE       reduce using rule 40 (OP_REL -> LE .)
    ID              reduce using rule 40 (OP_REL -> LE .)
    REAL            reduce using rule 40 (OP_REL -> LE .)
    INTEIRO         reduce using rule 40 (OP_REL -> LE .)
    -               reduce using rule 40 (OP_REL -> LE .)
    (               reduce using rule 40 (OP_REL -> LE .)


state 76

    (41) OP_REL -> NE .
    CARACTERE       reduce using rule 41 (OP_REL -> NE .)
    ID              reduce using rule 41 (OP_REL -> NE .)
    REAL            reduce using rule 41 (OP_REL -> NE .)
    INTEIRO         reduce using rule 41 (OP_REL -> NE .)
    -               reduce using rule 41 (OP_REL -> NE .)
    (               reduce using rule 41 (OP_REL -> NE .)


state 77

    (59) expr -> - expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    ^               reduce using rule 59 (expr -> - expr .)
    MOD             reduce using rule 59 (expr -> - expr .)
    %               reduce using rule 59 (expr -> - expr .)
    \               reduce using rule 59 (expr -> - expr .)
    /               reduce using rule 59 (expr -> - expr .)
    *               reduce using rule 59 (expr -> - expr .)
    -               reduce using rule 59 (expr -> - expr .)
    +               reduce using rule 59 (expr -> - expr .)
    EQ              reduce using rule 59 (expr -> - expr .)
    GT              reduce using rule 59 (expr -> - expr .)
    GE              reduce using rule 59 (expr -> - expr .)
    LT              reduce using rule 59 (expr -> - expr .)
    LE              reduce using rule 59 (expr -> - expr .)
    NE              reduce using rule 59 (expr -> - expr .)
    )               reduce using rule 59 (expr -> - expr .)
    LIMPATELA       reduce using rule 59 (expr -> - expr .)
    ENQUANTO        reduce using rule 59 (expr -> - expr .)
    SE              reduce using rule 59 (expr -> - expr .)
    LEIA            reduce using rule 59 (expr -> - expr .)
    ESCREVAL        reduce using rule 59 (expr -> - expr .)
    ESCREVA         reduce using rule 59 (expr -> - expr .)
    ID              reduce using rule 59 (expr -> - expr .)
    FIMALGORITMO    reduce using rule 59 (expr -> - expr .)
    FIMENQUANTO     reduce using rule 59 (expr -> - expr .)
    SENAO           reduce using rule 59 (expr -> - expr .)
    FIMSE           reduce using rule 59 (expr -> - expr .)
    ,               reduce using rule 59 (expr -> - expr .)
    FACA            reduce using rule 59 (expr -> - expr .)
    XOU             reduce using rule 59 (expr -> - expr .)
    OU              reduce using rule 59 (expr -> - expr .)
    E               reduce using rule 59 (expr -> - expr .)
    ENTAO           reduce using rule 59 (expr -> - expr .)


state 78

    (68) expr -> ( . expr )
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    expr                           shift and go to state 106

state 79

    (24) cmdCondicao -> SE expressaoRelacional ENTAO . bloco SENAO bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional ENTAO . bloco FIMSE
    (14) bloco -> . cmd bloco
    (15) bloco -> . cmd
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 18
    ENQUANTO        shift and go to state 23
    SE              shift and go to state 24
    LEIA            shift and go to state 25
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 26

    bloco                          shift and go to state 107
    cmd                            shift and go to state 16
    cmdRepeticao                   shift and go to state 17
    cmdCondicao                    shift and go to state 19
    cmdleitura                     shift and go to state 20
    cmdescrita                     shift and go to state 21
    cmdattrib                      shift and go to state 22

state 80

    (23) cmdleitura -> LEIA ( ID . )
    )               shift and go to state 108


state 81

    (42) cmdattrib -> ID ASSIGN ( . typeArgs )
    (68) expr -> ( . expr )
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    FALSO           shift and go to state 84
    VERDADEIRO      shift and go to state 85
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    typeArgs                       shift and go to state 109
    expr                           shift and go to state 106

state 82

    (43) cmdattrib -> ID ASSIGN typeArgs .
    LIMPATELA       reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    ENQUANTO        reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    SE              reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    LEIA            reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    ESCREVAL        reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    ESCREVA         reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    ID              reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    FIMALGORITMO    reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    FIMENQUANTO     reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    SENAO           reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)
    FIMSE           reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)


state 83

    (44) cmdattrib -> ID ASSIGN expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    LIMPATELA       reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    ENQUANTO        reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    SE              reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    LEIA            reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    ESCREVAL        reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    ESCREVA         reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    ID              reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    FIMALGORITMO    reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    FIMENQUANTO     reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    SENAO           reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    FIMSE           reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 84

    (45) typeArgs -> FALSO .
    LIMPATELA       reduce using rule 45 (typeArgs -> FALSO .)
    ENQUANTO        reduce using rule 45 (typeArgs -> FALSO .)
    SE              reduce using rule 45 (typeArgs -> FALSO .)
    LEIA            reduce using rule 45 (typeArgs -> FALSO .)
    ESCREVAL        reduce using rule 45 (typeArgs -> FALSO .)
    ESCREVA         reduce using rule 45 (typeArgs -> FALSO .)
    ID              reduce using rule 45 (typeArgs -> FALSO .)
    FIMALGORITMO    reduce using rule 45 (typeArgs -> FALSO .)
    FIMENQUANTO     reduce using rule 45 (typeArgs -> FALSO .)
    SENAO           reduce using rule 45 (typeArgs -> FALSO .)
    FIMSE           reduce using rule 45 (typeArgs -> FALSO .)
    )               reduce using rule 45 (typeArgs -> FALSO .)
    ,               reduce using rule 45 (typeArgs -> FALSO .)


state 85

    (46) typeArgs -> VERDADEIRO .
    LIMPATELA       reduce using rule 46 (typeArgs -> VERDADEIRO .)
    ENQUANTO        reduce using rule 46 (typeArgs -> VERDADEIRO .)
    SE              reduce using rule 46 (typeArgs -> VERDADEIRO .)
    LEIA            reduce using rule 46 (typeArgs -> VERDADEIRO .)
    ESCREVAL        reduce using rule 46 (typeArgs -> VERDADEIRO .)
    ESCREVA         reduce using rule 46 (typeArgs -> VERDADEIRO .)
    ID              reduce using rule 46 (typeArgs -> VERDADEIRO .)
    FIMALGORITMO    reduce using rule 46 (typeArgs -> VERDADEIRO .)
    FIMENQUANTO     reduce using rule 46 (typeArgs -> VERDADEIRO .)
    SENAO           reduce using rule 46 (typeArgs -> VERDADEIRO .)
    FIMSE           reduce using rule 46 (typeArgs -> VERDADEIRO .)
    )               reduce using rule 46 (typeArgs -> VERDADEIRO .)
    ,               reduce using rule 46 (typeArgs -> VERDADEIRO .)


state 86

    (47) cmdescrita -> ESCREVAL ( ) .
    LIMPATELA       reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    ENQUANTO        reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    SE              reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    LEIA            reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    ESCREVAL        reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    ESCREVA         reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    ID              reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    FIMALGORITMO    reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    FIMENQUANTO     reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    SENAO           reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)
    FIMSE           reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)


state 87

    (48) cmdescrita -> ESCREVAL ( typeArgsEscrita . )
    (54) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 110
    ,               shift and go to state 111


state 88

    (53) typeArgsEscrita -> typeArgsEscritaAux .
    )               reduce using rule 53 (typeArgsEscrita -> typeArgsEscritaAux .)
    ,               reduce using rule 53 (typeArgsEscrita -> typeArgsEscritaAux .)


state 89

    (51) typeArgsEscritaAux -> typeArgs .
    )               reduce using rule 51 (typeArgsEscritaAux -> typeArgs .)
    ,               reduce using rule 51 (typeArgsEscritaAux -> typeArgs .)


state 90

    (52) typeArgsEscritaAux -> expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    )               reduce using rule 52 (typeArgsEscritaAux -> expr .)
    ,               reduce using rule 52 (typeArgsEscritaAux -> expr .)
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 91

    (49) cmdescrita -> ESCREVA ( ) .
    LIMPATELA       reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    ENQUANTO        reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    SE              reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    LEIA            reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    ESCREVAL        reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    ESCREVA         reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    ID              reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    FIMALGORITMO    reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    FIMENQUANTO     reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    SENAO           reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)
    FIMSE           reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)


state 92

    (50) cmdescrita -> ESCREVA ( typeArgsEscrita . )
    (54) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 112
    ,               shift and go to state 111


state 93

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco . FIMENQUANTO
    FIMENQUANTO     shift and go to state 113


state 94

    (27) expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .
    FACA            reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    XOU             reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    OU              reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    E               reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    ENTAO           reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    )               reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)


state 95

    (28) termoRelacional -> ( expressaoRelacional ) .
    FACA            reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    XOU             reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    OU              reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    E               reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    ENTAO           reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    )               reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)


state 96

    (68) expr -> ( expr ) .
    ^               reduce using rule 68 (expr -> ( expr ) .)
    MOD             reduce using rule 68 (expr -> ( expr ) .)
    %               reduce using rule 68 (expr -> ( expr ) .)
    \               reduce using rule 68 (expr -> ( expr ) .)
    /               reduce using rule 68 (expr -> ( expr ) .)
    *               reduce using rule 68 (expr -> ( expr ) .)
    -               reduce using rule 68 (expr -> ( expr ) .)
    +               reduce using rule 68 (expr -> ( expr ) .)
    EQ              reduce using rule 68 (expr -> ( expr ) .)
    GT              reduce using rule 68 (expr -> ( expr ) .)
    GE              reduce using rule 68 (expr -> ( expr ) .)
    LT              reduce using rule 68 (expr -> ( expr ) .)
    LE              reduce using rule 68 (expr -> ( expr ) .)
    NE              reduce using rule 68 (expr -> ( expr ) .)
    )               reduce using rule 68 (expr -> ( expr ) .)
    LIMPATELA       reduce using rule 68 (expr -> ( expr ) .)
    ENQUANTO        reduce using rule 68 (expr -> ( expr ) .)
    SE              reduce using rule 68 (expr -> ( expr ) .)
    LEIA            reduce using rule 68 (expr -> ( expr ) .)
    ESCREVAL        reduce using rule 68 (expr -> ( expr ) .)
    ESCREVA         reduce using rule 68 (expr -> ( expr ) .)
    ID              reduce using rule 68 (expr -> ( expr ) .)
    FIMALGORITMO    reduce using rule 68 (expr -> ( expr ) .)
    FIMENQUANTO     reduce using rule 68 (expr -> ( expr ) .)
    SENAO           reduce using rule 68 (expr -> ( expr ) .)
    FIMSE           reduce using rule 68 (expr -> ( expr ) .)
    ,               reduce using rule 68 (expr -> ( expr ) .)
    FACA            reduce using rule 68 (expr -> ( expr ) .)
    XOU             reduce using rule 68 (expr -> ( expr ) .)
    OU              reduce using rule 68 (expr -> ( expr ) .)
    E               reduce using rule 68 (expr -> ( expr ) .)
    ENTAO           reduce using rule 68 (expr -> ( expr ) .)


state 97

    (32) termoRelacional -> expr OP_REL expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    FACA            reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    XOU             reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    OU              reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    E               reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    ENTAO           reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    )               reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 98

    (60) expr -> expr ^ expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 60 (expr -> expr ^ expr .)
    %               reduce using rule 60 (expr -> expr ^ expr .)
    \               reduce using rule 60 (expr -> expr ^ expr .)
    /               reduce using rule 60 (expr -> expr ^ expr .)
    *               reduce using rule 60 (expr -> expr ^ expr .)
    -               reduce using rule 60 (expr -> expr ^ expr .)
    +               reduce using rule 60 (expr -> expr ^ expr .)
    EQ              reduce using rule 60 (expr -> expr ^ expr .)
    GT              reduce using rule 60 (expr -> expr ^ expr .)
    GE              reduce using rule 60 (expr -> expr ^ expr .)
    LT              reduce using rule 60 (expr -> expr ^ expr .)
    LE              reduce using rule 60 (expr -> expr ^ expr .)
    NE              reduce using rule 60 (expr -> expr ^ expr .)
    )               reduce using rule 60 (expr -> expr ^ expr .)
    LIMPATELA       reduce using rule 60 (expr -> expr ^ expr .)
    ENQUANTO        reduce using rule 60 (expr -> expr ^ expr .)
    SE              reduce using rule 60 (expr -> expr ^ expr .)
    LEIA            reduce using rule 60 (expr -> expr ^ expr .)
    ESCREVAL        reduce using rule 60 (expr -> expr ^ expr .)
    ESCREVA         reduce using rule 60 (expr -> expr ^ expr .)
    ID              reduce using rule 60 (expr -> expr ^ expr .)
    FIMALGORITMO    reduce using rule 60 (expr -> expr ^ expr .)
    FIMENQUANTO     reduce using rule 60 (expr -> expr ^ expr .)
    SENAO           reduce using rule 60 (expr -> expr ^ expr .)
    FIMSE           reduce using rule 60 (expr -> expr ^ expr .)
    ,               reduce using rule 60 (expr -> expr ^ expr .)
    FACA            reduce using rule 60 (expr -> expr ^ expr .)
    XOU             reduce using rule 60 (expr -> expr ^ expr .)
    OU              reduce using rule 60 (expr -> expr ^ expr .)
    E               reduce using rule 60 (expr -> expr ^ expr .)
    ENTAO           reduce using rule 60 (expr -> expr ^ expr .)
    ^               shift and go to state 63


state 99

    (61) expr -> expr MOD expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 61 (expr -> expr MOD expr .)
    %               reduce using rule 61 (expr -> expr MOD expr .)
    \               reduce using rule 61 (expr -> expr MOD expr .)
    /               reduce using rule 61 (expr -> expr MOD expr .)
    *               reduce using rule 61 (expr -> expr MOD expr .)
    -               reduce using rule 61 (expr -> expr MOD expr .)
    +               reduce using rule 61 (expr -> expr MOD expr .)
    EQ              reduce using rule 61 (expr -> expr MOD expr .)
    GT              reduce using rule 61 (expr -> expr MOD expr .)
    GE              reduce using rule 61 (expr -> expr MOD expr .)
    LT              reduce using rule 61 (expr -> expr MOD expr .)
    LE              reduce using rule 61 (expr -> expr MOD expr .)
    NE              reduce using rule 61 (expr -> expr MOD expr .)
    )               reduce using rule 61 (expr -> expr MOD expr .)
    LIMPATELA       reduce using rule 61 (expr -> expr MOD expr .)
    ENQUANTO        reduce using rule 61 (expr -> expr MOD expr .)
    SE              reduce using rule 61 (expr -> expr MOD expr .)
    LEIA            reduce using rule 61 (expr -> expr MOD expr .)
    ESCREVAL        reduce using rule 61 (expr -> expr MOD expr .)
    ESCREVA         reduce using rule 61 (expr -> expr MOD expr .)
    ID              reduce using rule 61 (expr -> expr MOD expr .)
    FIMALGORITMO    reduce using rule 61 (expr -> expr MOD expr .)
    FIMENQUANTO     reduce using rule 61 (expr -> expr MOD expr .)
    SENAO           reduce using rule 61 (expr -> expr MOD expr .)
    FIMSE           reduce using rule 61 (expr -> expr MOD expr .)
    ,               reduce using rule 61 (expr -> expr MOD expr .)
    FACA            reduce using rule 61 (expr -> expr MOD expr .)
    XOU             reduce using rule 61 (expr -> expr MOD expr .)
    OU              reduce using rule 61 (expr -> expr MOD expr .)
    E               reduce using rule 61 (expr -> expr MOD expr .)
    ENTAO           reduce using rule 61 (expr -> expr MOD expr .)
    ^               shift and go to state 63


state 100

    (62) expr -> expr % expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 62 (expr -> expr % expr .)
    %               reduce using rule 62 (expr -> expr % expr .)
    \               reduce using rule 62 (expr -> expr % expr .)
    /               reduce using rule 62 (expr -> expr % expr .)
    *               reduce using rule 62 (expr -> expr % expr .)
    -               reduce using rule 62 (expr -> expr % expr .)
    +               reduce using rule 62 (expr -> expr % expr .)
    EQ              reduce using rule 62 (expr -> expr % expr .)
    GT              reduce using rule 62 (expr -> expr % expr .)
    GE              reduce using rule 62 (expr -> expr % expr .)
    LT              reduce using rule 62 (expr -> expr % expr .)
    LE              reduce using rule 62 (expr -> expr % expr .)
    NE              reduce using rule 62 (expr -> expr % expr .)
    )               reduce using rule 62 (expr -> expr % expr .)
    LIMPATELA       reduce using rule 62 (expr -> expr % expr .)
    ENQUANTO        reduce using rule 62 (expr -> expr % expr .)
    SE              reduce using rule 62 (expr -> expr % expr .)
    LEIA            reduce using rule 62 (expr -> expr % expr .)
    ESCREVAL        reduce using rule 62 (expr -> expr % expr .)
    ESCREVA         reduce using rule 62 (expr -> expr % expr .)
    ID              reduce using rule 62 (expr -> expr % expr .)
    FIMALGORITMO    reduce using rule 62 (expr -> expr % expr .)
    FIMENQUANTO     reduce using rule 62 (expr -> expr % expr .)
    SENAO           reduce using rule 62 (expr -> expr % expr .)
    FIMSE           reduce using rule 62 (expr -> expr % expr .)
    ,               reduce using rule 62 (expr -> expr % expr .)
    FACA            reduce using rule 62 (expr -> expr % expr .)
    XOU             reduce using rule 62 (expr -> expr % expr .)
    OU              reduce using rule 62 (expr -> expr % expr .)
    E               reduce using rule 62 (expr -> expr % expr .)
    ENTAO           reduce using rule 62 (expr -> expr % expr .)
    ^               shift and go to state 63


state 101

    (63) expr -> expr \ expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 63 (expr -> expr \ expr .)
    %               reduce using rule 63 (expr -> expr \ expr .)
    \               reduce using rule 63 (expr -> expr \ expr .)
    /               reduce using rule 63 (expr -> expr \ expr .)
    *               reduce using rule 63 (expr -> expr \ expr .)
    -               reduce using rule 63 (expr -> expr \ expr .)
    +               reduce using rule 63 (expr -> expr \ expr .)
    EQ              reduce using rule 63 (expr -> expr \ expr .)
    GT              reduce using rule 63 (expr -> expr \ expr .)
    GE              reduce using rule 63 (expr -> expr \ expr .)
    LT              reduce using rule 63 (expr -> expr \ expr .)
    LE              reduce using rule 63 (expr -> expr \ expr .)
    NE              reduce using rule 63 (expr -> expr \ expr .)
    )               reduce using rule 63 (expr -> expr \ expr .)
    LIMPATELA       reduce using rule 63 (expr -> expr \ expr .)
    ENQUANTO        reduce using rule 63 (expr -> expr \ expr .)
    SE              reduce using rule 63 (expr -> expr \ expr .)
    LEIA            reduce using rule 63 (expr -> expr \ expr .)
    ESCREVAL        reduce using rule 63 (expr -> expr \ expr .)
    ESCREVA         reduce using rule 63 (expr -> expr \ expr .)
    ID              reduce using rule 63 (expr -> expr \ expr .)
    FIMALGORITMO    reduce using rule 63 (expr -> expr \ expr .)
    FIMENQUANTO     reduce using rule 63 (expr -> expr \ expr .)
    SENAO           reduce using rule 63 (expr -> expr \ expr .)
    FIMSE           reduce using rule 63 (expr -> expr \ expr .)
    ,               reduce using rule 63 (expr -> expr \ expr .)
    FACA            reduce using rule 63 (expr -> expr \ expr .)
    XOU             reduce using rule 63 (expr -> expr \ expr .)
    OU              reduce using rule 63 (expr -> expr \ expr .)
    E               reduce using rule 63 (expr -> expr \ expr .)
    ENTAO           reduce using rule 63 (expr -> expr \ expr .)
    ^               shift and go to state 63


state 102

    (64) expr -> expr / expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 64 (expr -> expr / expr .)
    %               reduce using rule 64 (expr -> expr / expr .)
    \               reduce using rule 64 (expr -> expr / expr .)
    /               reduce using rule 64 (expr -> expr / expr .)
    *               reduce using rule 64 (expr -> expr / expr .)
    -               reduce using rule 64 (expr -> expr / expr .)
    +               reduce using rule 64 (expr -> expr / expr .)
    EQ              reduce using rule 64 (expr -> expr / expr .)
    GT              reduce using rule 64 (expr -> expr / expr .)
    GE              reduce using rule 64 (expr -> expr / expr .)
    LT              reduce using rule 64 (expr -> expr / expr .)
    LE              reduce using rule 64 (expr -> expr / expr .)
    NE              reduce using rule 64 (expr -> expr / expr .)
    )               reduce using rule 64 (expr -> expr / expr .)
    LIMPATELA       reduce using rule 64 (expr -> expr / expr .)
    ENQUANTO        reduce using rule 64 (expr -> expr / expr .)
    SE              reduce using rule 64 (expr -> expr / expr .)
    LEIA            reduce using rule 64 (expr -> expr / expr .)
    ESCREVAL        reduce using rule 64 (expr -> expr / expr .)
    ESCREVA         reduce using rule 64 (expr -> expr / expr .)
    ID              reduce using rule 64 (expr -> expr / expr .)
    FIMALGORITMO    reduce using rule 64 (expr -> expr / expr .)
    FIMENQUANTO     reduce using rule 64 (expr -> expr / expr .)
    SENAO           reduce using rule 64 (expr -> expr / expr .)
    FIMSE           reduce using rule 64 (expr -> expr / expr .)
    ,               reduce using rule 64 (expr -> expr / expr .)
    FACA            reduce using rule 64 (expr -> expr / expr .)
    XOU             reduce using rule 64 (expr -> expr / expr .)
    OU              reduce using rule 64 (expr -> expr / expr .)
    E               reduce using rule 64 (expr -> expr / expr .)
    ENTAO           reduce using rule 64 (expr -> expr / expr .)
    ^               shift and go to state 63


state 103

    (65) expr -> expr * expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 65 (expr -> expr * expr .)
    %               reduce using rule 65 (expr -> expr * expr .)
    \               reduce using rule 65 (expr -> expr * expr .)
    /               reduce using rule 65 (expr -> expr * expr .)
    *               reduce using rule 65 (expr -> expr * expr .)
    -               reduce using rule 65 (expr -> expr * expr .)
    +               reduce using rule 65 (expr -> expr * expr .)
    EQ              reduce using rule 65 (expr -> expr * expr .)
    GT              reduce using rule 65 (expr -> expr * expr .)
    GE              reduce using rule 65 (expr -> expr * expr .)
    LT              reduce using rule 65 (expr -> expr * expr .)
    LE              reduce using rule 65 (expr -> expr * expr .)
    NE              reduce using rule 65 (expr -> expr * expr .)
    )               reduce using rule 65 (expr -> expr * expr .)
    LIMPATELA       reduce using rule 65 (expr -> expr * expr .)
    ENQUANTO        reduce using rule 65 (expr -> expr * expr .)
    SE              reduce using rule 65 (expr -> expr * expr .)
    LEIA            reduce using rule 65 (expr -> expr * expr .)
    ESCREVAL        reduce using rule 65 (expr -> expr * expr .)
    ESCREVA         reduce using rule 65 (expr -> expr * expr .)
    ID              reduce using rule 65 (expr -> expr * expr .)
    FIMALGORITMO    reduce using rule 65 (expr -> expr * expr .)
    FIMENQUANTO     reduce using rule 65 (expr -> expr * expr .)
    SENAO           reduce using rule 65 (expr -> expr * expr .)
    FIMSE           reduce using rule 65 (expr -> expr * expr .)
    ,               reduce using rule 65 (expr -> expr * expr .)
    FACA            reduce using rule 65 (expr -> expr * expr .)
    XOU             reduce using rule 65 (expr -> expr * expr .)
    OU              reduce using rule 65 (expr -> expr * expr .)
    E               reduce using rule 65 (expr -> expr * expr .)
    ENTAO           reduce using rule 65 (expr -> expr * expr .)
    ^               shift and go to state 63


state 104

    (66) expr -> expr - expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    -               reduce using rule 66 (expr -> expr - expr .)
    +               reduce using rule 66 (expr -> expr - expr .)
    EQ              reduce using rule 66 (expr -> expr - expr .)
    GT              reduce using rule 66 (expr -> expr - expr .)
    GE              reduce using rule 66 (expr -> expr - expr .)
    LT              reduce using rule 66 (expr -> expr - expr .)
    LE              reduce using rule 66 (expr -> expr - expr .)
    NE              reduce using rule 66 (expr -> expr - expr .)
    )               reduce using rule 66 (expr -> expr - expr .)
    LIMPATELA       reduce using rule 66 (expr -> expr - expr .)
    ENQUANTO        reduce using rule 66 (expr -> expr - expr .)
    SE              reduce using rule 66 (expr -> expr - expr .)
    LEIA            reduce using rule 66 (expr -> expr - expr .)
    ESCREVAL        reduce using rule 66 (expr -> expr - expr .)
    ESCREVA         reduce using rule 66 (expr -> expr - expr .)
    ID              reduce using rule 66 (expr -> expr - expr .)
    FIMALGORITMO    reduce using rule 66 (expr -> expr - expr .)
    FIMENQUANTO     reduce using rule 66 (expr -> expr - expr .)
    SENAO           reduce using rule 66 (expr -> expr - expr .)
    FIMSE           reduce using rule 66 (expr -> expr - expr .)
    ,               reduce using rule 66 (expr -> expr - expr .)
    FACA            reduce using rule 66 (expr -> expr - expr .)
    XOU             reduce using rule 66 (expr -> expr - expr .)
    OU              reduce using rule 66 (expr -> expr - expr .)
    E               reduce using rule 66 (expr -> expr - expr .)
    ENTAO           reduce using rule 66 (expr -> expr - expr .)
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68


state 105

    (67) expr -> expr + expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    -               reduce using rule 67 (expr -> expr + expr .)
    +               reduce using rule 67 (expr -> expr + expr .)
    EQ              reduce using rule 67 (expr -> expr + expr .)
    GT              reduce using rule 67 (expr -> expr + expr .)
    GE              reduce using rule 67 (expr -> expr + expr .)
    LT              reduce using rule 67 (expr -> expr + expr .)
    LE              reduce using rule 67 (expr -> expr + expr .)
    NE              reduce using rule 67 (expr -> expr + expr .)
    )               reduce using rule 67 (expr -> expr + expr .)
    LIMPATELA       reduce using rule 67 (expr -> expr + expr .)
    ENQUANTO        reduce using rule 67 (expr -> expr + expr .)
    SE              reduce using rule 67 (expr -> expr + expr .)
    LEIA            reduce using rule 67 (expr -> expr + expr .)
    ESCREVAL        reduce using rule 67 (expr -> expr + expr .)
    ESCREVA         reduce using rule 67 (expr -> expr + expr .)
    ID              reduce using rule 67 (expr -> expr + expr .)
    FIMALGORITMO    reduce using rule 67 (expr -> expr + expr .)
    FIMENQUANTO     reduce using rule 67 (expr -> expr + expr .)
    SENAO           reduce using rule 67 (expr -> expr + expr .)
    FIMSE           reduce using rule 67 (expr -> expr + expr .)
    ,               reduce using rule 67 (expr -> expr + expr .)
    FACA            reduce using rule 67 (expr -> expr + expr .)
    XOU             reduce using rule 67 (expr -> expr + expr .)
    OU              reduce using rule 67 (expr -> expr + expr .)
    E               reduce using rule 67 (expr -> expr + expr .)
    ENTAO           reduce using rule 67 (expr -> expr + expr .)
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68


state 106

    (68) expr -> ( expr . )
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    )               shift and go to state 96
    ^               shift and go to state 63
    MOD             shift and go to state 64
    %               shift and go to state 65
    \               shift and go to state 66
    /               shift and go to state 67
    *               shift and go to state 68
    -               shift and go to state 69
    +               shift and go to state 70


state 107

    (24) cmdCondicao -> SE expressaoRelacional ENTAO bloco . SENAO bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional ENTAO bloco . FIMSE
    SENAO           shift and go to state 114
    FIMSE           shift and go to state 115


state 108

    (23) cmdleitura -> LEIA ( ID ) .
    LIMPATELA       reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    ENQUANTO        reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    SE              reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    LEIA            reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    ESCREVAL        reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    ESCREVA         reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    ID              reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    FIMALGORITMO    reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    FIMENQUANTO     reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    SENAO           reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)
    FIMSE           reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)


state 109

    (42) cmdattrib -> ID ASSIGN ( typeArgs . )
    )               shift and go to state 116


state 110

    (48) cmdescrita -> ESCREVAL ( typeArgsEscrita ) .
    LIMPATELA       reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ENQUANTO        reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    SE              reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    LEIA            reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ESCREVAL        reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ESCREVA         reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ID              reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    FIMALGORITMO    reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    FIMENQUANTO     reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    SENAO           reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    FIMSE           reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)


state 111

    (54) typeArgsEscrita -> typeArgsEscrita , . typeArgsEscritaAux
    (51) typeArgsEscritaAux -> . typeArgs
    (52) typeArgsEscritaAux -> . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    FALSO           shift and go to state 84
    VERDADEIRO      shift and go to state 85
    CARACTERE       shift and go to state 43
    ID              shift and go to state 44
    REAL            shift and go to state 45
    INTEIRO         shift and go to state 46
    -               shift and go to state 47
    (               shift and go to state 78

    typeArgsEscritaAux             shift and go to state 117
    typeArgs                       shift and go to state 89
    expr                           shift and go to state 90

state 112

    (50) cmdescrita -> ESCREVA ( typeArgsEscrita ) .
    LIMPATELA       reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ENQUANTO        reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    SE              reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    LEIA            reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ESCREVAL        reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ESCREVA         reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ID              reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    FIMALGORITMO    reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    FIMENQUANTO     reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    SENAO           reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    FIMSE           reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)


state 113

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .
    LIMPATELA       reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ENQUANTO        reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    SE              reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    LEIA            reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ESCREVAL        reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ESCREVA         reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ID              reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    FIMALGORITMO    reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    FIMENQUANTO     reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    SENAO           reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    FIMSE           reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)


state 114

    (24) cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO . bloco FIMSE
    (14) bloco -> . cmd bloco
    (15) bloco -> . cmd
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 18
    ENQUANTO        shift and go to state 23
    SE              shift and go to state 24
    LEIA            shift and go to state 25
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 26

    bloco                          shift and go to state 118
    cmd                            shift and go to state 16
    cmdRepeticao                   shift and go to state 17
    cmdCondicao                    shift and go to state 19
    cmdleitura                     shift and go to state 20
    cmdescrita                     shift and go to state 21
    cmdattrib                      shift and go to state 22

state 115

    (25) cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .
    LIMPATELA       reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ENQUANTO        reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    SE              reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    LEIA            reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ESCREVAL        reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ESCREVA         reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ID              reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    FIMALGORITMO    reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    FIMENQUANTO     reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    SENAO           reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    FIMSE           reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)


state 116

    (42) cmdattrib -> ID ASSIGN ( typeArgs ) .
    LIMPATELA       reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ENQUANTO        reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    SE              reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    LEIA            reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ESCREVAL        reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ESCREVA         reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ID              reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    FIMALGORITMO    reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    FIMENQUANTO     reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    SENAO           reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    FIMSE           reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)


state 117

    (54) typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .
    )               reduce using rule 54 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)
    ,               reduce using rule 54 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)


state 118

    (24) cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco . FIMSE
    FIMSE           shift and go to state 119


state 119

    (24) cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .
    LIMPATELA       reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ENQUANTO        reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    SE              reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    LEIA            reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ESCREVAL        reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ESCREVA         reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ID              reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    FIMALGORITMO    reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    FIMENQUANTO     reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    SENAO           reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    FIMSE           reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
