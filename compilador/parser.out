Grammar:

Rule 0     S' -> initial
Rule 1     initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ;
Rule 2     blocoType -> <empty>
Rule 3     blocoType -> bloco
Rule 4     declaracaoType -> <empty>
Rule 5     declaracaoType -> declaracaoTypeAux
Rule 6     declaracaoTypeAux -> declaracao ;
Rule 7     declaracaoTypeAux -> declaracao ; declaracaoTypeAux
Rule 8     declaracao -> vartype : LOGICO
Rule 9     declaracao -> vartype : CARACTERE
Rule 10    declaracao -> vartype : REAL
Rule 11    declaracao -> vartype : INTEIRO
Rule 12    vartype -> ID , vartype
Rule 13    vartype -> ID
Rule 14    bloco -> cmd ; bloco
Rule 15    bloco -> cmd ;
Rule 16    cmd -> cmdRepeticao
Rule 17    cmd -> LIMPATELA
Rule 18    cmd -> cmdCondicao
Rule 19    cmd -> cmdleitura
Rule 20    cmd -> cmdescrita
Rule 21    cmd -> cmdattrib
Rule 22    cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
Rule 23    cmdleitura -> LEIA ( ID )
Rule 24    cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
Rule 25    cmdCondicao -> SE expressaoRelacional ENTAO ; bloco FIMSE
Rule 26    expressaoRelacional -> termoRelacional
Rule 27    expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional
Rule 28    termoRelacional -> ( expressaoRelacional )
Rule 29    termoRelacional -> FALSO
Rule 30    termoRelacional -> VERDADEIRO
Rule 31    termoRelacional -> NAO termoRelacional
Rule 32    termoRelacional -> expr OP_REL expr
Rule 33    OP_BOOL -> XOU
Rule 34    OP_BOOL -> OU
Rule 35    OP_BOOL -> E
Rule 36    OP_REL -> EQ  [precedence=nonassoc, level=1]
Rule 37    OP_REL -> GT  [precedence=nonassoc, level=1]
Rule 38    OP_REL -> GE  [precedence=nonassoc, level=1]
Rule 39    OP_REL -> LT  [precedence=nonassoc, level=1]
Rule 40    OP_REL -> LE  [precedence=nonassoc, level=1]
Rule 41    OP_REL -> NE  [precedence=nonassoc, level=1]
Rule 42    cmdattrib -> ID ASSIGN ( typeArgs )
Rule 43    cmdattrib -> ID ASSIGN typeArgs
Rule 44    cmdattrib -> ID ASSIGN expr
Rule 45    typeArgs -> FALSO
Rule 46    typeArgs -> VERDADEIRO
Rule 47    cmdescrita -> ESCREVAL ( )
Rule 48    cmdescrita -> ESCREVAL ( typeArgsEscrita )
Rule 49    cmdescrita -> ESCREVA ( )
Rule 50    cmdescrita -> ESCREVA ( typeArgsEscrita )
Rule 51    typeArgsEscritaAux -> typeArgs
Rule 52    typeArgsEscritaAux -> expr
Rule 53    typeArgsEscrita -> typeArgsEscritaAux
Rule 54    typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux
Rule 55    expr -> CARACTERE
Rule 56    expr -> ID
Rule 57    expr -> REAL
Rule 58    expr -> INTEIRO
Rule 59    expr -> - expr  [precedence=right, level=5]
Rule 60    expr -> expr ^ expr  [precedence=right, level=4]
Rule 61    expr -> expr MOD expr  [precedence=left, level=3]
Rule 62    expr -> expr % expr  [precedence=left, level=3]
Rule 63    expr -> expr \ expr  [precedence=left, level=3]
Rule 64    expr -> expr / expr  [precedence=left, level=3]
Rule 65    expr -> expr * expr  [precedence=left, level=3]
Rule 66    expr -> expr - expr  [precedence=left, level=2]
Rule 67    expr -> expr + expr  [precedence=left, level=2]
Rule 68    expr -> ( expr )

Unused terminals:

    TIMER
    CRONOMETRO
    ECO
    ESCOLHA
    FIMPROCEDIMENTO
    CARAC
    FIMREPITA
    POS
    PROCEDIMENTO
    FUNCAO
    RETORNE
    REPITA
    VETOR
    FIMFUNCAO
    FIMESCOLHA
    ASC

Terminals, with rules where they appear:

%                    : 62
(                    : 23 28 42 47 48 49 50 68
)                    : 23 28 42 47 48 49 50 68
*                    : 65
+                    : 67
,                    : 12 54
-                    : 59 66
/                    : 64
:                    : 8 9 10 11
;                    : 1 1 1 1 6 7 14 15 22 24 24 25
ALGORITMO            : 1
ASC                  : 
ASSIGN               : 42 43 44
CARAC                : 
CARACTERE            : 1 9 55
CRONOMETRO           : 
E                    : 35
ECO                  : 
ENQUANTO             : 22
ENTAO                : 24 25
EQ                   : 36
ESCOLHA              : 
ESCREVA              : 49 50
ESCREVAL             : 47 48
FACA                 : 22
FALSO                : 29 45
FIMALGORITMO         : 1
FIMENQUANTO          : 22
FIMESCOLHA           : 
FIMFUNCAO            : 
FIMPROCEDIMENTO      : 
FIMREPITA            : 
FIMSE                : 24 25
FUNCAO               : 
GE                   : 38
GT                   : 37
ID                   : 12 13 23 42 43 44 56
INICIO               : 1
INTEIRO              : 11 58
LE                   : 40
LEIA                 : 23
LIMPATELA            : 17
LOGICO               : 8
LT                   : 39
MOD                  : 61
NAO                  : 31
NE                   : 41
OU                   : 34
POS                  : 
PROCEDIMENTO         : 
REAL                 : 10 57
REPITA               : 
RETORNE              : 
SE                   : 24 25
SENAO                : 24
TIMER                : 
VAR                  : 1
VERDADEIRO           : 30 46
VETOR                : 
XOU                  : 33
\                    : 63
^                    : 60
error                : 

Nonterminals, with rules where they appear:

OP_BOOL              : 27
OP_REL               : 32
bloco                : 3 14 22 24 24 25
blocoType            : 1
cmd                  : 14 15
cmdCondicao          : 18
cmdRepeticao         : 16
cmdattrib            : 21
cmdescrita           : 20
cmdleitura           : 19
declaracao           : 6 7
declaracaoType       : 1
declaracaoTypeAux    : 5 7
expr                 : 32 32 44 52 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68
expressaoRelacional  : 22 24 25 27 28
initial              : 0
termoRelacional      : 26 27 31
typeArgs             : 42 43 51
typeArgsEscrita      : 48 50 54
typeArgsEscritaAux   : 53 54
vartype              : 8 9 10 11 12


state 0

    (0) S' -> . initial
    (1) initial -> . ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ;
    ALGORITMO       shift and go to state 2

    initial                        shift and go to state 1

state 1

    (0) S' -> initial .


state 2

    (1) initial -> ALGORITMO . CARACTERE ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ;
    CARACTERE       shift and go to state 3


state 3

    (1) initial -> ALGORITMO CARACTERE . ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ;
    ;               shift and go to state 4


state 4

    (1) initial -> ALGORITMO CARACTERE ; . VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ;
    VAR             shift and go to state 5


state 5

    (1) initial -> ALGORITMO CARACTERE ; VAR . ; declaracaoType INICIO ; blocoType FIMALGORITMO ;
    ;               shift and go to state 6


state 6

    (1) initial -> ALGORITMO CARACTERE ; VAR ; . declaracaoType INICIO ; blocoType FIMALGORITMO ;
    (4) declaracaoType -> .
    (5) declaracaoType -> . declaracaoTypeAux
    (6) declaracaoTypeAux -> . declaracao ;
    (7) declaracaoTypeAux -> . declaracao ; declaracaoTypeAux
    (8) declaracao -> . vartype : LOGICO
    (9) declaracao -> . vartype : CARACTERE
    (10) declaracao -> . vartype : REAL
    (11) declaracao -> . vartype : INTEIRO
    (12) vartype -> . ID , vartype
    (13) vartype -> . ID
    INICIO          reduce using rule 4 (declaracaoType -> .)
    ID              shift and go to state 11

    declaracaoType                 shift and go to state 7
    declaracaoTypeAux              shift and go to state 8
    declaracao                     shift and go to state 9
    vartype                        shift and go to state 10

state 7

    (1) initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType . INICIO ; blocoType FIMALGORITMO ;
    INICIO          shift and go to state 12


state 8

    (5) declaracaoType -> declaracaoTypeAux .
    INICIO          reduce using rule 5 (declaracaoType -> declaracaoTypeAux .)


state 9

    (6) declaracaoTypeAux -> declaracao . ;
    (7) declaracaoTypeAux -> declaracao . ; declaracaoTypeAux
    ;               shift and go to state 13


state 10

    (8) declaracao -> vartype . : LOGICO
    (9) declaracao -> vartype . : CARACTERE
    (10) declaracao -> vartype . : REAL
    (11) declaracao -> vartype . : INTEIRO
    :               shift and go to state 14


state 11

    (12) vartype -> ID . , vartype
    (13) vartype -> ID .
    ,               shift and go to state 15
    :               reduce using rule 13 (vartype -> ID .)


state 12

    (1) initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO . ; blocoType FIMALGORITMO ;
    ;               shift and go to state 16


state 13

    (6) declaracaoTypeAux -> declaracao ; .
    (7) declaracaoTypeAux -> declaracao ; . declaracaoTypeAux
    (6) declaracaoTypeAux -> . declaracao ;
    (7) declaracaoTypeAux -> . declaracao ; declaracaoTypeAux
    (8) declaracao -> . vartype : LOGICO
    (9) declaracao -> . vartype : CARACTERE
    (10) declaracao -> . vartype : REAL
    (11) declaracao -> . vartype : INTEIRO
    (12) vartype -> . ID , vartype
    (13) vartype -> . ID
    INICIO          reduce using rule 6 (declaracaoTypeAux -> declaracao ; .)
    ID              shift and go to state 11

    declaracao                     shift and go to state 9
    declaracaoTypeAux              shift and go to state 17
    vartype                        shift and go to state 10

state 14

    (8) declaracao -> vartype : . LOGICO
    (9) declaracao -> vartype : . CARACTERE
    (10) declaracao -> vartype : . REAL
    (11) declaracao -> vartype : . INTEIRO
    LOGICO          shift and go to state 18
    CARACTERE       shift and go to state 19
    REAL            shift and go to state 20
    INTEIRO         shift and go to state 21


state 15

    (12) vartype -> ID , . vartype
    (12) vartype -> . ID , vartype
    (13) vartype -> . ID
    ID              shift and go to state 11

    vartype                        shift and go to state 22

state 16

    (1) initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; . blocoType FIMALGORITMO ;
    (2) blocoType -> .
    (3) blocoType -> . bloco
    (14) bloco -> . cmd ; bloco
    (15) bloco -> . cmd ;
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 2 (blocoType -> .)
    LIMPATELA       shift and go to state 27
    ENQUANTO        shift and go to state 32
    SE              shift and go to state 33
    LEIA            shift and go to state 34
    ESCREVAL        shift and go to state 36
    ESCREVA         shift and go to state 37
    ID              shift and go to state 35

    blocoType                      shift and go to state 23
    bloco                          shift and go to state 24
    cmd                            shift and go to state 25
    cmdRepeticao                   shift and go to state 26
    cmdCondicao                    shift and go to state 28
    cmdleitura                     shift and go to state 29
    cmdescrita                     shift and go to state 30
    cmdattrib                      shift and go to state 31

state 17

    (7) declaracaoTypeAux -> declaracao ; declaracaoTypeAux .
    INICIO          reduce using rule 7 (declaracaoTypeAux -> declaracao ; declaracaoTypeAux .)


state 18

    (8) declaracao -> vartype : LOGICO .
    ;               reduce using rule 8 (declaracao -> vartype : LOGICO .)


state 19

    (9) declaracao -> vartype : CARACTERE .
    ;               reduce using rule 9 (declaracao -> vartype : CARACTERE .)


state 20

    (10) declaracao -> vartype : REAL .
    ;               reduce using rule 10 (declaracao -> vartype : REAL .)


state 21

    (11) declaracao -> vartype : INTEIRO .
    ;               reduce using rule 11 (declaracao -> vartype : INTEIRO .)


state 22

    (12) vartype -> ID , vartype .
    :               reduce using rule 12 (vartype -> ID , vartype .)


state 23

    (1) initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; blocoType . FIMALGORITMO ;
    FIMALGORITMO    shift and go to state 38


state 24

    (3) blocoType -> bloco .
    FIMALGORITMO    reduce using rule 3 (blocoType -> bloco .)


state 25

    (14) bloco -> cmd . ; bloco
    (15) bloco -> cmd . ;
    ;               shift and go to state 39


state 26

    (16) cmd -> cmdRepeticao .
    ;               reduce using rule 16 (cmd -> cmdRepeticao .)


state 27

    (17) cmd -> LIMPATELA .
    ;               reduce using rule 17 (cmd -> LIMPATELA .)


state 28

    (18) cmd -> cmdCondicao .
    ;               reduce using rule 18 (cmd -> cmdCondicao .)


state 29

    (19) cmd -> cmdleitura .
    ;               reduce using rule 19 (cmd -> cmdleitura .)


state 30

    (20) cmd -> cmdescrita .
    ;               reduce using rule 20 (cmd -> cmdescrita .)


state 31

    (21) cmd -> cmdattrib .
    ;               reduce using rule 21 (cmd -> cmdattrib .)


state 32

    (22) cmdRepeticao -> ENQUANTO . expressaoRelacional FACA ; bloco FIMENQUANTO
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 42
    FALSO           shift and go to state 43
    VERDADEIRO      shift and go to state 44
    NAO             shift and go to state 45
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51

    expressaoRelacional            shift and go to state 40
    termoRelacional                shift and go to state 41
    expr                           shift and go to state 46

state 33

    (24) cmdCondicao -> SE . expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> SE . expressaoRelacional ENTAO ; bloco FIMSE
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 42
    FALSO           shift and go to state 43
    VERDADEIRO      shift and go to state 44
    NAO             shift and go to state 45
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51

    expressaoRelacional            shift and go to state 52
    termoRelacional                shift and go to state 41
    expr                           shift and go to state 46

state 34

    (23) cmdleitura -> LEIA . ( ID )
    (               shift and go to state 53


state 35

    (42) cmdattrib -> ID . ASSIGN ( typeArgs )
    (43) cmdattrib -> ID . ASSIGN typeArgs
    (44) cmdattrib -> ID . ASSIGN expr
    ASSIGN          shift and go to state 54


state 36

    (47) cmdescrita -> ESCREVAL . ( )
    (48) cmdescrita -> ESCREVAL . ( typeArgsEscrita )
    (               shift and go to state 55


state 37

    (49) cmdescrita -> ESCREVA . ( )
    (50) cmdescrita -> ESCREVA . ( typeArgsEscrita )
    (               shift and go to state 56


state 38

    (1) initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO . ;
    ;               shift and go to state 57


state 39

    (14) bloco -> cmd ; . bloco
    (15) bloco -> cmd ; .
    (14) bloco -> . cmd ; bloco
    (15) bloco -> . cmd ;
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 15 (bloco -> cmd ; .)
    FIMENQUANTO     reduce using rule 15 (bloco -> cmd ; .)
    SENAO           reduce using rule 15 (bloco -> cmd ; .)
    FIMSE           reduce using rule 15 (bloco -> cmd ; .)
    LIMPATELA       shift and go to state 27
    ENQUANTO        shift and go to state 32
    SE              shift and go to state 33
    LEIA            shift and go to state 34
    ESCREVAL        shift and go to state 36
    ESCREVA         shift and go to state 37
    ID              shift and go to state 35

    cmd                            shift and go to state 25
    bloco                          shift and go to state 58
    cmdRepeticao                   shift and go to state 26
    cmdCondicao                    shift and go to state 28
    cmdleitura                     shift and go to state 29
    cmdescrita                     shift and go to state 30
    cmdattrib                      shift and go to state 31

state 40

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional . FACA ; bloco FIMENQUANTO
    (27) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (33) OP_BOOL -> . XOU
    (34) OP_BOOL -> . OU
    (35) OP_BOOL -> . E
    FACA            shift and go to state 59
    XOU             shift and go to state 61
    OU              shift and go to state 62
    E               shift and go to state 63

    OP_BOOL                        shift and go to state 60

state 41

    (26) expressaoRelacional -> termoRelacional .
    FACA            reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    XOU             reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    OU              reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    E               reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    ENTAO           reduce using rule 26 (expressaoRelacional -> termoRelacional .)
    )               reduce using rule 26 (expressaoRelacional -> termoRelacional .)


state 42

    (28) termoRelacional -> ( . expressaoRelacional )
    (68) expr -> ( . expr )
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 64
    FALSO           shift and go to state 43
    VERDADEIRO      shift and go to state 44
    NAO             shift and go to state 45

    expressaoRelacional            shift and go to state 65
    expr                           shift and go to state 66
    termoRelacional                shift and go to state 41

state 43

    (29) termoRelacional -> FALSO .
    FACA            reduce using rule 29 (termoRelacional -> FALSO .)
    XOU             reduce using rule 29 (termoRelacional -> FALSO .)
    OU              reduce using rule 29 (termoRelacional -> FALSO .)
    E               reduce using rule 29 (termoRelacional -> FALSO .)
    ENTAO           reduce using rule 29 (termoRelacional -> FALSO .)
    )               reduce using rule 29 (termoRelacional -> FALSO .)


state 44

    (30) termoRelacional -> VERDADEIRO .
    FACA            reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    XOU             reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    OU              reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    E               reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    ENTAO           reduce using rule 30 (termoRelacional -> VERDADEIRO .)
    )               reduce using rule 30 (termoRelacional -> VERDADEIRO .)


state 45

    (31) termoRelacional -> NAO . termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 42
    FALSO           shift and go to state 43
    VERDADEIRO      shift and go to state 44
    NAO             shift and go to state 45
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51

    termoRelacional                shift and go to state 67
    expr                           shift and go to state 46

state 46

    (32) termoRelacional -> expr . OP_REL expr
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    (36) OP_REL -> . EQ
    (37) OP_REL -> . GT
    (38) OP_REL -> . GE
    (39) OP_REL -> . LT
    (40) OP_REL -> . LE
    (41) OP_REL -> . NE
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74
    -               shift and go to state 75
    +               shift and go to state 76
    EQ              shift and go to state 77
    GT              shift and go to state 78
    GE              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    NE              shift and go to state 82

    OP_REL                         shift and go to state 68

state 47

    (55) expr -> CARACTERE .
    ^               reduce using rule 55 (expr -> CARACTERE .)
    MOD             reduce using rule 55 (expr -> CARACTERE .)
    %               reduce using rule 55 (expr -> CARACTERE .)
    \               reduce using rule 55 (expr -> CARACTERE .)
    /               reduce using rule 55 (expr -> CARACTERE .)
    *               reduce using rule 55 (expr -> CARACTERE .)
    -               reduce using rule 55 (expr -> CARACTERE .)
    +               reduce using rule 55 (expr -> CARACTERE .)
    EQ              reduce using rule 55 (expr -> CARACTERE .)
    GT              reduce using rule 55 (expr -> CARACTERE .)
    GE              reduce using rule 55 (expr -> CARACTERE .)
    LT              reduce using rule 55 (expr -> CARACTERE .)
    LE              reduce using rule 55 (expr -> CARACTERE .)
    NE              reduce using rule 55 (expr -> CARACTERE .)
    )               reduce using rule 55 (expr -> CARACTERE .)
    ;               reduce using rule 55 (expr -> CARACTERE .)
    ,               reduce using rule 55 (expr -> CARACTERE .)
    FACA            reduce using rule 55 (expr -> CARACTERE .)
    XOU             reduce using rule 55 (expr -> CARACTERE .)
    OU              reduce using rule 55 (expr -> CARACTERE .)
    E               reduce using rule 55 (expr -> CARACTERE .)
    ENTAO           reduce using rule 55 (expr -> CARACTERE .)


state 48

    (56) expr -> ID .
    ^               reduce using rule 56 (expr -> ID .)
    MOD             reduce using rule 56 (expr -> ID .)
    %               reduce using rule 56 (expr -> ID .)
    \               reduce using rule 56 (expr -> ID .)
    /               reduce using rule 56 (expr -> ID .)
    *               reduce using rule 56 (expr -> ID .)
    -               reduce using rule 56 (expr -> ID .)
    +               reduce using rule 56 (expr -> ID .)
    EQ              reduce using rule 56 (expr -> ID .)
    GT              reduce using rule 56 (expr -> ID .)
    GE              reduce using rule 56 (expr -> ID .)
    LT              reduce using rule 56 (expr -> ID .)
    LE              reduce using rule 56 (expr -> ID .)
    NE              reduce using rule 56 (expr -> ID .)
    )               reduce using rule 56 (expr -> ID .)
    ;               reduce using rule 56 (expr -> ID .)
    ,               reduce using rule 56 (expr -> ID .)
    FACA            reduce using rule 56 (expr -> ID .)
    XOU             reduce using rule 56 (expr -> ID .)
    OU              reduce using rule 56 (expr -> ID .)
    E               reduce using rule 56 (expr -> ID .)
    ENTAO           reduce using rule 56 (expr -> ID .)


state 49

    (57) expr -> REAL .
    ^               reduce using rule 57 (expr -> REAL .)
    MOD             reduce using rule 57 (expr -> REAL .)
    %               reduce using rule 57 (expr -> REAL .)
    \               reduce using rule 57 (expr -> REAL .)
    /               reduce using rule 57 (expr -> REAL .)
    *               reduce using rule 57 (expr -> REAL .)
    -               reduce using rule 57 (expr -> REAL .)
    +               reduce using rule 57 (expr -> REAL .)
    EQ              reduce using rule 57 (expr -> REAL .)
    GT              reduce using rule 57 (expr -> REAL .)
    GE              reduce using rule 57 (expr -> REAL .)
    LT              reduce using rule 57 (expr -> REAL .)
    LE              reduce using rule 57 (expr -> REAL .)
    NE              reduce using rule 57 (expr -> REAL .)
    )               reduce using rule 57 (expr -> REAL .)
    ;               reduce using rule 57 (expr -> REAL .)
    ,               reduce using rule 57 (expr -> REAL .)
    FACA            reduce using rule 57 (expr -> REAL .)
    XOU             reduce using rule 57 (expr -> REAL .)
    OU              reduce using rule 57 (expr -> REAL .)
    E               reduce using rule 57 (expr -> REAL .)
    ENTAO           reduce using rule 57 (expr -> REAL .)


state 50

    (58) expr -> INTEIRO .
    ^               reduce using rule 58 (expr -> INTEIRO .)
    MOD             reduce using rule 58 (expr -> INTEIRO .)
    %               reduce using rule 58 (expr -> INTEIRO .)
    \               reduce using rule 58 (expr -> INTEIRO .)
    /               reduce using rule 58 (expr -> INTEIRO .)
    *               reduce using rule 58 (expr -> INTEIRO .)
    -               reduce using rule 58 (expr -> INTEIRO .)
    +               reduce using rule 58 (expr -> INTEIRO .)
    EQ              reduce using rule 58 (expr -> INTEIRO .)
    GT              reduce using rule 58 (expr -> INTEIRO .)
    GE              reduce using rule 58 (expr -> INTEIRO .)
    LT              reduce using rule 58 (expr -> INTEIRO .)
    LE              reduce using rule 58 (expr -> INTEIRO .)
    NE              reduce using rule 58 (expr -> INTEIRO .)
    )               reduce using rule 58 (expr -> INTEIRO .)
    ;               reduce using rule 58 (expr -> INTEIRO .)
    ,               reduce using rule 58 (expr -> INTEIRO .)
    FACA            reduce using rule 58 (expr -> INTEIRO .)
    XOU             reduce using rule 58 (expr -> INTEIRO .)
    OU              reduce using rule 58 (expr -> INTEIRO .)
    E               reduce using rule 58 (expr -> INTEIRO .)
    ENTAO           reduce using rule 58 (expr -> INTEIRO .)


state 51

    (59) expr -> - . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 83

state 52

    (24) cmdCondicao -> SE expressaoRelacional . ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional . ENTAO ; bloco FIMSE
    (27) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (33) OP_BOOL -> . XOU
    (34) OP_BOOL -> . OU
    (35) OP_BOOL -> . E
    ENTAO           shift and go to state 85
    XOU             shift and go to state 61
    OU              shift and go to state 62
    E               shift and go to state 63

    OP_BOOL                        shift and go to state 60

state 53

    (23) cmdleitura -> LEIA ( . ID )
    ID              shift and go to state 86


state 54

    (42) cmdattrib -> ID ASSIGN . ( typeArgs )
    (43) cmdattrib -> ID ASSIGN . typeArgs
    (44) cmdattrib -> ID ASSIGN . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 87
    FALSO           shift and go to state 90
    VERDADEIRO      shift and go to state 91
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51

    typeArgs                       shift and go to state 88
    expr                           shift and go to state 89

state 55

    (47) cmdescrita -> ESCREVAL ( . )
    (48) cmdescrita -> ESCREVAL ( . typeArgsEscrita )
    (53) typeArgsEscrita -> . typeArgsEscritaAux
    (54) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (51) typeArgsEscritaAux -> . typeArgs
    (52) typeArgsEscritaAux -> . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    )               shift and go to state 92
    FALSO           shift and go to state 90
    VERDADEIRO      shift and go to state 91
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    typeArgsEscrita                shift and go to state 93
    typeArgsEscritaAux             shift and go to state 94
    typeArgs                       shift and go to state 95
    expr                           shift and go to state 96

state 56

    (49) cmdescrita -> ESCREVA ( . )
    (50) cmdescrita -> ESCREVA ( . typeArgsEscrita )
    (53) typeArgsEscrita -> . typeArgsEscritaAux
    (54) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (51) typeArgsEscritaAux -> . typeArgs
    (52) typeArgsEscritaAux -> . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    )               shift and go to state 97
    FALSO           shift and go to state 90
    VERDADEIRO      shift and go to state 91
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    typeArgsEscrita                shift and go to state 98
    typeArgsEscritaAux             shift and go to state 94
    typeArgs                       shift and go to state 95
    expr                           shift and go to state 96

state 57

    (1) initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ; .
    $end            reduce using rule 1 (initial -> ALGORITMO CARACTERE ; VAR ; declaracaoType INICIO ; blocoType FIMALGORITMO ; .)


state 58

    (14) bloco -> cmd ; bloco .
    FIMALGORITMO    reduce using rule 14 (bloco -> cmd ; bloco .)
    FIMENQUANTO     reduce using rule 14 (bloco -> cmd ; bloco .)
    SENAO           reduce using rule 14 (bloco -> cmd ; bloco .)
    FIMSE           reduce using rule 14 (bloco -> cmd ; bloco .)


state 59

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA . ; bloco FIMENQUANTO
    ;               shift and go to state 99


state 60

    (27) expressaoRelacional -> expressaoRelacional OP_BOOL . termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (               shift and go to state 42
    FALSO           shift and go to state 43
    VERDADEIRO      shift and go to state 44
    NAO             shift and go to state 45
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51

    termoRelacional                shift and go to state 100
    expr                           shift and go to state 46

state 61

    (33) OP_BOOL -> XOU .
    (               reduce using rule 33 (OP_BOOL -> XOU .)
    FALSO           reduce using rule 33 (OP_BOOL -> XOU .)
    VERDADEIRO      reduce using rule 33 (OP_BOOL -> XOU .)
    NAO             reduce using rule 33 (OP_BOOL -> XOU .)
    CARACTERE       reduce using rule 33 (OP_BOOL -> XOU .)
    ID              reduce using rule 33 (OP_BOOL -> XOU .)
    REAL            reduce using rule 33 (OP_BOOL -> XOU .)
    INTEIRO         reduce using rule 33 (OP_BOOL -> XOU .)
    -               reduce using rule 33 (OP_BOOL -> XOU .)


state 62

    (34) OP_BOOL -> OU .
    (               reduce using rule 34 (OP_BOOL -> OU .)
    FALSO           reduce using rule 34 (OP_BOOL -> OU .)
    VERDADEIRO      reduce using rule 34 (OP_BOOL -> OU .)
    NAO             reduce using rule 34 (OP_BOOL -> OU .)
    CARACTERE       reduce using rule 34 (OP_BOOL -> OU .)
    ID              reduce using rule 34 (OP_BOOL -> OU .)
    REAL            reduce using rule 34 (OP_BOOL -> OU .)
    INTEIRO         reduce using rule 34 (OP_BOOL -> OU .)
    -               reduce using rule 34 (OP_BOOL -> OU .)


state 63

    (35) OP_BOOL -> E .
    (               reduce using rule 35 (OP_BOOL -> E .)
    FALSO           reduce using rule 35 (OP_BOOL -> E .)
    VERDADEIRO      reduce using rule 35 (OP_BOOL -> E .)
    NAO             reduce using rule 35 (OP_BOOL -> E .)
    CARACTERE       reduce using rule 35 (OP_BOOL -> E .)
    ID              reduce using rule 35 (OP_BOOL -> E .)
    REAL            reduce using rule 35 (OP_BOOL -> E .)
    INTEIRO         reduce using rule 35 (OP_BOOL -> E .)
    -               reduce using rule 35 (OP_BOOL -> E .)


state 64

    (68) expr -> ( . expr )
    (28) termoRelacional -> ( . expressaoRelacional )
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    (26) expressaoRelacional -> . termoRelacional
    (27) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (28) termoRelacional -> . ( expressaoRelacional )
    (29) termoRelacional -> . FALSO
    (30) termoRelacional -> . VERDADEIRO
    (31) termoRelacional -> . NAO termoRelacional
    (32) termoRelacional -> . expr OP_REL expr
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 64
    FALSO           shift and go to state 43
    VERDADEIRO      shift and go to state 44
    NAO             shift and go to state 45

    expr                           shift and go to state 66
    expressaoRelacional            shift and go to state 65
    termoRelacional                shift and go to state 41

state 65

    (28) termoRelacional -> ( expressaoRelacional . )
    (27) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (33) OP_BOOL -> . XOU
    (34) OP_BOOL -> . OU
    (35) OP_BOOL -> . E
    )               shift and go to state 101
    XOU             shift and go to state 61
    OU              shift and go to state 62
    E               shift and go to state 63

    OP_BOOL                        shift and go to state 60

state 66

    (68) expr -> ( expr . )
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    (32) termoRelacional -> expr . OP_REL expr
    (36) OP_REL -> . EQ
    (37) OP_REL -> . GT
    (38) OP_REL -> . GE
    (39) OP_REL -> . LT
    (40) OP_REL -> . LE
    (41) OP_REL -> . NE
    )               shift and go to state 102
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74
    -               shift and go to state 75
    +               shift and go to state 76
    EQ              shift and go to state 77
    GT              shift and go to state 78
    GE              shift and go to state 79
    LT              shift and go to state 80
    LE              shift and go to state 81
    NE              shift and go to state 82

    OP_REL                         shift and go to state 68

state 67

    (31) termoRelacional -> NAO termoRelacional .
    FACA            reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    XOU             reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    OU              reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    E               reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    ENTAO           reduce using rule 31 (termoRelacional -> NAO termoRelacional .)
    )               reduce using rule 31 (termoRelacional -> NAO termoRelacional .)


state 68

    (32) termoRelacional -> expr OP_REL . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 103

state 69

    (60) expr -> expr ^ . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 104

state 70

    (61) expr -> expr MOD . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 105

state 71

    (62) expr -> expr % . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 106

state 72

    (63) expr -> expr \ . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 107

state 73

    (64) expr -> expr / . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 108

state 74

    (65) expr -> expr * . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 109

state 75

    (66) expr -> expr - . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 110

state 76

    (67) expr -> expr + . expr
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 111

state 77

    (36) OP_REL -> EQ .
    CARACTERE       reduce using rule 36 (OP_REL -> EQ .)
    ID              reduce using rule 36 (OP_REL -> EQ .)
    REAL            reduce using rule 36 (OP_REL -> EQ .)
    INTEIRO         reduce using rule 36 (OP_REL -> EQ .)
    -               reduce using rule 36 (OP_REL -> EQ .)
    (               reduce using rule 36 (OP_REL -> EQ .)


state 78

    (37) OP_REL -> GT .
    CARACTERE       reduce using rule 37 (OP_REL -> GT .)
    ID              reduce using rule 37 (OP_REL -> GT .)
    REAL            reduce using rule 37 (OP_REL -> GT .)
    INTEIRO         reduce using rule 37 (OP_REL -> GT .)
    -               reduce using rule 37 (OP_REL -> GT .)
    (               reduce using rule 37 (OP_REL -> GT .)


state 79

    (38) OP_REL -> GE .
    CARACTERE       reduce using rule 38 (OP_REL -> GE .)
    ID              reduce using rule 38 (OP_REL -> GE .)
    REAL            reduce using rule 38 (OP_REL -> GE .)
    INTEIRO         reduce using rule 38 (OP_REL -> GE .)
    -               reduce using rule 38 (OP_REL -> GE .)
    (               reduce using rule 38 (OP_REL -> GE .)


state 80

    (39) OP_REL -> LT .
    CARACTERE       reduce using rule 39 (OP_REL -> LT .)
    ID              reduce using rule 39 (OP_REL -> LT .)
    REAL            reduce using rule 39 (OP_REL -> LT .)
    INTEIRO         reduce using rule 39 (OP_REL -> LT .)
    -               reduce using rule 39 (OP_REL -> LT .)
    (               reduce using rule 39 (OP_REL -> LT .)


state 81

    (40) OP_REL -> LE .
    CARACTERE       reduce using rule 40 (OP_REL -> LE .)
    ID              reduce using rule 40 (OP_REL -> LE .)
    REAL            reduce using rule 40 (OP_REL -> LE .)
    INTEIRO         reduce using rule 40 (OP_REL -> LE .)
    -               reduce using rule 40 (OP_REL -> LE .)
    (               reduce using rule 40 (OP_REL -> LE .)


state 82

    (41) OP_REL -> NE .
    CARACTERE       reduce using rule 41 (OP_REL -> NE .)
    ID              reduce using rule 41 (OP_REL -> NE .)
    REAL            reduce using rule 41 (OP_REL -> NE .)
    INTEIRO         reduce using rule 41 (OP_REL -> NE .)
    -               reduce using rule 41 (OP_REL -> NE .)
    (               reduce using rule 41 (OP_REL -> NE .)


state 83

    (59) expr -> - expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    ^               reduce using rule 59 (expr -> - expr .)
    MOD             reduce using rule 59 (expr -> - expr .)
    %               reduce using rule 59 (expr -> - expr .)
    \               reduce using rule 59 (expr -> - expr .)
    /               reduce using rule 59 (expr -> - expr .)
    *               reduce using rule 59 (expr -> - expr .)
    -               reduce using rule 59 (expr -> - expr .)
    +               reduce using rule 59 (expr -> - expr .)
    EQ              reduce using rule 59 (expr -> - expr .)
    GT              reduce using rule 59 (expr -> - expr .)
    GE              reduce using rule 59 (expr -> - expr .)
    LT              reduce using rule 59 (expr -> - expr .)
    LE              reduce using rule 59 (expr -> - expr .)
    NE              reduce using rule 59 (expr -> - expr .)
    )               reduce using rule 59 (expr -> - expr .)
    ;               reduce using rule 59 (expr -> - expr .)
    ,               reduce using rule 59 (expr -> - expr .)
    FACA            reduce using rule 59 (expr -> - expr .)
    XOU             reduce using rule 59 (expr -> - expr .)
    OU              reduce using rule 59 (expr -> - expr .)
    E               reduce using rule 59 (expr -> - expr .)
    ENTAO           reduce using rule 59 (expr -> - expr .)


state 84

    (68) expr -> ( . expr )
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    expr                           shift and go to state 112

state 85

    (24) cmdCondicao -> SE expressaoRelacional ENTAO . ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional ENTAO . ; bloco FIMSE
    ;               shift and go to state 113


state 86

    (23) cmdleitura -> LEIA ( ID . )
    )               shift and go to state 114


state 87

    (42) cmdattrib -> ID ASSIGN ( . typeArgs )
    (68) expr -> ( . expr )
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    FALSO           shift and go to state 90
    VERDADEIRO      shift and go to state 91
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    typeArgs                       shift and go to state 115
    expr                           shift and go to state 112

state 88

    (43) cmdattrib -> ID ASSIGN typeArgs .
    ;               reduce using rule 43 (cmdattrib -> ID ASSIGN typeArgs .)


state 89

    (44) cmdattrib -> ID ASSIGN expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    ;               reduce using rule 44 (cmdattrib -> ID ASSIGN expr .)
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74
    -               shift and go to state 75
    +               shift and go to state 76


state 90

    (45) typeArgs -> FALSO .
    ;               reduce using rule 45 (typeArgs -> FALSO .)
    )               reduce using rule 45 (typeArgs -> FALSO .)
    ,               reduce using rule 45 (typeArgs -> FALSO .)


state 91

    (46) typeArgs -> VERDADEIRO .
    ;               reduce using rule 46 (typeArgs -> VERDADEIRO .)
    )               reduce using rule 46 (typeArgs -> VERDADEIRO .)
    ,               reduce using rule 46 (typeArgs -> VERDADEIRO .)


state 92

    (47) cmdescrita -> ESCREVAL ( ) .
    ;               reduce using rule 47 (cmdescrita -> ESCREVAL ( ) .)


state 93

    (48) cmdescrita -> ESCREVAL ( typeArgsEscrita . )
    (54) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 116
    ,               shift and go to state 117


state 94

    (53) typeArgsEscrita -> typeArgsEscritaAux .
    )               reduce using rule 53 (typeArgsEscrita -> typeArgsEscritaAux .)
    ,               reduce using rule 53 (typeArgsEscrita -> typeArgsEscritaAux .)


state 95

    (51) typeArgsEscritaAux -> typeArgs .
    )               reduce using rule 51 (typeArgsEscritaAux -> typeArgs .)
    ,               reduce using rule 51 (typeArgsEscritaAux -> typeArgs .)


state 96

    (52) typeArgsEscritaAux -> expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    )               reduce using rule 52 (typeArgsEscritaAux -> expr .)
    ,               reduce using rule 52 (typeArgsEscritaAux -> expr .)
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74
    -               shift and go to state 75
    +               shift and go to state 76


state 97

    (49) cmdescrita -> ESCREVA ( ) .
    ;               reduce using rule 49 (cmdescrita -> ESCREVA ( ) .)


state 98

    (50) cmdescrita -> ESCREVA ( typeArgsEscrita . )
    (54) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 118
    ,               shift and go to state 117


state 99

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; . bloco FIMENQUANTO
    (14) bloco -> . cmd ; bloco
    (15) bloco -> . cmd ;
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 27
    ENQUANTO        shift and go to state 32
    SE              shift and go to state 33
    LEIA            shift and go to state 34
    ESCREVAL        shift and go to state 36
    ESCREVA         shift and go to state 37
    ID              shift and go to state 35

    bloco                          shift and go to state 119
    cmd                            shift and go to state 25
    cmdRepeticao                   shift and go to state 26
    cmdCondicao                    shift and go to state 28
    cmdleitura                     shift and go to state 29
    cmdescrita                     shift and go to state 30
    cmdattrib                      shift and go to state 31

state 100

    (27) expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .
    FACA            reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    XOU             reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    OU              reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    E               reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    ENTAO           reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    )               reduce using rule 27 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)


state 101

    (28) termoRelacional -> ( expressaoRelacional ) .
    FACA            reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    XOU             reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    OU              reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    E               reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    ENTAO           reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)
    )               reduce using rule 28 (termoRelacional -> ( expressaoRelacional ) .)


state 102

    (68) expr -> ( expr ) .
    ^               reduce using rule 68 (expr -> ( expr ) .)
    MOD             reduce using rule 68 (expr -> ( expr ) .)
    %               reduce using rule 68 (expr -> ( expr ) .)
    \               reduce using rule 68 (expr -> ( expr ) .)
    /               reduce using rule 68 (expr -> ( expr ) .)
    *               reduce using rule 68 (expr -> ( expr ) .)
    -               reduce using rule 68 (expr -> ( expr ) .)
    +               reduce using rule 68 (expr -> ( expr ) .)
    EQ              reduce using rule 68 (expr -> ( expr ) .)
    GT              reduce using rule 68 (expr -> ( expr ) .)
    GE              reduce using rule 68 (expr -> ( expr ) .)
    LT              reduce using rule 68 (expr -> ( expr ) .)
    LE              reduce using rule 68 (expr -> ( expr ) .)
    NE              reduce using rule 68 (expr -> ( expr ) .)
    )               reduce using rule 68 (expr -> ( expr ) .)
    ;               reduce using rule 68 (expr -> ( expr ) .)
    ,               reduce using rule 68 (expr -> ( expr ) .)
    FACA            reduce using rule 68 (expr -> ( expr ) .)
    XOU             reduce using rule 68 (expr -> ( expr ) .)
    OU              reduce using rule 68 (expr -> ( expr ) .)
    E               reduce using rule 68 (expr -> ( expr ) .)
    ENTAO           reduce using rule 68 (expr -> ( expr ) .)


state 103

    (32) termoRelacional -> expr OP_REL expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    FACA            reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    XOU             reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    OU              reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    E               reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    ENTAO           reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    )               reduce using rule 32 (termoRelacional -> expr OP_REL expr .)
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74
    -               shift and go to state 75
    +               shift and go to state 76


state 104

    (60) expr -> expr ^ expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 60 (expr -> expr ^ expr .)
    %               reduce using rule 60 (expr -> expr ^ expr .)
    \               reduce using rule 60 (expr -> expr ^ expr .)
    /               reduce using rule 60 (expr -> expr ^ expr .)
    *               reduce using rule 60 (expr -> expr ^ expr .)
    -               reduce using rule 60 (expr -> expr ^ expr .)
    +               reduce using rule 60 (expr -> expr ^ expr .)
    EQ              reduce using rule 60 (expr -> expr ^ expr .)
    GT              reduce using rule 60 (expr -> expr ^ expr .)
    GE              reduce using rule 60 (expr -> expr ^ expr .)
    LT              reduce using rule 60 (expr -> expr ^ expr .)
    LE              reduce using rule 60 (expr -> expr ^ expr .)
    NE              reduce using rule 60 (expr -> expr ^ expr .)
    )               reduce using rule 60 (expr -> expr ^ expr .)
    ;               reduce using rule 60 (expr -> expr ^ expr .)
    ,               reduce using rule 60 (expr -> expr ^ expr .)
    FACA            reduce using rule 60 (expr -> expr ^ expr .)
    XOU             reduce using rule 60 (expr -> expr ^ expr .)
    OU              reduce using rule 60 (expr -> expr ^ expr .)
    E               reduce using rule 60 (expr -> expr ^ expr .)
    ENTAO           reduce using rule 60 (expr -> expr ^ expr .)
    ^               shift and go to state 69


state 105

    (61) expr -> expr MOD expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 61 (expr -> expr MOD expr .)
    %               reduce using rule 61 (expr -> expr MOD expr .)
    \               reduce using rule 61 (expr -> expr MOD expr .)
    /               reduce using rule 61 (expr -> expr MOD expr .)
    *               reduce using rule 61 (expr -> expr MOD expr .)
    -               reduce using rule 61 (expr -> expr MOD expr .)
    +               reduce using rule 61 (expr -> expr MOD expr .)
    EQ              reduce using rule 61 (expr -> expr MOD expr .)
    GT              reduce using rule 61 (expr -> expr MOD expr .)
    GE              reduce using rule 61 (expr -> expr MOD expr .)
    LT              reduce using rule 61 (expr -> expr MOD expr .)
    LE              reduce using rule 61 (expr -> expr MOD expr .)
    NE              reduce using rule 61 (expr -> expr MOD expr .)
    )               reduce using rule 61 (expr -> expr MOD expr .)
    ;               reduce using rule 61 (expr -> expr MOD expr .)
    ,               reduce using rule 61 (expr -> expr MOD expr .)
    FACA            reduce using rule 61 (expr -> expr MOD expr .)
    XOU             reduce using rule 61 (expr -> expr MOD expr .)
    OU              reduce using rule 61 (expr -> expr MOD expr .)
    E               reduce using rule 61 (expr -> expr MOD expr .)
    ENTAO           reduce using rule 61 (expr -> expr MOD expr .)
    ^               shift and go to state 69


state 106

    (62) expr -> expr % expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 62 (expr -> expr % expr .)
    %               reduce using rule 62 (expr -> expr % expr .)
    \               reduce using rule 62 (expr -> expr % expr .)
    /               reduce using rule 62 (expr -> expr % expr .)
    *               reduce using rule 62 (expr -> expr % expr .)
    -               reduce using rule 62 (expr -> expr % expr .)
    +               reduce using rule 62 (expr -> expr % expr .)
    EQ              reduce using rule 62 (expr -> expr % expr .)
    GT              reduce using rule 62 (expr -> expr % expr .)
    GE              reduce using rule 62 (expr -> expr % expr .)
    LT              reduce using rule 62 (expr -> expr % expr .)
    LE              reduce using rule 62 (expr -> expr % expr .)
    NE              reduce using rule 62 (expr -> expr % expr .)
    )               reduce using rule 62 (expr -> expr % expr .)
    ;               reduce using rule 62 (expr -> expr % expr .)
    ,               reduce using rule 62 (expr -> expr % expr .)
    FACA            reduce using rule 62 (expr -> expr % expr .)
    XOU             reduce using rule 62 (expr -> expr % expr .)
    OU              reduce using rule 62 (expr -> expr % expr .)
    E               reduce using rule 62 (expr -> expr % expr .)
    ENTAO           reduce using rule 62 (expr -> expr % expr .)
    ^               shift and go to state 69


state 107

    (63) expr -> expr \ expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 63 (expr -> expr \ expr .)
    %               reduce using rule 63 (expr -> expr \ expr .)
    \               reduce using rule 63 (expr -> expr \ expr .)
    /               reduce using rule 63 (expr -> expr \ expr .)
    *               reduce using rule 63 (expr -> expr \ expr .)
    -               reduce using rule 63 (expr -> expr \ expr .)
    +               reduce using rule 63 (expr -> expr \ expr .)
    EQ              reduce using rule 63 (expr -> expr \ expr .)
    GT              reduce using rule 63 (expr -> expr \ expr .)
    GE              reduce using rule 63 (expr -> expr \ expr .)
    LT              reduce using rule 63 (expr -> expr \ expr .)
    LE              reduce using rule 63 (expr -> expr \ expr .)
    NE              reduce using rule 63 (expr -> expr \ expr .)
    )               reduce using rule 63 (expr -> expr \ expr .)
    ;               reduce using rule 63 (expr -> expr \ expr .)
    ,               reduce using rule 63 (expr -> expr \ expr .)
    FACA            reduce using rule 63 (expr -> expr \ expr .)
    XOU             reduce using rule 63 (expr -> expr \ expr .)
    OU              reduce using rule 63 (expr -> expr \ expr .)
    E               reduce using rule 63 (expr -> expr \ expr .)
    ENTAO           reduce using rule 63 (expr -> expr \ expr .)
    ^               shift and go to state 69


state 108

    (64) expr -> expr / expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 64 (expr -> expr / expr .)
    %               reduce using rule 64 (expr -> expr / expr .)
    \               reduce using rule 64 (expr -> expr / expr .)
    /               reduce using rule 64 (expr -> expr / expr .)
    *               reduce using rule 64 (expr -> expr / expr .)
    -               reduce using rule 64 (expr -> expr / expr .)
    +               reduce using rule 64 (expr -> expr / expr .)
    EQ              reduce using rule 64 (expr -> expr / expr .)
    GT              reduce using rule 64 (expr -> expr / expr .)
    GE              reduce using rule 64 (expr -> expr / expr .)
    LT              reduce using rule 64 (expr -> expr / expr .)
    LE              reduce using rule 64 (expr -> expr / expr .)
    NE              reduce using rule 64 (expr -> expr / expr .)
    )               reduce using rule 64 (expr -> expr / expr .)
    ;               reduce using rule 64 (expr -> expr / expr .)
    ,               reduce using rule 64 (expr -> expr / expr .)
    FACA            reduce using rule 64 (expr -> expr / expr .)
    XOU             reduce using rule 64 (expr -> expr / expr .)
    OU              reduce using rule 64 (expr -> expr / expr .)
    E               reduce using rule 64 (expr -> expr / expr .)
    ENTAO           reduce using rule 64 (expr -> expr / expr .)
    ^               shift and go to state 69


state 109

    (65) expr -> expr * expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    MOD             reduce using rule 65 (expr -> expr * expr .)
    %               reduce using rule 65 (expr -> expr * expr .)
    \               reduce using rule 65 (expr -> expr * expr .)
    /               reduce using rule 65 (expr -> expr * expr .)
    *               reduce using rule 65 (expr -> expr * expr .)
    -               reduce using rule 65 (expr -> expr * expr .)
    +               reduce using rule 65 (expr -> expr * expr .)
    EQ              reduce using rule 65 (expr -> expr * expr .)
    GT              reduce using rule 65 (expr -> expr * expr .)
    GE              reduce using rule 65 (expr -> expr * expr .)
    LT              reduce using rule 65 (expr -> expr * expr .)
    LE              reduce using rule 65 (expr -> expr * expr .)
    NE              reduce using rule 65 (expr -> expr * expr .)
    )               reduce using rule 65 (expr -> expr * expr .)
    ;               reduce using rule 65 (expr -> expr * expr .)
    ,               reduce using rule 65 (expr -> expr * expr .)
    FACA            reduce using rule 65 (expr -> expr * expr .)
    XOU             reduce using rule 65 (expr -> expr * expr .)
    OU              reduce using rule 65 (expr -> expr * expr .)
    E               reduce using rule 65 (expr -> expr * expr .)
    ENTAO           reduce using rule 65 (expr -> expr * expr .)
    ^               shift and go to state 69


state 110

    (66) expr -> expr - expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    -               reduce using rule 66 (expr -> expr - expr .)
    +               reduce using rule 66 (expr -> expr - expr .)
    EQ              reduce using rule 66 (expr -> expr - expr .)
    GT              reduce using rule 66 (expr -> expr - expr .)
    GE              reduce using rule 66 (expr -> expr - expr .)
    LT              reduce using rule 66 (expr -> expr - expr .)
    LE              reduce using rule 66 (expr -> expr - expr .)
    NE              reduce using rule 66 (expr -> expr - expr .)
    )               reduce using rule 66 (expr -> expr - expr .)
    ;               reduce using rule 66 (expr -> expr - expr .)
    ,               reduce using rule 66 (expr -> expr - expr .)
    FACA            reduce using rule 66 (expr -> expr - expr .)
    XOU             reduce using rule 66 (expr -> expr - expr .)
    OU              reduce using rule 66 (expr -> expr - expr .)
    E               reduce using rule 66 (expr -> expr - expr .)
    ENTAO           reduce using rule 66 (expr -> expr - expr .)
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74


state 111

    (67) expr -> expr + expr .
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    -               reduce using rule 67 (expr -> expr + expr .)
    +               reduce using rule 67 (expr -> expr + expr .)
    EQ              reduce using rule 67 (expr -> expr + expr .)
    GT              reduce using rule 67 (expr -> expr + expr .)
    GE              reduce using rule 67 (expr -> expr + expr .)
    LT              reduce using rule 67 (expr -> expr + expr .)
    LE              reduce using rule 67 (expr -> expr + expr .)
    NE              reduce using rule 67 (expr -> expr + expr .)
    )               reduce using rule 67 (expr -> expr + expr .)
    ;               reduce using rule 67 (expr -> expr + expr .)
    ,               reduce using rule 67 (expr -> expr + expr .)
    FACA            reduce using rule 67 (expr -> expr + expr .)
    XOU             reduce using rule 67 (expr -> expr + expr .)
    OU              reduce using rule 67 (expr -> expr + expr .)
    E               reduce using rule 67 (expr -> expr + expr .)
    ENTAO           reduce using rule 67 (expr -> expr + expr .)
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74


state 112

    (68) expr -> ( expr . )
    (60) expr -> expr . ^ expr
    (61) expr -> expr . MOD expr
    (62) expr -> expr . % expr
    (63) expr -> expr . \ expr
    (64) expr -> expr . / expr
    (65) expr -> expr . * expr
    (66) expr -> expr . - expr
    (67) expr -> expr . + expr
    )               shift and go to state 102
    ^               shift and go to state 69
    MOD             shift and go to state 70
    %               shift and go to state 71
    \               shift and go to state 72
    /               shift and go to state 73
    *               shift and go to state 74
    -               shift and go to state 75
    +               shift and go to state 76


state 113

    (24) cmdCondicao -> SE expressaoRelacional ENTAO ; . bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional ENTAO ; . bloco FIMSE
    (14) bloco -> . cmd ; bloco
    (15) bloco -> . cmd ;
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 27
    ENQUANTO        shift and go to state 32
    SE              shift and go to state 33
    LEIA            shift and go to state 34
    ESCREVAL        shift and go to state 36
    ESCREVA         shift and go to state 37
    ID              shift and go to state 35

    bloco                          shift and go to state 120
    cmd                            shift and go to state 25
    cmdRepeticao                   shift and go to state 26
    cmdCondicao                    shift and go to state 28
    cmdleitura                     shift and go to state 29
    cmdescrita                     shift and go to state 30
    cmdattrib                      shift and go to state 31

state 114

    (23) cmdleitura -> LEIA ( ID ) .
    ;               reduce using rule 23 (cmdleitura -> LEIA ( ID ) .)


state 115

    (42) cmdattrib -> ID ASSIGN ( typeArgs . )
    )               shift and go to state 121


state 116

    (48) cmdescrita -> ESCREVAL ( typeArgsEscrita ) .
    ;               reduce using rule 48 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)


state 117

    (54) typeArgsEscrita -> typeArgsEscrita , . typeArgsEscritaAux
    (51) typeArgsEscritaAux -> . typeArgs
    (52) typeArgsEscritaAux -> . expr
    (45) typeArgs -> . FALSO
    (46) typeArgs -> . VERDADEIRO
    (55) expr -> . CARACTERE
    (56) expr -> . ID
    (57) expr -> . REAL
    (58) expr -> . INTEIRO
    (59) expr -> . - expr
    (60) expr -> . expr ^ expr
    (61) expr -> . expr MOD expr
    (62) expr -> . expr % expr
    (63) expr -> . expr \ expr
    (64) expr -> . expr / expr
    (65) expr -> . expr * expr
    (66) expr -> . expr - expr
    (67) expr -> . expr + expr
    (68) expr -> . ( expr )
    FALSO           shift and go to state 90
    VERDADEIRO      shift and go to state 91
    CARACTERE       shift and go to state 47
    ID              shift and go to state 48
    REAL            shift and go to state 49
    INTEIRO         shift and go to state 50
    -               shift and go to state 51
    (               shift and go to state 84

    typeArgsEscritaAux             shift and go to state 122
    typeArgs                       shift and go to state 95
    expr                           shift and go to state 96

state 118

    (50) cmdescrita -> ESCREVA ( typeArgsEscrita ) .
    ;               reduce using rule 50 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)


state 119

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco . FIMENQUANTO
    FIMENQUANTO     shift and go to state 123


state 120

    (24) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco . SENAO ; bloco FIMSE
    (25) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco . FIMSE
    SENAO           shift and go to state 124
    FIMSE           shift and go to state 125


state 121

    (42) cmdattrib -> ID ASSIGN ( typeArgs ) .
    ;               reduce using rule 42 (cmdattrib -> ID ASSIGN ( typeArgs ) .)


state 122

    (54) typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .
    )               reduce using rule 54 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)
    ,               reduce using rule 54 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)


state 123

    (22) cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO .
    ;               reduce using rule 22 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO .)


state 124

    (24) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO . ; bloco FIMSE
    ;               shift and go to state 126


state 125

    (25) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco FIMSE .
    ;               reduce using rule 25 (cmdCondicao -> SE expressaoRelacional ENTAO ; bloco FIMSE .)


state 126

    (24) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; . bloco FIMSE
    (14) bloco -> . cmd ; bloco
    (15) bloco -> . cmd ;
    (16) cmd -> . cmdRepeticao
    (17) cmd -> . LIMPATELA
    (18) cmd -> . cmdCondicao
    (19) cmd -> . cmdleitura
    (20) cmd -> . cmdescrita
    (21) cmd -> . cmdattrib
    (22) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (24) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (25) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (23) cmdleitura -> . LEIA ( ID )
    (47) cmdescrita -> . ESCREVAL ( )
    (48) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (49) cmdescrita -> . ESCREVA ( )
    (50) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (42) cmdattrib -> . ID ASSIGN ( typeArgs )
    (43) cmdattrib -> . ID ASSIGN typeArgs
    (44) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 27
    ENQUANTO        shift and go to state 32
    SE              shift and go to state 33
    LEIA            shift and go to state 34
    ESCREVAL        shift and go to state 36
    ESCREVA         shift and go to state 37
    ID              shift and go to state 35

    bloco                          shift and go to state 127
    cmd                            shift and go to state 25
    cmdRepeticao                   shift and go to state 26
    cmdCondicao                    shift and go to state 28
    cmdleitura                     shift and go to state 29
    cmdescrita                     shift and go to state 30
    cmdattrib                      shift and go to state 31

state 127

    (24) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco . FIMSE
    FIMSE           shift and go to state 128


state 128

    (24) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE .
    ;               reduce using rule 24 (cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE .)
