Grammar:

Rule 0     S' -> initial
Rule 1     initial -> ALGORITMO CARACTERE ; varAux INICIO ; blocoType FIMALGORITMO ;
Rule 2     varAux -> VAR ; declaracaoType
Rule 3     varAux -> <empty>
Rule 4     blocoType -> <empty>
Rule 5     blocoType -> bloco
Rule 6     declaracaoType -> <empty>
Rule 7     declaracaoType -> declaracaoTypeAux
Rule 8     declaracaoTypeAux -> declaracao ;
Rule 9     declaracaoTypeAux -> declaracao ; declaracaoTypeAux
Rule 10    declaracao -> vartype : LOGICO
Rule 11    declaracao -> vartype : CARACTERE
Rule 12    declaracao -> vartype : REAL
Rule 13    declaracao -> vartype : INTEIRO
Rule 14    vartype -> ID , vartype
Rule 15    vartype -> ID
Rule 16    bloco -> cmd ; bloco
Rule 17    bloco -> cmd ;
Rule 18    cmd -> cmdRepeticao
Rule 19    cmd -> LIMPATELA
Rule 20    cmd -> cmdCondicao
Rule 21    cmd -> cmdleitura
Rule 22    cmd -> cmdescrita
Rule 23    cmd -> cmdattrib
Rule 24    cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
Rule 25    cmdleitura -> LEIA ( idAux )
Rule 26    idAux -> ID , idAux
Rule 27    idAux -> ID
Rule 28    cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
Rule 29    cmdCondicao -> SE expressaoRelacional ENTAO ; bloco FIMSE
Rule 30    expressaoRelacional -> termoRelacional
Rule 31    expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional
Rule 32    termoRelacional -> ( expressaoRelacional )
Rule 33    termoRelacional -> FALSO
Rule 34    termoRelacional -> VERDADEIRO
Rule 35    termoRelacional -> NAO termoRelacional
Rule 36    termoRelacional -> expr OP_REL expr
Rule 37    OP_BOOL -> OU  [precedence=nonassoc, level=1]
Rule 38    OP_BOOL -> E  [precedence=nonassoc, level=1]
Rule 39    OP_REL -> EQ  [precedence=nonassoc, level=1]
Rule 40    OP_REL -> GT  [precedence=nonassoc, level=1]
Rule 41    OP_REL -> GE  [precedence=nonassoc, level=1]
Rule 42    OP_REL -> LT  [precedence=nonassoc, level=1]
Rule 43    OP_REL -> LE  [precedence=nonassoc, level=1]
Rule 44    OP_REL -> NE  [precedence=nonassoc, level=1]
Rule 45    cmdattrib -> ID ASSIGN ( typeArgs )
Rule 46    cmdattrib -> ID ASSIGN typeArgs
Rule 47    cmdattrib -> ID ASSIGN expr
Rule 48    typeArgs -> expr OP_REL expr
Rule 49    typeArgs -> FALSO
Rule 50    typeArgs -> VERDADEIRO
Rule 51    cmdescrita -> ESCREVAL ( )
Rule 52    cmdescrita -> ESCREVAL ( typeArgsEscrita )
Rule 53    cmdescrita -> ESCREVA ( )
Rule 54    cmdescrita -> ESCREVA ( typeArgsEscrita )
Rule 55    typeArgsEscritaAux -> typeArgs
Rule 56    typeArgsEscritaAux -> expr
Rule 57    typeArgsEscrita -> typeArgsEscritaAux
Rule 58    typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux
Rule 59    expr -> CARACTERE
Rule 60    expr -> ID
Rule 61    expr -> REAL
Rule 62    expr -> INTEIRO
Rule 63    expr -> - expr  [precedence=right, level=5]
Rule 64    expr -> + expr  [precedence=right, level=5]
Rule 65    expr -> expr ^ expr  [precedence=right, level=4]
Rule 66    expr -> expr MOD expr  [precedence=left, level=3]
Rule 67    expr -> expr % expr  [precedence=left, level=3]
Rule 68    expr -> expr \ expr  [precedence=left, level=3]
Rule 69    expr -> expr / expr  [precedence=left, level=3]
Rule 70    expr -> expr * expr  [precedence=left, level=3]
Rule 71    expr -> expr - expr  [precedence=left, level=2]
Rule 72    expr -> expr + expr  [precedence=left, level=2]
Rule 73    expr -> ( expr )

Terminals, with rules where they appear:

%                    : 67
(                    : 25 32 45 51 52 53 54 73
)                    : 25 32 45 51 52 53 54 73
*                    : 70
+                    : 64 72
,                    : 14 26 58
-                    : 63 71
/                    : 69
:                    : 10 11 12 13
;                    : 1 1 1 2 8 9 16 17 24 28 28 29
ALGORITMO            : 1
ASSIGN               : 45 46 47
CARACTERE            : 1 11 59
E                    : 38
ENQUANTO             : 24
ENTAO                : 28 29
EQ                   : 39
ESCREVA              : 53 54
ESCREVAL             : 51 52
FACA                 : 24
FALSO                : 33 49
FIMALGORITMO         : 1
FIMENQUANTO          : 24
FIMSE                : 28 29
GE                   : 41
GT                   : 40
ID                   : 14 15 26 27 45 46 47 60
INICIO               : 1
INTEIRO              : 13 62
LE                   : 43
LEIA                 : 25
LIMPATELA            : 19
LOGICO               : 10
LT                   : 42
MOD                  : 66
NAO                  : 35
NE                   : 44
OU                   : 37
REAL                 : 12 61
SE                   : 28 29
SENAO                : 28
VAR                  : 2
VERDADEIRO           : 34 50
\                    : 68
^                    : 65
error                : 

Nonterminals, with rules where they appear:

OP_BOOL              : 31
OP_REL               : 36 48
bloco                : 5 16 24 28 28 29
blocoType            : 1
cmd                  : 16 17
cmdCondicao          : 20
cmdRepeticao         : 18
cmdattrib            : 23
cmdescrita           : 22
cmdleitura           : 21
declaracao           : 8 9
declaracaoType       : 2
declaracaoTypeAux    : 7 9
expr                 : 36 36 47 48 48 56 63 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73
expressaoRelacional  : 24 28 29 31 32
idAux                : 25 26
initial              : 0
termoRelacional      : 30 31 35
typeArgs             : 45 46 55
typeArgsEscrita      : 52 54 58
typeArgsEscritaAux   : 57 58
varAux               : 1
vartype              : 10 11 12 13 14


state 0

    (0) S' -> . initial
    (1) initial -> . ALGORITMO CARACTERE ; varAux INICIO ; blocoType FIMALGORITMO ;
    ALGORITMO       shift and go to state 2

    initial                        shift and go to state 1

state 1

    (0) S' -> initial .


state 2

    (1) initial -> ALGORITMO . CARACTERE ; varAux INICIO ; blocoType FIMALGORITMO ;
    CARACTERE       shift and go to state 3


state 3

    (1) initial -> ALGORITMO CARACTERE . ; varAux INICIO ; blocoType FIMALGORITMO ;
    ;               shift and go to state 4


state 4

    (1) initial -> ALGORITMO CARACTERE ; . varAux INICIO ; blocoType FIMALGORITMO ;
    (2) varAux -> . VAR ; declaracaoType
    (3) varAux -> .
    VAR             shift and go to state 6
    INICIO          reduce using rule 3 (varAux -> .)

    varAux                         shift and go to state 5

state 5

    (1) initial -> ALGORITMO CARACTERE ; varAux . INICIO ; blocoType FIMALGORITMO ;
    INICIO          shift and go to state 7


state 6

    (2) varAux -> VAR . ; declaracaoType
    ;               shift and go to state 8


state 7

    (1) initial -> ALGORITMO CARACTERE ; varAux INICIO . ; blocoType FIMALGORITMO ;
    ;               shift and go to state 9


state 8

    (2) varAux -> VAR ; . declaracaoType
    (6) declaracaoType -> .
    (7) declaracaoType -> . declaracaoTypeAux
    (8) declaracaoTypeAux -> . declaracao ;
    (9) declaracaoTypeAux -> . declaracao ; declaracaoTypeAux
    (10) declaracao -> . vartype : LOGICO
    (11) declaracao -> . vartype : CARACTERE
    (12) declaracao -> . vartype : REAL
    (13) declaracao -> . vartype : INTEIRO
    (14) vartype -> . ID , vartype
    (15) vartype -> . ID
    INICIO          reduce using rule 6 (declaracaoType -> .)
    ID              shift and go to state 14

    declaracaoType                 shift and go to state 10
    declaracaoTypeAux              shift and go to state 11
    declaracao                     shift and go to state 12
    vartype                        shift and go to state 13

state 9

    (1) initial -> ALGORITMO CARACTERE ; varAux INICIO ; . blocoType FIMALGORITMO ;
    (4) blocoType -> .
    (5) blocoType -> . bloco
    (16) bloco -> . cmd ; bloco
    (17) bloco -> . cmd ;
    (18) cmd -> . cmdRepeticao
    (19) cmd -> . LIMPATELA
    (20) cmd -> . cmdCondicao
    (21) cmd -> . cmdleitura
    (22) cmd -> . cmdescrita
    (23) cmd -> . cmdattrib
    (24) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (28) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (25) cmdleitura -> . LEIA ( idAux )
    (51) cmdescrita -> . ESCREVAL ( )
    (52) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (53) cmdescrita -> . ESCREVA ( )
    (54) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (45) cmdattrib -> . ID ASSIGN ( typeArgs )
    (46) cmdattrib -> . ID ASSIGN typeArgs
    (47) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 4 (blocoType -> .)
    LIMPATELA       shift and go to state 19
    ENQUANTO        shift and go to state 24
    SE              shift and go to state 25
    LEIA            shift and go to state 26
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 29

    blocoType                      shift and go to state 15
    bloco                          shift and go to state 16
    cmd                            shift and go to state 17
    cmdRepeticao                   shift and go to state 18
    cmdCondicao                    shift and go to state 20
    cmdleitura                     shift and go to state 21
    cmdescrita                     shift and go to state 22
    cmdattrib                      shift and go to state 23

state 10

    (2) varAux -> VAR ; declaracaoType .
    INICIO          reduce using rule 2 (varAux -> VAR ; declaracaoType .)


state 11

    (7) declaracaoType -> declaracaoTypeAux .
    INICIO          reduce using rule 7 (declaracaoType -> declaracaoTypeAux .)


state 12

    (8) declaracaoTypeAux -> declaracao . ;
    (9) declaracaoTypeAux -> declaracao . ; declaracaoTypeAux
    ;               shift and go to state 30


state 13

    (10) declaracao -> vartype . : LOGICO
    (11) declaracao -> vartype . : CARACTERE
    (12) declaracao -> vartype . : REAL
    (13) declaracao -> vartype . : INTEIRO
    :               shift and go to state 31


state 14

    (14) vartype -> ID . , vartype
    (15) vartype -> ID .
    ,               shift and go to state 32
    :               reduce using rule 15 (vartype -> ID .)


state 15

    (1) initial -> ALGORITMO CARACTERE ; varAux INICIO ; blocoType . FIMALGORITMO ;
    FIMALGORITMO    shift and go to state 33


state 16

    (5) blocoType -> bloco .
    FIMALGORITMO    reduce using rule 5 (blocoType -> bloco .)


state 17

    (16) bloco -> cmd . ; bloco
    (17) bloco -> cmd . ;
    ;               shift and go to state 34


state 18

    (18) cmd -> cmdRepeticao .
    ;               reduce using rule 18 (cmd -> cmdRepeticao .)


state 19

    (19) cmd -> LIMPATELA .
    ;               reduce using rule 19 (cmd -> LIMPATELA .)


state 20

    (20) cmd -> cmdCondicao .
    ;               reduce using rule 20 (cmd -> cmdCondicao .)


state 21

    (21) cmd -> cmdleitura .
    ;               reduce using rule 21 (cmd -> cmdleitura .)


state 22

    (22) cmd -> cmdescrita .
    ;               reduce using rule 22 (cmd -> cmdescrita .)


state 23

    (23) cmd -> cmdattrib .
    ;               reduce using rule 23 (cmd -> cmdattrib .)


state 24

    (24) cmdRepeticao -> ENQUANTO . expressaoRelacional FACA ; bloco FIMENQUANTO
    (30) expressaoRelacional -> . termoRelacional
    (31) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (32) termoRelacional -> . ( expressaoRelacional )
    (33) termoRelacional -> . FALSO
    (34) termoRelacional -> . VERDADEIRO
    (35) termoRelacional -> . NAO termoRelacional
    (36) termoRelacional -> . expr OP_REL expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (               shift and go to state 37
    FALSO           shift and go to state 38
    VERDADEIRO      shift and go to state 39
    NAO             shift and go to state 40
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47

    expressaoRelacional            shift and go to state 35
    termoRelacional                shift and go to state 36
    expr                           shift and go to state 41

state 25

    (28) cmdCondicao -> SE . expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> SE . expressaoRelacional ENTAO ; bloco FIMSE
    (30) expressaoRelacional -> . termoRelacional
    (31) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (32) termoRelacional -> . ( expressaoRelacional )
    (33) termoRelacional -> . FALSO
    (34) termoRelacional -> . VERDADEIRO
    (35) termoRelacional -> . NAO termoRelacional
    (36) termoRelacional -> . expr OP_REL expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (               shift and go to state 37
    FALSO           shift and go to state 38
    VERDADEIRO      shift and go to state 39
    NAO             shift and go to state 40
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47

    expressaoRelacional            shift and go to state 48
    termoRelacional                shift and go to state 36
    expr                           shift and go to state 41

state 26

    (25) cmdleitura -> LEIA . ( idAux )
    (               shift and go to state 49


state 27

    (51) cmdescrita -> ESCREVAL . ( )
    (52) cmdescrita -> ESCREVAL . ( typeArgsEscrita )
    (               shift and go to state 50


state 28

    (53) cmdescrita -> ESCREVA . ( )
    (54) cmdescrita -> ESCREVA . ( typeArgsEscrita )
    (               shift and go to state 51


state 29

    (45) cmdattrib -> ID . ASSIGN ( typeArgs )
    (46) cmdattrib -> ID . ASSIGN typeArgs
    (47) cmdattrib -> ID . ASSIGN expr
    ASSIGN          shift and go to state 52


state 30

    (8) declaracaoTypeAux -> declaracao ; .
    (9) declaracaoTypeAux -> declaracao ; . declaracaoTypeAux
    (8) declaracaoTypeAux -> . declaracao ;
    (9) declaracaoTypeAux -> . declaracao ; declaracaoTypeAux
    (10) declaracao -> . vartype : LOGICO
    (11) declaracao -> . vartype : CARACTERE
    (12) declaracao -> . vartype : REAL
    (13) declaracao -> . vartype : INTEIRO
    (14) vartype -> . ID , vartype
    (15) vartype -> . ID
    INICIO          reduce using rule 8 (declaracaoTypeAux -> declaracao ; .)
    ID              shift and go to state 14

    declaracao                     shift and go to state 12
    declaracaoTypeAux              shift and go to state 53
    vartype                        shift and go to state 13

state 31

    (10) declaracao -> vartype : . LOGICO
    (11) declaracao -> vartype : . CARACTERE
    (12) declaracao -> vartype : . REAL
    (13) declaracao -> vartype : . INTEIRO
    LOGICO          shift and go to state 54
    CARACTERE       shift and go to state 55
    REAL            shift and go to state 56
    INTEIRO         shift and go to state 57


state 32

    (14) vartype -> ID , . vartype
    (14) vartype -> . ID , vartype
    (15) vartype -> . ID
    ID              shift and go to state 14

    vartype                        shift and go to state 58

state 33

    (1) initial -> ALGORITMO CARACTERE ; varAux INICIO ; blocoType FIMALGORITMO . ;
    ;               shift and go to state 59


state 34

    (16) bloco -> cmd ; . bloco
    (17) bloco -> cmd ; .
    (16) bloco -> . cmd ; bloco
    (17) bloco -> . cmd ;
    (18) cmd -> . cmdRepeticao
    (19) cmd -> . LIMPATELA
    (20) cmd -> . cmdCondicao
    (21) cmd -> . cmdleitura
    (22) cmd -> . cmdescrita
    (23) cmd -> . cmdattrib
    (24) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (28) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (25) cmdleitura -> . LEIA ( idAux )
    (51) cmdescrita -> . ESCREVAL ( )
    (52) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (53) cmdescrita -> . ESCREVA ( )
    (54) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (45) cmdattrib -> . ID ASSIGN ( typeArgs )
    (46) cmdattrib -> . ID ASSIGN typeArgs
    (47) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 17 (bloco -> cmd ; .)
    FIMENQUANTO     reduce using rule 17 (bloco -> cmd ; .)
    SENAO           reduce using rule 17 (bloco -> cmd ; .)
    FIMSE           reduce using rule 17 (bloco -> cmd ; .)
    LIMPATELA       shift and go to state 19
    ENQUANTO        shift and go to state 24
    SE              shift and go to state 25
    LEIA            shift and go to state 26
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 29

    cmd                            shift and go to state 17
    bloco                          shift and go to state 60
    cmdRepeticao                   shift and go to state 18
    cmdCondicao                    shift and go to state 20
    cmdleitura                     shift and go to state 21
    cmdescrita                     shift and go to state 22
    cmdattrib                      shift and go to state 23

state 35

    (24) cmdRepeticao -> ENQUANTO expressaoRelacional . FACA ; bloco FIMENQUANTO
    (31) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (37) OP_BOOL -> . OU
    (38) OP_BOOL -> . E
    FACA            shift and go to state 61
    OU              shift and go to state 63
    E               shift and go to state 64

    OP_BOOL                        shift and go to state 62

state 36

    (30) expressaoRelacional -> termoRelacional .
    FACA            reduce using rule 30 (expressaoRelacional -> termoRelacional .)
    OU              reduce using rule 30 (expressaoRelacional -> termoRelacional .)
    E               reduce using rule 30 (expressaoRelacional -> termoRelacional .)
    ENTAO           reduce using rule 30 (expressaoRelacional -> termoRelacional .)
    )               reduce using rule 30 (expressaoRelacional -> termoRelacional .)


state 37

    (32) termoRelacional -> ( . expressaoRelacional )
    (73) expr -> ( . expr )
    (30) expressaoRelacional -> . termoRelacional
    (31) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (32) termoRelacional -> . ( expressaoRelacional )
    (33) termoRelacional -> . FALSO
    (34) termoRelacional -> . VERDADEIRO
    (35) termoRelacional -> . NAO termoRelacional
    (36) termoRelacional -> . expr OP_REL expr
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 65
    FALSO           shift and go to state 38
    VERDADEIRO      shift and go to state 39
    NAO             shift and go to state 40

    expressaoRelacional            shift and go to state 66
    expr                           shift and go to state 67
    termoRelacional                shift and go to state 36

state 38

    (33) termoRelacional -> FALSO .
    FACA            reduce using rule 33 (termoRelacional -> FALSO .)
    OU              reduce using rule 33 (termoRelacional -> FALSO .)
    E               reduce using rule 33 (termoRelacional -> FALSO .)
    ENTAO           reduce using rule 33 (termoRelacional -> FALSO .)
    )               reduce using rule 33 (termoRelacional -> FALSO .)


state 39

    (34) termoRelacional -> VERDADEIRO .
    FACA            reduce using rule 34 (termoRelacional -> VERDADEIRO .)
    OU              reduce using rule 34 (termoRelacional -> VERDADEIRO .)
    E               reduce using rule 34 (termoRelacional -> VERDADEIRO .)
    ENTAO           reduce using rule 34 (termoRelacional -> VERDADEIRO .)
    )               reduce using rule 34 (termoRelacional -> VERDADEIRO .)


state 40

    (35) termoRelacional -> NAO . termoRelacional
    (32) termoRelacional -> . ( expressaoRelacional )
    (33) termoRelacional -> . FALSO
    (34) termoRelacional -> . VERDADEIRO
    (35) termoRelacional -> . NAO termoRelacional
    (36) termoRelacional -> . expr OP_REL expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (               shift and go to state 37
    FALSO           shift and go to state 38
    VERDADEIRO      shift and go to state 39
    NAO             shift and go to state 40
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47

    termoRelacional                shift and go to state 68
    expr                           shift and go to state 41

state 41

    (36) termoRelacional -> expr . OP_REL expr
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    (39) OP_REL -> . EQ
    (40) OP_REL -> . GT
    (41) OP_REL -> . GE
    (42) OP_REL -> . LT
    (43) OP_REL -> . LE
    (44) OP_REL -> . NE
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77
    EQ              shift and go to state 78
    GT              shift and go to state 79
    GE              shift and go to state 80
    LT              shift and go to state 81
    LE              shift and go to state 82
    NE              shift and go to state 83

    OP_REL                         shift and go to state 69

state 42

    (59) expr -> CARACTERE .
    ^               reduce using rule 59 (expr -> CARACTERE .)
    MOD             reduce using rule 59 (expr -> CARACTERE .)
    %               reduce using rule 59 (expr -> CARACTERE .)
    \               reduce using rule 59 (expr -> CARACTERE .)
    /               reduce using rule 59 (expr -> CARACTERE .)
    *               reduce using rule 59 (expr -> CARACTERE .)
    -               reduce using rule 59 (expr -> CARACTERE .)
    +               reduce using rule 59 (expr -> CARACTERE .)
    EQ              reduce using rule 59 (expr -> CARACTERE .)
    GT              reduce using rule 59 (expr -> CARACTERE .)
    GE              reduce using rule 59 (expr -> CARACTERE .)
    LT              reduce using rule 59 (expr -> CARACTERE .)
    LE              reduce using rule 59 (expr -> CARACTERE .)
    NE              reduce using rule 59 (expr -> CARACTERE .)
    )               reduce using rule 59 (expr -> CARACTERE .)
    ,               reduce using rule 59 (expr -> CARACTERE .)
    ;               reduce using rule 59 (expr -> CARACTERE .)
    FACA            reduce using rule 59 (expr -> CARACTERE .)
    OU              reduce using rule 59 (expr -> CARACTERE .)
    E               reduce using rule 59 (expr -> CARACTERE .)
    ENTAO           reduce using rule 59 (expr -> CARACTERE .)


state 43

    (60) expr -> ID .
    ^               reduce using rule 60 (expr -> ID .)
    MOD             reduce using rule 60 (expr -> ID .)
    %               reduce using rule 60 (expr -> ID .)
    \               reduce using rule 60 (expr -> ID .)
    /               reduce using rule 60 (expr -> ID .)
    *               reduce using rule 60 (expr -> ID .)
    -               reduce using rule 60 (expr -> ID .)
    +               reduce using rule 60 (expr -> ID .)
    EQ              reduce using rule 60 (expr -> ID .)
    GT              reduce using rule 60 (expr -> ID .)
    GE              reduce using rule 60 (expr -> ID .)
    LT              reduce using rule 60 (expr -> ID .)
    LE              reduce using rule 60 (expr -> ID .)
    NE              reduce using rule 60 (expr -> ID .)
    )               reduce using rule 60 (expr -> ID .)
    ,               reduce using rule 60 (expr -> ID .)
    ;               reduce using rule 60 (expr -> ID .)
    FACA            reduce using rule 60 (expr -> ID .)
    OU              reduce using rule 60 (expr -> ID .)
    E               reduce using rule 60 (expr -> ID .)
    ENTAO           reduce using rule 60 (expr -> ID .)


state 44

    (61) expr -> REAL .
    ^               reduce using rule 61 (expr -> REAL .)
    MOD             reduce using rule 61 (expr -> REAL .)
    %               reduce using rule 61 (expr -> REAL .)
    \               reduce using rule 61 (expr -> REAL .)
    /               reduce using rule 61 (expr -> REAL .)
    *               reduce using rule 61 (expr -> REAL .)
    -               reduce using rule 61 (expr -> REAL .)
    +               reduce using rule 61 (expr -> REAL .)
    EQ              reduce using rule 61 (expr -> REAL .)
    GT              reduce using rule 61 (expr -> REAL .)
    GE              reduce using rule 61 (expr -> REAL .)
    LT              reduce using rule 61 (expr -> REAL .)
    LE              reduce using rule 61 (expr -> REAL .)
    NE              reduce using rule 61 (expr -> REAL .)
    )               reduce using rule 61 (expr -> REAL .)
    ,               reduce using rule 61 (expr -> REAL .)
    ;               reduce using rule 61 (expr -> REAL .)
    FACA            reduce using rule 61 (expr -> REAL .)
    OU              reduce using rule 61 (expr -> REAL .)
    E               reduce using rule 61 (expr -> REAL .)
    ENTAO           reduce using rule 61 (expr -> REAL .)


state 45

    (62) expr -> INTEIRO .
    ^               reduce using rule 62 (expr -> INTEIRO .)
    MOD             reduce using rule 62 (expr -> INTEIRO .)
    %               reduce using rule 62 (expr -> INTEIRO .)
    \               reduce using rule 62 (expr -> INTEIRO .)
    /               reduce using rule 62 (expr -> INTEIRO .)
    *               reduce using rule 62 (expr -> INTEIRO .)
    -               reduce using rule 62 (expr -> INTEIRO .)
    +               reduce using rule 62 (expr -> INTEIRO .)
    EQ              reduce using rule 62 (expr -> INTEIRO .)
    GT              reduce using rule 62 (expr -> INTEIRO .)
    GE              reduce using rule 62 (expr -> INTEIRO .)
    LT              reduce using rule 62 (expr -> INTEIRO .)
    LE              reduce using rule 62 (expr -> INTEIRO .)
    NE              reduce using rule 62 (expr -> INTEIRO .)
    )               reduce using rule 62 (expr -> INTEIRO .)
    ,               reduce using rule 62 (expr -> INTEIRO .)
    ;               reduce using rule 62 (expr -> INTEIRO .)
    FACA            reduce using rule 62 (expr -> INTEIRO .)
    OU              reduce using rule 62 (expr -> INTEIRO .)
    E               reduce using rule 62 (expr -> INTEIRO .)
    ENTAO           reduce using rule 62 (expr -> INTEIRO .)


state 46

    (63) expr -> - . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 84

state 47

    (64) expr -> + . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 86

state 48

    (28) cmdCondicao -> SE expressaoRelacional . ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> SE expressaoRelacional . ENTAO ; bloco FIMSE
    (31) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (37) OP_BOOL -> . OU
    (38) OP_BOOL -> . E
    ENTAO           shift and go to state 87
    OU              shift and go to state 63
    E               shift and go to state 64

    OP_BOOL                        shift and go to state 62

state 49

    (25) cmdleitura -> LEIA ( . idAux )
    (26) idAux -> . ID , idAux
    (27) idAux -> . ID
    ID              shift and go to state 89

    idAux                          shift and go to state 88

state 50

    (51) cmdescrita -> ESCREVAL ( . )
    (52) cmdescrita -> ESCREVAL ( . typeArgsEscrita )
    (57) typeArgsEscrita -> . typeArgsEscritaAux
    (58) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (55) typeArgsEscritaAux -> . typeArgs
    (56) typeArgsEscritaAux -> . expr
    (48) typeArgs -> . expr OP_REL expr
    (49) typeArgs -> . FALSO
    (50) typeArgs -> . VERDADEIRO
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    )               shift and go to state 90
    FALSO           shift and go to state 95
    VERDADEIRO      shift and go to state 96
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    typeArgsEscrita                shift and go to state 91
    typeArgsEscritaAux             shift and go to state 92
    typeArgs                       shift and go to state 93
    expr                           shift and go to state 94

state 51

    (53) cmdescrita -> ESCREVA ( . )
    (54) cmdescrita -> ESCREVA ( . typeArgsEscrita )
    (57) typeArgsEscrita -> . typeArgsEscritaAux
    (58) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (55) typeArgsEscritaAux -> . typeArgs
    (56) typeArgsEscritaAux -> . expr
    (48) typeArgs -> . expr OP_REL expr
    (49) typeArgs -> . FALSO
    (50) typeArgs -> . VERDADEIRO
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    )               shift and go to state 97
    FALSO           shift and go to state 95
    VERDADEIRO      shift and go to state 96
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    typeArgsEscrita                shift and go to state 98
    typeArgsEscritaAux             shift and go to state 92
    typeArgs                       shift and go to state 93
    expr                           shift and go to state 94

state 52

    (45) cmdattrib -> ID ASSIGN . ( typeArgs )
    (46) cmdattrib -> ID ASSIGN . typeArgs
    (47) cmdattrib -> ID ASSIGN . expr
    (48) typeArgs -> . expr OP_REL expr
    (49) typeArgs -> . FALSO
    (50) typeArgs -> . VERDADEIRO
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (               shift and go to state 99
    FALSO           shift and go to state 95
    VERDADEIRO      shift and go to state 96
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47

    typeArgs                       shift and go to state 100
    expr                           shift and go to state 101

state 53

    (9) declaracaoTypeAux -> declaracao ; declaracaoTypeAux .
    INICIO          reduce using rule 9 (declaracaoTypeAux -> declaracao ; declaracaoTypeAux .)


state 54

    (10) declaracao -> vartype : LOGICO .
    ;               reduce using rule 10 (declaracao -> vartype : LOGICO .)


state 55

    (11) declaracao -> vartype : CARACTERE .
    ;               reduce using rule 11 (declaracao -> vartype : CARACTERE .)


state 56

    (12) declaracao -> vartype : REAL .
    ;               reduce using rule 12 (declaracao -> vartype : REAL .)


state 57

    (13) declaracao -> vartype : INTEIRO .
    ;               reduce using rule 13 (declaracao -> vartype : INTEIRO .)


state 58

    (14) vartype -> ID , vartype .
    :               reduce using rule 14 (vartype -> ID , vartype .)


state 59

    (1) initial -> ALGORITMO CARACTERE ; varAux INICIO ; blocoType FIMALGORITMO ; .
    $end            reduce using rule 1 (initial -> ALGORITMO CARACTERE ; varAux INICIO ; blocoType FIMALGORITMO ; .)


state 60

    (16) bloco -> cmd ; bloco .
    FIMALGORITMO    reduce using rule 16 (bloco -> cmd ; bloco .)
    FIMENQUANTO     reduce using rule 16 (bloco -> cmd ; bloco .)
    SENAO           reduce using rule 16 (bloco -> cmd ; bloco .)
    FIMSE           reduce using rule 16 (bloco -> cmd ; bloco .)


state 61

    (24) cmdRepeticao -> ENQUANTO expressaoRelacional FACA . ; bloco FIMENQUANTO
    ;               shift and go to state 102


state 62

    (31) expressaoRelacional -> expressaoRelacional OP_BOOL . termoRelacional
    (32) termoRelacional -> . ( expressaoRelacional )
    (33) termoRelacional -> . FALSO
    (34) termoRelacional -> . VERDADEIRO
    (35) termoRelacional -> . NAO termoRelacional
    (36) termoRelacional -> . expr OP_REL expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (               shift and go to state 37
    FALSO           shift and go to state 38
    VERDADEIRO      shift and go to state 39
    NAO             shift and go to state 40
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47

    termoRelacional                shift and go to state 103
    expr                           shift and go to state 41

state 63

    (37) OP_BOOL -> OU .
    (               reduce using rule 37 (OP_BOOL -> OU .)
    FALSO           reduce using rule 37 (OP_BOOL -> OU .)
    VERDADEIRO      reduce using rule 37 (OP_BOOL -> OU .)
    NAO             reduce using rule 37 (OP_BOOL -> OU .)
    CARACTERE       reduce using rule 37 (OP_BOOL -> OU .)
    ID              reduce using rule 37 (OP_BOOL -> OU .)
    REAL            reduce using rule 37 (OP_BOOL -> OU .)
    INTEIRO         reduce using rule 37 (OP_BOOL -> OU .)
    -               reduce using rule 37 (OP_BOOL -> OU .)
    +               reduce using rule 37 (OP_BOOL -> OU .)


state 64

    (38) OP_BOOL -> E .
    (               reduce using rule 38 (OP_BOOL -> E .)
    FALSO           reduce using rule 38 (OP_BOOL -> E .)
    VERDADEIRO      reduce using rule 38 (OP_BOOL -> E .)
    NAO             reduce using rule 38 (OP_BOOL -> E .)
    CARACTERE       reduce using rule 38 (OP_BOOL -> E .)
    ID              reduce using rule 38 (OP_BOOL -> E .)
    REAL            reduce using rule 38 (OP_BOOL -> E .)
    INTEIRO         reduce using rule 38 (OP_BOOL -> E .)
    -               reduce using rule 38 (OP_BOOL -> E .)
    +               reduce using rule 38 (OP_BOOL -> E .)


state 65

    (73) expr -> ( . expr )
    (32) termoRelacional -> ( . expressaoRelacional )
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    (30) expressaoRelacional -> . termoRelacional
    (31) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (32) termoRelacional -> . ( expressaoRelacional )
    (33) termoRelacional -> . FALSO
    (34) termoRelacional -> . VERDADEIRO
    (35) termoRelacional -> . NAO termoRelacional
    (36) termoRelacional -> . expr OP_REL expr
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 65
    FALSO           shift and go to state 38
    VERDADEIRO      shift and go to state 39
    NAO             shift and go to state 40

    expr                           shift and go to state 67
    expressaoRelacional            shift and go to state 66
    termoRelacional                shift and go to state 36

state 66

    (32) termoRelacional -> ( expressaoRelacional . )
    (31) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (37) OP_BOOL -> . OU
    (38) OP_BOOL -> . E
    )               shift and go to state 104
    OU              shift and go to state 63
    E               shift and go to state 64

    OP_BOOL                        shift and go to state 62

state 67

    (73) expr -> ( expr . )
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    (36) termoRelacional -> expr . OP_REL expr
    (39) OP_REL -> . EQ
    (40) OP_REL -> . GT
    (41) OP_REL -> . GE
    (42) OP_REL -> . LT
    (43) OP_REL -> . LE
    (44) OP_REL -> . NE
    )               shift and go to state 105
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77
    EQ              shift and go to state 78
    GT              shift and go to state 79
    GE              shift and go to state 80
    LT              shift and go to state 81
    LE              shift and go to state 82
    NE              shift and go to state 83

    OP_REL                         shift and go to state 69

state 68

    (35) termoRelacional -> NAO termoRelacional .
    FACA            reduce using rule 35 (termoRelacional -> NAO termoRelacional .)
    OU              reduce using rule 35 (termoRelacional -> NAO termoRelacional .)
    E               reduce using rule 35 (termoRelacional -> NAO termoRelacional .)
    ENTAO           reduce using rule 35 (termoRelacional -> NAO termoRelacional .)
    )               reduce using rule 35 (termoRelacional -> NAO termoRelacional .)


state 69

    (36) termoRelacional -> expr OP_REL . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 106

state 70

    (65) expr -> expr ^ . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 107

state 71

    (66) expr -> expr MOD . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 108

state 72

    (67) expr -> expr % . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 109

state 73

    (68) expr -> expr \ . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 110

state 74

    (69) expr -> expr / . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 111

state 75

    (70) expr -> expr * . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 112

state 76

    (71) expr -> expr - . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 113

state 77

    (72) expr -> expr + . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 114

state 78

    (39) OP_REL -> EQ .
    CARACTERE       reduce using rule 39 (OP_REL -> EQ .)
    ID              reduce using rule 39 (OP_REL -> EQ .)
    REAL            reduce using rule 39 (OP_REL -> EQ .)
    INTEIRO         reduce using rule 39 (OP_REL -> EQ .)
    -               reduce using rule 39 (OP_REL -> EQ .)
    +               reduce using rule 39 (OP_REL -> EQ .)
    (               reduce using rule 39 (OP_REL -> EQ .)


state 79

    (40) OP_REL -> GT .
    CARACTERE       reduce using rule 40 (OP_REL -> GT .)
    ID              reduce using rule 40 (OP_REL -> GT .)
    REAL            reduce using rule 40 (OP_REL -> GT .)
    INTEIRO         reduce using rule 40 (OP_REL -> GT .)
    -               reduce using rule 40 (OP_REL -> GT .)
    +               reduce using rule 40 (OP_REL -> GT .)
    (               reduce using rule 40 (OP_REL -> GT .)


state 80

    (41) OP_REL -> GE .
    CARACTERE       reduce using rule 41 (OP_REL -> GE .)
    ID              reduce using rule 41 (OP_REL -> GE .)
    REAL            reduce using rule 41 (OP_REL -> GE .)
    INTEIRO         reduce using rule 41 (OP_REL -> GE .)
    -               reduce using rule 41 (OP_REL -> GE .)
    +               reduce using rule 41 (OP_REL -> GE .)
    (               reduce using rule 41 (OP_REL -> GE .)


state 81

    (42) OP_REL -> LT .
    CARACTERE       reduce using rule 42 (OP_REL -> LT .)
    ID              reduce using rule 42 (OP_REL -> LT .)
    REAL            reduce using rule 42 (OP_REL -> LT .)
    INTEIRO         reduce using rule 42 (OP_REL -> LT .)
    -               reduce using rule 42 (OP_REL -> LT .)
    +               reduce using rule 42 (OP_REL -> LT .)
    (               reduce using rule 42 (OP_REL -> LT .)


state 82

    (43) OP_REL -> LE .
    CARACTERE       reduce using rule 43 (OP_REL -> LE .)
    ID              reduce using rule 43 (OP_REL -> LE .)
    REAL            reduce using rule 43 (OP_REL -> LE .)
    INTEIRO         reduce using rule 43 (OP_REL -> LE .)
    -               reduce using rule 43 (OP_REL -> LE .)
    +               reduce using rule 43 (OP_REL -> LE .)
    (               reduce using rule 43 (OP_REL -> LE .)


state 83

    (44) OP_REL -> NE .
    CARACTERE       reduce using rule 44 (OP_REL -> NE .)
    ID              reduce using rule 44 (OP_REL -> NE .)
    REAL            reduce using rule 44 (OP_REL -> NE .)
    INTEIRO         reduce using rule 44 (OP_REL -> NE .)
    -               reduce using rule 44 (OP_REL -> NE .)
    +               reduce using rule 44 (OP_REL -> NE .)
    (               reduce using rule 44 (OP_REL -> NE .)


state 84

    (63) expr -> - expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    ^               reduce using rule 63 (expr -> - expr .)
    MOD             reduce using rule 63 (expr -> - expr .)
    %               reduce using rule 63 (expr -> - expr .)
    \               reduce using rule 63 (expr -> - expr .)
    /               reduce using rule 63 (expr -> - expr .)
    *               reduce using rule 63 (expr -> - expr .)
    -               reduce using rule 63 (expr -> - expr .)
    +               reduce using rule 63 (expr -> - expr .)
    EQ              reduce using rule 63 (expr -> - expr .)
    GT              reduce using rule 63 (expr -> - expr .)
    GE              reduce using rule 63 (expr -> - expr .)
    LT              reduce using rule 63 (expr -> - expr .)
    LE              reduce using rule 63 (expr -> - expr .)
    NE              reduce using rule 63 (expr -> - expr .)
    )               reduce using rule 63 (expr -> - expr .)
    ,               reduce using rule 63 (expr -> - expr .)
    ;               reduce using rule 63 (expr -> - expr .)
    FACA            reduce using rule 63 (expr -> - expr .)
    OU              reduce using rule 63 (expr -> - expr .)
    E               reduce using rule 63 (expr -> - expr .)
    ENTAO           reduce using rule 63 (expr -> - expr .)


state 85

    (73) expr -> ( . expr )
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 115

state 86

    (64) expr -> + expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    ^               reduce using rule 64 (expr -> + expr .)
    MOD             reduce using rule 64 (expr -> + expr .)
    %               reduce using rule 64 (expr -> + expr .)
    \               reduce using rule 64 (expr -> + expr .)
    /               reduce using rule 64 (expr -> + expr .)
    *               reduce using rule 64 (expr -> + expr .)
    -               reduce using rule 64 (expr -> + expr .)
    +               reduce using rule 64 (expr -> + expr .)
    EQ              reduce using rule 64 (expr -> + expr .)
    GT              reduce using rule 64 (expr -> + expr .)
    GE              reduce using rule 64 (expr -> + expr .)
    LT              reduce using rule 64 (expr -> + expr .)
    LE              reduce using rule 64 (expr -> + expr .)
    NE              reduce using rule 64 (expr -> + expr .)
    )               reduce using rule 64 (expr -> + expr .)
    ,               reduce using rule 64 (expr -> + expr .)
    ;               reduce using rule 64 (expr -> + expr .)
    FACA            reduce using rule 64 (expr -> + expr .)
    OU              reduce using rule 64 (expr -> + expr .)
    E               reduce using rule 64 (expr -> + expr .)
    ENTAO           reduce using rule 64 (expr -> + expr .)


state 87

    (28) cmdCondicao -> SE expressaoRelacional ENTAO . ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> SE expressaoRelacional ENTAO . ; bloco FIMSE
    ;               shift and go to state 116


state 88

    (25) cmdleitura -> LEIA ( idAux . )
    )               shift and go to state 117


state 89

    (26) idAux -> ID . , idAux
    (27) idAux -> ID .
    ,               shift and go to state 118
    )               reduce using rule 27 (idAux -> ID .)


state 90

    (51) cmdescrita -> ESCREVAL ( ) .
    ;               reduce using rule 51 (cmdescrita -> ESCREVAL ( ) .)


state 91

    (52) cmdescrita -> ESCREVAL ( typeArgsEscrita . )
    (58) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 119
    ,               shift and go to state 120


state 92

    (57) typeArgsEscrita -> typeArgsEscritaAux .
    )               reduce using rule 57 (typeArgsEscrita -> typeArgsEscritaAux .)
    ,               reduce using rule 57 (typeArgsEscrita -> typeArgsEscritaAux .)


state 93

    (55) typeArgsEscritaAux -> typeArgs .
    )               reduce using rule 55 (typeArgsEscritaAux -> typeArgs .)
    ,               reduce using rule 55 (typeArgsEscritaAux -> typeArgs .)


state 94

    (56) typeArgsEscritaAux -> expr .
    (48) typeArgs -> expr . OP_REL expr
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    (39) OP_REL -> . EQ
    (40) OP_REL -> . GT
    (41) OP_REL -> . GE
    (42) OP_REL -> . LT
    (43) OP_REL -> . LE
    (44) OP_REL -> . NE
    )               reduce using rule 56 (typeArgsEscritaAux -> expr .)
    ,               reduce using rule 56 (typeArgsEscritaAux -> expr .)
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77
    EQ              shift and go to state 78
    GT              shift and go to state 79
    GE              shift and go to state 80
    LT              shift and go to state 81
    LE              shift and go to state 82
    NE              shift and go to state 83

    OP_REL                         shift and go to state 121

state 95

    (49) typeArgs -> FALSO .
    )               reduce using rule 49 (typeArgs -> FALSO .)
    ,               reduce using rule 49 (typeArgs -> FALSO .)
    ;               reduce using rule 49 (typeArgs -> FALSO .)


state 96

    (50) typeArgs -> VERDADEIRO .
    )               reduce using rule 50 (typeArgs -> VERDADEIRO .)
    ,               reduce using rule 50 (typeArgs -> VERDADEIRO .)
    ;               reduce using rule 50 (typeArgs -> VERDADEIRO .)


state 97

    (53) cmdescrita -> ESCREVA ( ) .
    ;               reduce using rule 53 (cmdescrita -> ESCREVA ( ) .)


state 98

    (54) cmdescrita -> ESCREVA ( typeArgsEscrita . )
    (58) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 122
    ,               shift and go to state 120


state 99

    (45) cmdattrib -> ID ASSIGN ( . typeArgs )
    (73) expr -> ( . expr )
    (48) typeArgs -> . expr OP_REL expr
    (49) typeArgs -> . FALSO
    (50) typeArgs -> . VERDADEIRO
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    FALSO           shift and go to state 95
    VERDADEIRO      shift and go to state 96
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    typeArgs                       shift and go to state 123
    expr                           shift and go to state 124

state 100

    (46) cmdattrib -> ID ASSIGN typeArgs .
    ;               reduce using rule 46 (cmdattrib -> ID ASSIGN typeArgs .)


state 101

    (47) cmdattrib -> ID ASSIGN expr .
    (48) typeArgs -> expr . OP_REL expr
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    (39) OP_REL -> . EQ
    (40) OP_REL -> . GT
    (41) OP_REL -> . GE
    (42) OP_REL -> . LT
    (43) OP_REL -> . LE
    (44) OP_REL -> . NE
    ;               reduce using rule 47 (cmdattrib -> ID ASSIGN expr .)
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77
    EQ              shift and go to state 78
    GT              shift and go to state 79
    GE              shift and go to state 80
    LT              shift and go to state 81
    LE              shift and go to state 82
    NE              shift and go to state 83

    OP_REL                         shift and go to state 121

state 102

    (24) cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; . bloco FIMENQUANTO
    (16) bloco -> . cmd ; bloco
    (17) bloco -> . cmd ;
    (18) cmd -> . cmdRepeticao
    (19) cmd -> . LIMPATELA
    (20) cmd -> . cmdCondicao
    (21) cmd -> . cmdleitura
    (22) cmd -> . cmdescrita
    (23) cmd -> . cmdattrib
    (24) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (28) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (25) cmdleitura -> . LEIA ( idAux )
    (51) cmdescrita -> . ESCREVAL ( )
    (52) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (53) cmdescrita -> . ESCREVA ( )
    (54) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (45) cmdattrib -> . ID ASSIGN ( typeArgs )
    (46) cmdattrib -> . ID ASSIGN typeArgs
    (47) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 19
    ENQUANTO        shift and go to state 24
    SE              shift and go to state 25
    LEIA            shift and go to state 26
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 29

    bloco                          shift and go to state 125
    cmd                            shift and go to state 17
    cmdRepeticao                   shift and go to state 18
    cmdCondicao                    shift and go to state 20
    cmdleitura                     shift and go to state 21
    cmdescrita                     shift and go to state 22
    cmdattrib                      shift and go to state 23

state 103

    (31) expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .
    FACA            reduce using rule 31 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    OU              reduce using rule 31 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    E               reduce using rule 31 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    ENTAO           reduce using rule 31 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    )               reduce using rule 31 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)


state 104

    (32) termoRelacional -> ( expressaoRelacional ) .
    FACA            reduce using rule 32 (termoRelacional -> ( expressaoRelacional ) .)
    OU              reduce using rule 32 (termoRelacional -> ( expressaoRelacional ) .)
    E               reduce using rule 32 (termoRelacional -> ( expressaoRelacional ) .)
    ENTAO           reduce using rule 32 (termoRelacional -> ( expressaoRelacional ) .)
    )               reduce using rule 32 (termoRelacional -> ( expressaoRelacional ) .)


state 105

    (73) expr -> ( expr ) .
    ^               reduce using rule 73 (expr -> ( expr ) .)
    MOD             reduce using rule 73 (expr -> ( expr ) .)
    %               reduce using rule 73 (expr -> ( expr ) .)
    \               reduce using rule 73 (expr -> ( expr ) .)
    /               reduce using rule 73 (expr -> ( expr ) .)
    *               reduce using rule 73 (expr -> ( expr ) .)
    -               reduce using rule 73 (expr -> ( expr ) .)
    +               reduce using rule 73 (expr -> ( expr ) .)
    EQ              reduce using rule 73 (expr -> ( expr ) .)
    GT              reduce using rule 73 (expr -> ( expr ) .)
    GE              reduce using rule 73 (expr -> ( expr ) .)
    LT              reduce using rule 73 (expr -> ( expr ) .)
    LE              reduce using rule 73 (expr -> ( expr ) .)
    NE              reduce using rule 73 (expr -> ( expr ) .)
    )               reduce using rule 73 (expr -> ( expr ) .)
    ,               reduce using rule 73 (expr -> ( expr ) .)
    ;               reduce using rule 73 (expr -> ( expr ) .)
    FACA            reduce using rule 73 (expr -> ( expr ) .)
    OU              reduce using rule 73 (expr -> ( expr ) .)
    E               reduce using rule 73 (expr -> ( expr ) .)
    ENTAO           reduce using rule 73 (expr -> ( expr ) .)


state 106

    (36) termoRelacional -> expr OP_REL expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    FACA            reduce using rule 36 (termoRelacional -> expr OP_REL expr .)
    OU              reduce using rule 36 (termoRelacional -> expr OP_REL expr .)
    E               reduce using rule 36 (termoRelacional -> expr OP_REL expr .)
    ENTAO           reduce using rule 36 (termoRelacional -> expr OP_REL expr .)
    )               reduce using rule 36 (termoRelacional -> expr OP_REL expr .)
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 107

    (65) expr -> expr ^ expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    MOD             reduce using rule 65 (expr -> expr ^ expr .)
    %               reduce using rule 65 (expr -> expr ^ expr .)
    \               reduce using rule 65 (expr -> expr ^ expr .)
    /               reduce using rule 65 (expr -> expr ^ expr .)
    *               reduce using rule 65 (expr -> expr ^ expr .)
    -               reduce using rule 65 (expr -> expr ^ expr .)
    +               reduce using rule 65 (expr -> expr ^ expr .)
    EQ              reduce using rule 65 (expr -> expr ^ expr .)
    GT              reduce using rule 65 (expr -> expr ^ expr .)
    GE              reduce using rule 65 (expr -> expr ^ expr .)
    LT              reduce using rule 65 (expr -> expr ^ expr .)
    LE              reduce using rule 65 (expr -> expr ^ expr .)
    NE              reduce using rule 65 (expr -> expr ^ expr .)
    )               reduce using rule 65 (expr -> expr ^ expr .)
    ,               reduce using rule 65 (expr -> expr ^ expr .)
    ;               reduce using rule 65 (expr -> expr ^ expr .)
    FACA            reduce using rule 65 (expr -> expr ^ expr .)
    OU              reduce using rule 65 (expr -> expr ^ expr .)
    E               reduce using rule 65 (expr -> expr ^ expr .)
    ENTAO           reduce using rule 65 (expr -> expr ^ expr .)
    ^               shift and go to state 70


state 108

    (66) expr -> expr MOD expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    MOD             reduce using rule 66 (expr -> expr MOD expr .)
    %               reduce using rule 66 (expr -> expr MOD expr .)
    \               reduce using rule 66 (expr -> expr MOD expr .)
    /               reduce using rule 66 (expr -> expr MOD expr .)
    *               reduce using rule 66 (expr -> expr MOD expr .)
    -               reduce using rule 66 (expr -> expr MOD expr .)
    +               reduce using rule 66 (expr -> expr MOD expr .)
    EQ              reduce using rule 66 (expr -> expr MOD expr .)
    GT              reduce using rule 66 (expr -> expr MOD expr .)
    GE              reduce using rule 66 (expr -> expr MOD expr .)
    LT              reduce using rule 66 (expr -> expr MOD expr .)
    LE              reduce using rule 66 (expr -> expr MOD expr .)
    NE              reduce using rule 66 (expr -> expr MOD expr .)
    )               reduce using rule 66 (expr -> expr MOD expr .)
    ,               reduce using rule 66 (expr -> expr MOD expr .)
    ;               reduce using rule 66 (expr -> expr MOD expr .)
    FACA            reduce using rule 66 (expr -> expr MOD expr .)
    OU              reduce using rule 66 (expr -> expr MOD expr .)
    E               reduce using rule 66 (expr -> expr MOD expr .)
    ENTAO           reduce using rule 66 (expr -> expr MOD expr .)
    ^               shift and go to state 70


state 109

    (67) expr -> expr % expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    MOD             reduce using rule 67 (expr -> expr % expr .)
    %               reduce using rule 67 (expr -> expr % expr .)
    \               reduce using rule 67 (expr -> expr % expr .)
    /               reduce using rule 67 (expr -> expr % expr .)
    *               reduce using rule 67 (expr -> expr % expr .)
    -               reduce using rule 67 (expr -> expr % expr .)
    +               reduce using rule 67 (expr -> expr % expr .)
    EQ              reduce using rule 67 (expr -> expr % expr .)
    GT              reduce using rule 67 (expr -> expr % expr .)
    GE              reduce using rule 67 (expr -> expr % expr .)
    LT              reduce using rule 67 (expr -> expr % expr .)
    LE              reduce using rule 67 (expr -> expr % expr .)
    NE              reduce using rule 67 (expr -> expr % expr .)
    )               reduce using rule 67 (expr -> expr % expr .)
    ,               reduce using rule 67 (expr -> expr % expr .)
    ;               reduce using rule 67 (expr -> expr % expr .)
    FACA            reduce using rule 67 (expr -> expr % expr .)
    OU              reduce using rule 67 (expr -> expr % expr .)
    E               reduce using rule 67 (expr -> expr % expr .)
    ENTAO           reduce using rule 67 (expr -> expr % expr .)
    ^               shift and go to state 70


state 110

    (68) expr -> expr \ expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    MOD             reduce using rule 68 (expr -> expr \ expr .)
    %               reduce using rule 68 (expr -> expr \ expr .)
    \               reduce using rule 68 (expr -> expr \ expr .)
    /               reduce using rule 68 (expr -> expr \ expr .)
    *               reduce using rule 68 (expr -> expr \ expr .)
    -               reduce using rule 68 (expr -> expr \ expr .)
    +               reduce using rule 68 (expr -> expr \ expr .)
    EQ              reduce using rule 68 (expr -> expr \ expr .)
    GT              reduce using rule 68 (expr -> expr \ expr .)
    GE              reduce using rule 68 (expr -> expr \ expr .)
    LT              reduce using rule 68 (expr -> expr \ expr .)
    LE              reduce using rule 68 (expr -> expr \ expr .)
    NE              reduce using rule 68 (expr -> expr \ expr .)
    )               reduce using rule 68 (expr -> expr \ expr .)
    ,               reduce using rule 68 (expr -> expr \ expr .)
    ;               reduce using rule 68 (expr -> expr \ expr .)
    FACA            reduce using rule 68 (expr -> expr \ expr .)
    OU              reduce using rule 68 (expr -> expr \ expr .)
    E               reduce using rule 68 (expr -> expr \ expr .)
    ENTAO           reduce using rule 68 (expr -> expr \ expr .)
    ^               shift and go to state 70


state 111

    (69) expr -> expr / expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    MOD             reduce using rule 69 (expr -> expr / expr .)
    %               reduce using rule 69 (expr -> expr / expr .)
    \               reduce using rule 69 (expr -> expr / expr .)
    /               reduce using rule 69 (expr -> expr / expr .)
    *               reduce using rule 69 (expr -> expr / expr .)
    -               reduce using rule 69 (expr -> expr / expr .)
    +               reduce using rule 69 (expr -> expr / expr .)
    EQ              reduce using rule 69 (expr -> expr / expr .)
    GT              reduce using rule 69 (expr -> expr / expr .)
    GE              reduce using rule 69 (expr -> expr / expr .)
    LT              reduce using rule 69 (expr -> expr / expr .)
    LE              reduce using rule 69 (expr -> expr / expr .)
    NE              reduce using rule 69 (expr -> expr / expr .)
    )               reduce using rule 69 (expr -> expr / expr .)
    ,               reduce using rule 69 (expr -> expr / expr .)
    ;               reduce using rule 69 (expr -> expr / expr .)
    FACA            reduce using rule 69 (expr -> expr / expr .)
    OU              reduce using rule 69 (expr -> expr / expr .)
    E               reduce using rule 69 (expr -> expr / expr .)
    ENTAO           reduce using rule 69 (expr -> expr / expr .)
    ^               shift and go to state 70


state 112

    (70) expr -> expr * expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    MOD             reduce using rule 70 (expr -> expr * expr .)
    %               reduce using rule 70 (expr -> expr * expr .)
    \               reduce using rule 70 (expr -> expr * expr .)
    /               reduce using rule 70 (expr -> expr * expr .)
    *               reduce using rule 70 (expr -> expr * expr .)
    -               reduce using rule 70 (expr -> expr * expr .)
    +               reduce using rule 70 (expr -> expr * expr .)
    EQ              reduce using rule 70 (expr -> expr * expr .)
    GT              reduce using rule 70 (expr -> expr * expr .)
    GE              reduce using rule 70 (expr -> expr * expr .)
    LT              reduce using rule 70 (expr -> expr * expr .)
    LE              reduce using rule 70 (expr -> expr * expr .)
    NE              reduce using rule 70 (expr -> expr * expr .)
    )               reduce using rule 70 (expr -> expr * expr .)
    ,               reduce using rule 70 (expr -> expr * expr .)
    ;               reduce using rule 70 (expr -> expr * expr .)
    FACA            reduce using rule 70 (expr -> expr * expr .)
    OU              reduce using rule 70 (expr -> expr * expr .)
    E               reduce using rule 70 (expr -> expr * expr .)
    ENTAO           reduce using rule 70 (expr -> expr * expr .)
    ^               shift and go to state 70


state 113

    (71) expr -> expr - expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    -               reduce using rule 71 (expr -> expr - expr .)
    +               reduce using rule 71 (expr -> expr - expr .)
    EQ              reduce using rule 71 (expr -> expr - expr .)
    GT              reduce using rule 71 (expr -> expr - expr .)
    GE              reduce using rule 71 (expr -> expr - expr .)
    LT              reduce using rule 71 (expr -> expr - expr .)
    LE              reduce using rule 71 (expr -> expr - expr .)
    NE              reduce using rule 71 (expr -> expr - expr .)
    )               reduce using rule 71 (expr -> expr - expr .)
    ,               reduce using rule 71 (expr -> expr - expr .)
    ;               reduce using rule 71 (expr -> expr - expr .)
    FACA            reduce using rule 71 (expr -> expr - expr .)
    OU              reduce using rule 71 (expr -> expr - expr .)
    E               reduce using rule 71 (expr -> expr - expr .)
    ENTAO           reduce using rule 71 (expr -> expr - expr .)
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75


state 114

    (72) expr -> expr + expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    -               reduce using rule 72 (expr -> expr + expr .)
    +               reduce using rule 72 (expr -> expr + expr .)
    EQ              reduce using rule 72 (expr -> expr + expr .)
    GT              reduce using rule 72 (expr -> expr + expr .)
    GE              reduce using rule 72 (expr -> expr + expr .)
    LT              reduce using rule 72 (expr -> expr + expr .)
    LE              reduce using rule 72 (expr -> expr + expr .)
    NE              reduce using rule 72 (expr -> expr + expr .)
    )               reduce using rule 72 (expr -> expr + expr .)
    ,               reduce using rule 72 (expr -> expr + expr .)
    ;               reduce using rule 72 (expr -> expr + expr .)
    FACA            reduce using rule 72 (expr -> expr + expr .)
    OU              reduce using rule 72 (expr -> expr + expr .)
    E               reduce using rule 72 (expr -> expr + expr .)
    ENTAO           reduce using rule 72 (expr -> expr + expr .)
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75


state 115

    (73) expr -> ( expr . )
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    )               shift and go to state 105
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 116

    (28) cmdCondicao -> SE expressaoRelacional ENTAO ; . bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> SE expressaoRelacional ENTAO ; . bloco FIMSE
    (16) bloco -> . cmd ; bloco
    (17) bloco -> . cmd ;
    (18) cmd -> . cmdRepeticao
    (19) cmd -> . LIMPATELA
    (20) cmd -> . cmdCondicao
    (21) cmd -> . cmdleitura
    (22) cmd -> . cmdescrita
    (23) cmd -> . cmdattrib
    (24) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (28) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (25) cmdleitura -> . LEIA ( idAux )
    (51) cmdescrita -> . ESCREVAL ( )
    (52) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (53) cmdescrita -> . ESCREVA ( )
    (54) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (45) cmdattrib -> . ID ASSIGN ( typeArgs )
    (46) cmdattrib -> . ID ASSIGN typeArgs
    (47) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 19
    ENQUANTO        shift and go to state 24
    SE              shift and go to state 25
    LEIA            shift and go to state 26
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 29

    bloco                          shift and go to state 126
    cmd                            shift and go to state 17
    cmdRepeticao                   shift and go to state 18
    cmdCondicao                    shift and go to state 20
    cmdleitura                     shift and go to state 21
    cmdescrita                     shift and go to state 22
    cmdattrib                      shift and go to state 23

state 117

    (25) cmdleitura -> LEIA ( idAux ) .
    ;               reduce using rule 25 (cmdleitura -> LEIA ( idAux ) .)


state 118

    (26) idAux -> ID , . idAux
    (26) idAux -> . ID , idAux
    (27) idAux -> . ID
    ID              shift and go to state 89

    idAux                          shift and go to state 127

state 119

    (52) cmdescrita -> ESCREVAL ( typeArgsEscrita ) .
    ;               reduce using rule 52 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)


state 120

    (58) typeArgsEscrita -> typeArgsEscrita , . typeArgsEscritaAux
    (55) typeArgsEscritaAux -> . typeArgs
    (56) typeArgsEscritaAux -> . expr
    (48) typeArgs -> . expr OP_REL expr
    (49) typeArgs -> . FALSO
    (50) typeArgs -> . VERDADEIRO
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    FALSO           shift and go to state 95
    VERDADEIRO      shift and go to state 96
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    typeArgsEscritaAux             shift and go to state 128
    typeArgs                       shift and go to state 93
    expr                           shift and go to state 94

state 121

    (48) typeArgs -> expr OP_REL . expr
    (59) expr -> . CARACTERE
    (60) expr -> . ID
    (61) expr -> . REAL
    (62) expr -> . INTEIRO
    (63) expr -> . - expr
    (64) expr -> . + expr
    (65) expr -> . expr ^ expr
    (66) expr -> . expr MOD expr
    (67) expr -> . expr % expr
    (68) expr -> . expr \ expr
    (69) expr -> . expr / expr
    (70) expr -> . expr * expr
    (71) expr -> . expr - expr
    (72) expr -> . expr + expr
    (73) expr -> . ( expr )
    CARACTERE       shift and go to state 42
    ID              shift and go to state 43
    REAL            shift and go to state 44
    INTEIRO         shift and go to state 45
    -               shift and go to state 46
    +               shift and go to state 47
    (               shift and go to state 85

    expr                           shift and go to state 129

state 122

    (54) cmdescrita -> ESCREVA ( typeArgsEscrita ) .
    ;               reduce using rule 54 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)


state 123

    (45) cmdattrib -> ID ASSIGN ( typeArgs . )
    )               shift and go to state 130


state 124

    (73) expr -> ( expr . )
    (48) typeArgs -> expr . OP_REL expr
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    (39) OP_REL -> . EQ
    (40) OP_REL -> . GT
    (41) OP_REL -> . GE
    (42) OP_REL -> . LT
    (43) OP_REL -> . LE
    (44) OP_REL -> . NE
    )               shift and go to state 105
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77
    EQ              shift and go to state 78
    GT              shift and go to state 79
    GE              shift and go to state 80
    LT              shift and go to state 81
    LE              shift and go to state 82
    NE              shift and go to state 83

    OP_REL                         shift and go to state 121

state 125

    (24) cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco . FIMENQUANTO
    FIMENQUANTO     shift and go to state 131


state 126

    (28) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco . SENAO ; bloco FIMSE
    (29) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco . FIMSE
    SENAO           shift and go to state 132
    FIMSE           shift and go to state 133


state 127

    (26) idAux -> ID , idAux .
    )               reduce using rule 26 (idAux -> ID , idAux .)


state 128

    (58) typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .
    )               reduce using rule 58 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)
    ,               reduce using rule 58 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)


state 129

    (48) typeArgs -> expr OP_REL expr .
    (65) expr -> expr . ^ expr
    (66) expr -> expr . MOD expr
    (67) expr -> expr . % expr
    (68) expr -> expr . \ expr
    (69) expr -> expr . / expr
    (70) expr -> expr . * expr
    (71) expr -> expr . - expr
    (72) expr -> expr . + expr
    )               reduce using rule 48 (typeArgs -> expr OP_REL expr .)
    ,               reduce using rule 48 (typeArgs -> expr OP_REL expr .)
    ;               reduce using rule 48 (typeArgs -> expr OP_REL expr .)
    ^               shift and go to state 70
    MOD             shift and go to state 71
    %               shift and go to state 72
    \               shift and go to state 73
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 130

    (45) cmdattrib -> ID ASSIGN ( typeArgs ) .
    ;               reduce using rule 45 (cmdattrib -> ID ASSIGN ( typeArgs ) .)


state 131

    (24) cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO .
    ;               reduce using rule 24 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO .)


state 132

    (28) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO . ; bloco FIMSE
    ;               shift and go to state 134


state 133

    (29) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco FIMSE .
    ;               reduce using rule 29 (cmdCondicao -> SE expressaoRelacional ENTAO ; bloco FIMSE .)


state 134

    (28) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; . bloco FIMSE
    (16) bloco -> . cmd ; bloco
    (17) bloco -> . cmd ;
    (18) cmd -> . cmdRepeticao
    (19) cmd -> . LIMPATELA
    (20) cmd -> . cmdCondicao
    (21) cmd -> . cmdleitura
    (22) cmd -> . cmdescrita
    (23) cmd -> . cmdattrib
    (24) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA ; bloco FIMENQUANTO
    (28) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE
    (29) cmdCondicao -> . SE expressaoRelacional ENTAO ; bloco FIMSE
    (25) cmdleitura -> . LEIA ( idAux )
    (51) cmdescrita -> . ESCREVAL ( )
    (52) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (53) cmdescrita -> . ESCREVA ( )
    (54) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (45) cmdattrib -> . ID ASSIGN ( typeArgs )
    (46) cmdattrib -> . ID ASSIGN typeArgs
    (47) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 19
    ENQUANTO        shift and go to state 24
    SE              shift and go to state 25
    LEIA            shift and go to state 26
    ESCREVAL        shift and go to state 27
    ESCREVA         shift and go to state 28
    ID              shift and go to state 29

    bloco                          shift and go to state 135
    cmd                            shift and go to state 17
    cmdRepeticao                   shift and go to state 18
    cmdCondicao                    shift and go to state 20
    cmdleitura                     shift and go to state 21
    cmdescrita                     shift and go to state 22
    cmdattrib                      shift and go to state 23

state 135

    (28) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco . FIMSE
    FIMSE           shift and go to state 136


state 136

    (28) cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE .
    ;               reduce using rule 28 (cmdCondicao -> SE expressaoRelacional ENTAO ; bloco SENAO ; bloco FIMSE .)
