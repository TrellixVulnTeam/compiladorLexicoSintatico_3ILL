Grammar:

Rule 0     S' -> initial
Rule 1     initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO
Rule 2     blocoType -> <empty>
Rule 3     blocoType -> bloco
Rule 4     declaracao -> <empty>
Rule 5     declaracao -> vartype : LOGICO
Rule 6     declaracao -> vartype : CARACTERE
Rule 7     declaracao -> vartype : REAL
Rule 8     declaracao -> vartype : INTEIRO
Rule 9     vartype -> ID , vartype
Rule 10    vartype -> ID
Rule 11    bloco -> cmd bloco
Rule 12    bloco -> cmd
Rule 13    cmd -> cmdescrita
Rule 14    cmd -> cmdattrib
Rule 15    cmdattrib -> ID ASSIGN ( ID )
Rule 16    cmdattrib -> ID ASSIGN ID
Rule 17    cmdattrib -> ID ASSIGN ( CARACTERE )
Rule 18    cmdattrib -> ID ASSIGN CARACTERE
Rule 19    cmdattrib -> ID ASSIGN expr
Rule 20    cmdescrita -> ESCREVA ( ID )
Rule 21    cmdescrita -> ESCREVA ( )
Rule 22    cmdescrita -> ESCREVA ( CARACTERE )
Rule 23    cmdescrita -> ESCREVA ( expr )
Rule 24    expr -> REAL
Rule 25    expr -> INTEIRO
Rule 26    expr -> - expr  [precedence=right, level=4]
Rule 27    expr -> expr ^ expr  [precedence=right, level=3]
Rule 28    expr -> expr \ expr  [precedence=left, level=2]
Rule 29    expr -> expr / expr  [precedence=left, level=2]
Rule 30    expr -> expr * expr  [precedence=left, level=2]
Rule 31    expr -> expr - expr  [precedence=left, level=1]
Rule 32    expr -> expr + expr  [precedence=left, level=1]
Rule 33    expr -> ( expr )

Unused terminals:

    ESCOLHA
    FIMESCOLHA
    ESCREVAL
    ENTAO
    VERDADEIRO
    ECO
    LT
    NAO
    CARAC
    GT
    ENQUANTO
    POS
    FIMSE
    FIMPROCEDIMENTO
    FALSO
    LE
    SE
    XOU
    FIMENQUANTO
    VETOR
    SENAO
    ASC
    CRONOMETRO
    PROCEDIMENTO
    TIMER
    RETORNE
    LEIA
    NE
    E
    FACA
    MOD
    FUNCAO
    EQ
    REPITA
    FIMREPITA
    OU
    GE
    LIMPATELA
    FIMFUNCAO

Terminals, with rules where they appear:

(                    : 15 17 20 21 22 23 33
)                    : 15 17 20 21 22 23 33
*                    : 30
+                    : 32
,                    : 9
-                    : 26 31
/                    : 29
:                    : 5 6 7 8
ALGORITMO            : 1
ASC                  : 
ASSIGN               : 15 16 17 18 19
CARAC                : 
CARACTERE            : 1 6 17 18 22
CRONOMETRO           : 
E                    : 
ECO                  : 
ENQUANTO             : 
ENTAO                : 
EQ                   : 
ESCOLHA              : 
ESCREVA              : 20 21 22 23
ESCREVAL             : 
FACA                 : 
FALSO                : 
FIMALGORITMO         : 1
FIMENQUANTO          : 
FIMESCOLHA           : 
FIMFUNCAO            : 
FIMPROCEDIMENTO      : 
FIMREPITA            : 
FIMSE                : 
FUNCAO               : 
GE                   : 
GT                   : 
ID                   : 9 10 15 15 16 16 17 18 19 20
INICIO               : 1
INTEIRO              : 8 25
LE                   : 
LEIA                 : 
LIMPATELA            : 
LOGICO               : 5
LT                   : 
MOD                  : 
NAO                  : 
NE                   : 
OU                   : 
POS                  : 
PROCEDIMENTO         : 
REAL                 : 7 24
REPITA               : 
RETORNE              : 
SE                   : 
SENAO                : 
TIMER                : 
VAR                  : 1
VERDADEIRO           : 
VETOR                : 
XOU                  : 
\                    : 28
^                    : 27
error                : 

Nonterminals, with rules where they appear:

bloco                : 3 11
blocoType            : 1
cmd                  : 11 12
cmdattrib            : 14
cmdescrita           : 13
declaracao           : 1
expr                 : 19 23 26 27 27 28 28 29 29 30 30 31 31 32 32 33
initial              : 0
vartype              : 5 6 7 8 9


state 0

    (0) S' -> . initial
    (1) initial -> . ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO
    ALGORITMO       shift and go to state 2

    initial                        shift and go to state 1

state 1

    (0) S' -> initial .


state 2

    (1) initial -> ALGORITMO . CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO
    CARACTERE       shift and go to state 3


state 3

    (1) initial -> ALGORITMO CARACTERE . VAR declaracao INICIO blocoType FIMALGORITMO
    VAR             shift and go to state 4


state 4

    (1) initial -> ALGORITMO CARACTERE VAR . declaracao INICIO blocoType FIMALGORITMO
    (4) declaracao -> .
    (5) declaracao -> . vartype : LOGICO
    (6) declaracao -> . vartype : CARACTERE
    (7) declaracao -> . vartype : REAL
    (8) declaracao -> . vartype : INTEIRO
    (9) vartype -> . ID , vartype
    (10) vartype -> . ID
    INICIO          reduce using rule 4 (declaracao -> .)
    ID              shift and go to state 7

    declaracao                     shift and go to state 5
    vartype                        shift and go to state 6

state 5

    (1) initial -> ALGORITMO CARACTERE VAR declaracao . INICIO blocoType FIMALGORITMO
    INICIO          shift and go to state 8


state 6

    (5) declaracao -> vartype . : LOGICO
    (6) declaracao -> vartype . : CARACTERE
    (7) declaracao -> vartype . : REAL
    (8) declaracao -> vartype . : INTEIRO
    :               shift and go to state 9


state 7

    (9) vartype -> ID . , vartype
    (10) vartype -> ID .
    ,               shift and go to state 10
    :               reduce using rule 10 (vartype -> ID .)


state 8

    (1) initial -> ALGORITMO CARACTERE VAR declaracao INICIO . blocoType FIMALGORITMO
    (2) blocoType -> .
    (3) blocoType -> . bloco
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdescrita
    (14) cmd -> . cmdattrib
    (20) cmdescrita -> . ESCREVA ( ID )
    (21) cmdescrita -> . ESCREVA ( )
    (22) cmdescrita -> . ESCREVA ( CARACTERE )
    (23) cmdescrita -> . ESCREVA ( expr )
    (15) cmdattrib -> . ID ASSIGN ( ID )
    (16) cmdattrib -> . ID ASSIGN ID
    (17) cmdattrib -> . ID ASSIGN ( CARACTERE )
    (18) cmdattrib -> . ID ASSIGN CARACTERE
    (19) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 2 (blocoType -> .)
    ESCREVA         shift and go to state 16
    ID              shift and go to state 17

    blocoType                      shift and go to state 11
    bloco                          shift and go to state 12
    cmd                            shift and go to state 13
    cmdescrita                     shift and go to state 14
    cmdattrib                      shift and go to state 15

state 9

    (5) declaracao -> vartype : . LOGICO
    (6) declaracao -> vartype : . CARACTERE
    (7) declaracao -> vartype : . REAL
    (8) declaracao -> vartype : . INTEIRO
    LOGICO          shift and go to state 18
    CARACTERE       shift and go to state 19
    REAL            shift and go to state 20
    INTEIRO         shift and go to state 21


state 10

    (9) vartype -> ID , . vartype
    (9) vartype -> . ID , vartype
    (10) vartype -> . ID
    ID              shift and go to state 7

    vartype                        shift and go to state 22

state 11

    (1) initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType . FIMALGORITMO
    FIMALGORITMO    shift and go to state 23


state 12

    (3) blocoType -> bloco .
    FIMALGORITMO    reduce using rule 3 (blocoType -> bloco .)


state 13

    (11) bloco -> cmd . bloco
    (12) bloco -> cmd .
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdescrita
    (14) cmd -> . cmdattrib
    (20) cmdescrita -> . ESCREVA ( ID )
    (21) cmdescrita -> . ESCREVA ( )
    (22) cmdescrita -> . ESCREVA ( CARACTERE )
    (23) cmdescrita -> . ESCREVA ( expr )
    (15) cmdattrib -> . ID ASSIGN ( ID )
    (16) cmdattrib -> . ID ASSIGN ID
    (17) cmdattrib -> . ID ASSIGN ( CARACTERE )
    (18) cmdattrib -> . ID ASSIGN CARACTERE
    (19) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 12 (bloco -> cmd .)
    ESCREVA         shift and go to state 16
    ID              shift and go to state 17

    cmd                            shift and go to state 13
    bloco                          shift and go to state 24
    cmdescrita                     shift and go to state 14
    cmdattrib                      shift and go to state 15

state 14

    (13) cmd -> cmdescrita .
    ESCREVA         reduce using rule 13 (cmd -> cmdescrita .)
    ID              reduce using rule 13 (cmd -> cmdescrita .)
    FIMALGORITMO    reduce using rule 13 (cmd -> cmdescrita .)


state 15

    (14) cmd -> cmdattrib .
    ESCREVA         reduce using rule 14 (cmd -> cmdattrib .)
    ID              reduce using rule 14 (cmd -> cmdattrib .)
    FIMALGORITMO    reduce using rule 14 (cmd -> cmdattrib .)


state 16

    (20) cmdescrita -> ESCREVA . ( ID )
    (21) cmdescrita -> ESCREVA . ( )
    (22) cmdescrita -> ESCREVA . ( CARACTERE )
    (23) cmdescrita -> ESCREVA . ( expr )
    (               shift and go to state 25


state 17

    (15) cmdattrib -> ID . ASSIGN ( ID )
    (16) cmdattrib -> ID . ASSIGN ID
    (17) cmdattrib -> ID . ASSIGN ( CARACTERE )
    (18) cmdattrib -> ID . ASSIGN CARACTERE
    (19) cmdattrib -> ID . ASSIGN expr
    ASSIGN          shift and go to state 26


state 18

    (5) declaracao -> vartype : LOGICO .
    INICIO          reduce using rule 5 (declaracao -> vartype : LOGICO .)


state 19

    (6) declaracao -> vartype : CARACTERE .
    INICIO          reduce using rule 6 (declaracao -> vartype : CARACTERE .)


state 20

    (7) declaracao -> vartype : REAL .
    INICIO          reduce using rule 7 (declaracao -> vartype : REAL .)


state 21

    (8) declaracao -> vartype : INTEIRO .
    INICIO          reduce using rule 8 (declaracao -> vartype : INTEIRO .)


state 22

    (9) vartype -> ID , vartype .
    :               reduce using rule 9 (vartype -> ID , vartype .)


state 23

    (1) initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO .
    $end            reduce using rule 1 (initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO .)


state 24

    (11) bloco -> cmd bloco .
    FIMALGORITMO    reduce using rule 11 (bloco -> cmd bloco .)


state 25

    (20) cmdescrita -> ESCREVA ( . ID )
    (21) cmdescrita -> ESCREVA ( . )
    (22) cmdescrita -> ESCREVA ( . CARACTERE )
    (23) cmdescrita -> ESCREVA ( . expr )
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    ID              shift and go to state 28
    )               shift and go to state 29
    CARACTERE       shift and go to state 30
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 31

state 26

    (15) cmdattrib -> ID ASSIGN . ( ID )
    (16) cmdattrib -> ID ASSIGN . ID
    (17) cmdattrib -> ID ASSIGN . ( CARACTERE )
    (18) cmdattrib -> ID ASSIGN . CARACTERE
    (19) cmdattrib -> ID ASSIGN . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    (               shift and go to state 36
    ID              shift and go to state 35
    CARACTERE       shift and go to state 37
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34

    expr                           shift and go to state 38

state 27

    (33) expr -> ( . expr )
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 39

state 28

    (20) cmdescrita -> ESCREVA ( ID . )
    )               shift and go to state 40


state 29

    (21) cmdescrita -> ESCREVA ( ) .
    ESCREVA         reduce using rule 21 (cmdescrita -> ESCREVA ( ) .)
    ID              reduce using rule 21 (cmdescrita -> ESCREVA ( ) .)
    FIMALGORITMO    reduce using rule 21 (cmdescrita -> ESCREVA ( ) .)


state 30

    (22) cmdescrita -> ESCREVA ( CARACTERE . )
    )               shift and go to state 41


state 31

    (23) cmdescrita -> ESCREVA ( expr . )
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               shift and go to state 42
    ^               shift and go to state 43
    \               shift and go to state 44
    /               shift and go to state 45
    *               shift and go to state 46
    -               shift and go to state 47
    +               shift and go to state 48


state 32

    (24) expr -> REAL .
    )               reduce using rule 24 (expr -> REAL .)
    ^               reduce using rule 24 (expr -> REAL .)
    \               reduce using rule 24 (expr -> REAL .)
    /               reduce using rule 24 (expr -> REAL .)
    *               reduce using rule 24 (expr -> REAL .)
    -               reduce using rule 24 (expr -> REAL .)
    +               reduce using rule 24 (expr -> REAL .)
    ESCREVA         reduce using rule 24 (expr -> REAL .)
    ID              reduce using rule 24 (expr -> REAL .)
    FIMALGORITMO    reduce using rule 24 (expr -> REAL .)


state 33

    (25) expr -> INTEIRO .
    )               reduce using rule 25 (expr -> INTEIRO .)
    ^               reduce using rule 25 (expr -> INTEIRO .)
    \               reduce using rule 25 (expr -> INTEIRO .)
    /               reduce using rule 25 (expr -> INTEIRO .)
    *               reduce using rule 25 (expr -> INTEIRO .)
    -               reduce using rule 25 (expr -> INTEIRO .)
    +               reduce using rule 25 (expr -> INTEIRO .)
    ESCREVA         reduce using rule 25 (expr -> INTEIRO .)
    ID              reduce using rule 25 (expr -> INTEIRO .)
    FIMALGORITMO    reduce using rule 25 (expr -> INTEIRO .)


state 34

    (26) expr -> - . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 49

state 35

    (16) cmdattrib -> ID ASSIGN ID .
    ESCREVA         reduce using rule 16 (cmdattrib -> ID ASSIGN ID .)
    ID              reduce using rule 16 (cmdattrib -> ID ASSIGN ID .)
    FIMALGORITMO    reduce using rule 16 (cmdattrib -> ID ASSIGN ID .)


state 36

    (15) cmdattrib -> ID ASSIGN ( . ID )
    (17) cmdattrib -> ID ASSIGN ( . CARACTERE )
    (33) expr -> ( . expr )
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    ID              shift and go to state 50
    CARACTERE       shift and go to state 51
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 39

state 37

    (18) cmdattrib -> ID ASSIGN CARACTERE .
    ESCREVA         reduce using rule 18 (cmdattrib -> ID ASSIGN CARACTERE .)
    ID              reduce using rule 18 (cmdattrib -> ID ASSIGN CARACTERE .)
    FIMALGORITMO    reduce using rule 18 (cmdattrib -> ID ASSIGN CARACTERE .)


state 38

    (19) cmdattrib -> ID ASSIGN expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    ESCREVA         reduce using rule 19 (cmdattrib -> ID ASSIGN expr .)
    ID              reduce using rule 19 (cmdattrib -> ID ASSIGN expr .)
    FIMALGORITMO    reduce using rule 19 (cmdattrib -> ID ASSIGN expr .)
    ^               shift and go to state 43
    \               shift and go to state 44
    /               shift and go to state 45
    *               shift and go to state 46
    -               shift and go to state 47
    +               shift and go to state 48


state 39

    (33) expr -> ( expr . )
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               shift and go to state 52
    ^               shift and go to state 43
    \               shift and go to state 44
    /               shift and go to state 45
    *               shift and go to state 46
    -               shift and go to state 47
    +               shift and go to state 48


state 40

    (20) cmdescrita -> ESCREVA ( ID ) .
    ESCREVA         reduce using rule 20 (cmdescrita -> ESCREVA ( ID ) .)
    ID              reduce using rule 20 (cmdescrita -> ESCREVA ( ID ) .)
    FIMALGORITMO    reduce using rule 20 (cmdescrita -> ESCREVA ( ID ) .)


state 41

    (22) cmdescrita -> ESCREVA ( CARACTERE ) .
    ESCREVA         reduce using rule 22 (cmdescrita -> ESCREVA ( CARACTERE ) .)
    ID              reduce using rule 22 (cmdescrita -> ESCREVA ( CARACTERE ) .)
    FIMALGORITMO    reduce using rule 22 (cmdescrita -> ESCREVA ( CARACTERE ) .)


state 42

    (23) cmdescrita -> ESCREVA ( expr ) .
    ESCREVA         reduce using rule 23 (cmdescrita -> ESCREVA ( expr ) .)
    ID              reduce using rule 23 (cmdescrita -> ESCREVA ( expr ) .)
    FIMALGORITMO    reduce using rule 23 (cmdescrita -> ESCREVA ( expr ) .)


state 43

    (27) expr -> expr ^ . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 53

state 44

    (28) expr -> expr \ . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 54

state 45

    (29) expr -> expr / . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 55

state 46

    (30) expr -> expr * . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 56

state 47

    (31) expr -> expr - . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 57

state 48

    (32) expr -> expr + . expr
    (24) expr -> . REAL
    (25) expr -> . INTEIRO
    (26) expr -> . - expr
    (27) expr -> . expr ^ expr
    (28) expr -> . expr \ expr
    (29) expr -> . expr / expr
    (30) expr -> . expr * expr
    (31) expr -> . expr - expr
    (32) expr -> . expr + expr
    (33) expr -> . ( expr )
    REAL            shift and go to state 32
    INTEIRO         shift and go to state 33
    -               shift and go to state 34
    (               shift and go to state 27

    expr                           shift and go to state 58

state 49

    (26) expr -> - expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 26 (expr -> - expr .)
    ^               reduce using rule 26 (expr -> - expr .)
    \               reduce using rule 26 (expr -> - expr .)
    /               reduce using rule 26 (expr -> - expr .)
    *               reduce using rule 26 (expr -> - expr .)
    -               reduce using rule 26 (expr -> - expr .)
    +               reduce using rule 26 (expr -> - expr .)
    ESCREVA         reduce using rule 26 (expr -> - expr .)
    ID              reduce using rule 26 (expr -> - expr .)
    FIMALGORITMO    reduce using rule 26 (expr -> - expr .)


state 50

    (15) cmdattrib -> ID ASSIGN ( ID . )
    )               shift and go to state 59


state 51

    (17) cmdattrib -> ID ASSIGN ( CARACTERE . )
    )               shift and go to state 60


state 52

    (33) expr -> ( expr ) .
    )               reduce using rule 33 (expr -> ( expr ) .)
    ^               reduce using rule 33 (expr -> ( expr ) .)
    \               reduce using rule 33 (expr -> ( expr ) .)
    /               reduce using rule 33 (expr -> ( expr ) .)
    *               reduce using rule 33 (expr -> ( expr ) .)
    -               reduce using rule 33 (expr -> ( expr ) .)
    +               reduce using rule 33 (expr -> ( expr ) .)
    ESCREVA         reduce using rule 33 (expr -> ( expr ) .)
    ID              reduce using rule 33 (expr -> ( expr ) .)
    FIMALGORITMO    reduce using rule 33 (expr -> ( expr ) .)


state 53

    (27) expr -> expr ^ expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 27 (expr -> expr ^ expr .)
    \               reduce using rule 27 (expr -> expr ^ expr .)
    /               reduce using rule 27 (expr -> expr ^ expr .)
    *               reduce using rule 27 (expr -> expr ^ expr .)
    -               reduce using rule 27 (expr -> expr ^ expr .)
    +               reduce using rule 27 (expr -> expr ^ expr .)
    ESCREVA         reduce using rule 27 (expr -> expr ^ expr .)
    ID              reduce using rule 27 (expr -> expr ^ expr .)
    FIMALGORITMO    reduce using rule 27 (expr -> expr ^ expr .)
    ^               shift and go to state 43


state 54

    (28) expr -> expr \ expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 28 (expr -> expr \ expr .)
    \               reduce using rule 28 (expr -> expr \ expr .)
    /               reduce using rule 28 (expr -> expr \ expr .)
    *               reduce using rule 28 (expr -> expr \ expr .)
    -               reduce using rule 28 (expr -> expr \ expr .)
    +               reduce using rule 28 (expr -> expr \ expr .)
    ESCREVA         reduce using rule 28 (expr -> expr \ expr .)
    ID              reduce using rule 28 (expr -> expr \ expr .)
    FIMALGORITMO    reduce using rule 28 (expr -> expr \ expr .)
    ^               shift and go to state 43


state 55

    (29) expr -> expr / expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 29 (expr -> expr / expr .)
    \               reduce using rule 29 (expr -> expr / expr .)
    /               reduce using rule 29 (expr -> expr / expr .)
    *               reduce using rule 29 (expr -> expr / expr .)
    -               reduce using rule 29 (expr -> expr / expr .)
    +               reduce using rule 29 (expr -> expr / expr .)
    ESCREVA         reduce using rule 29 (expr -> expr / expr .)
    ID              reduce using rule 29 (expr -> expr / expr .)
    FIMALGORITMO    reduce using rule 29 (expr -> expr / expr .)
    ^               shift and go to state 43


state 56

    (30) expr -> expr * expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 30 (expr -> expr * expr .)
    \               reduce using rule 30 (expr -> expr * expr .)
    /               reduce using rule 30 (expr -> expr * expr .)
    *               reduce using rule 30 (expr -> expr * expr .)
    -               reduce using rule 30 (expr -> expr * expr .)
    +               reduce using rule 30 (expr -> expr * expr .)
    ESCREVA         reduce using rule 30 (expr -> expr * expr .)
    ID              reduce using rule 30 (expr -> expr * expr .)
    FIMALGORITMO    reduce using rule 30 (expr -> expr * expr .)
    ^               shift and go to state 43


state 57

    (31) expr -> expr - expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 31 (expr -> expr - expr .)
    -               reduce using rule 31 (expr -> expr - expr .)
    +               reduce using rule 31 (expr -> expr - expr .)
    ESCREVA         reduce using rule 31 (expr -> expr - expr .)
    ID              reduce using rule 31 (expr -> expr - expr .)
    FIMALGORITMO    reduce using rule 31 (expr -> expr - expr .)
    ^               shift and go to state 43
    \               shift and go to state 44
    /               shift and go to state 45
    *               shift and go to state 46


state 58

    (32) expr -> expr + expr .
    (27) expr -> expr . ^ expr
    (28) expr -> expr . \ expr
    (29) expr -> expr . / expr
    (30) expr -> expr . * expr
    (31) expr -> expr . - expr
    (32) expr -> expr . + expr
    )               reduce using rule 32 (expr -> expr + expr .)
    -               reduce using rule 32 (expr -> expr + expr .)
    +               reduce using rule 32 (expr -> expr + expr .)
    ESCREVA         reduce using rule 32 (expr -> expr + expr .)
    ID              reduce using rule 32 (expr -> expr + expr .)
    FIMALGORITMO    reduce using rule 32 (expr -> expr + expr .)
    ^               shift and go to state 43
    \               shift and go to state 44
    /               shift and go to state 45
    *               shift and go to state 46


state 59

    (15) cmdattrib -> ID ASSIGN ( ID ) .
    ESCREVA         reduce using rule 15 (cmdattrib -> ID ASSIGN ( ID ) .)
    ID              reduce using rule 15 (cmdattrib -> ID ASSIGN ( ID ) .)
    FIMALGORITMO    reduce using rule 15 (cmdattrib -> ID ASSIGN ( ID ) .)


state 60

    (17) cmdattrib -> ID ASSIGN ( CARACTERE ) .
    ESCREVA         reduce using rule 17 (cmdattrib -> ID ASSIGN ( CARACTERE ) .)
    ID              reduce using rule 17 (cmdattrib -> ID ASSIGN ( CARACTERE ) .)
    FIMALGORITMO    reduce using rule 17 (cmdattrib -> ID ASSIGN ( CARACTERE ) .)
