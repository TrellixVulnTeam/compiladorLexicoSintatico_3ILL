Grammar:

Rule 0     S' -> initial
Rule 1     initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO
Rule 2     blocoType -> <empty>
Rule 3     blocoType -> bloco
Rule 4     declaracao -> <empty>
Rule 5     declaracao -> vartype : LOGICO
Rule 6     declaracao -> vartype : CARACTERE
Rule 7     declaracao -> vartype : REAL
Rule 8     declaracao -> vartype : INTEIRO
Rule 9     vartype -> ID , vartype
Rule 10    vartype -> ID
Rule 11    bloco -> cmd bloco
Rule 12    bloco -> cmd
Rule 13    cmd -> cmdRepeticao
Rule 14    cmd -> LIMPATELA
Rule 15    cmd -> cmdCondicao
Rule 16    cmd -> cmdleitura
Rule 17    cmd -> cmdescrita
Rule 18    cmd -> cmdattrib
Rule 19    cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
Rule 20    cmdleitura -> LEIA ( ID )
Rule 21    cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
Rule 22    cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE
Rule 23    expressaoRelacional -> termoRelacional
Rule 24    expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional
Rule 25    termoRelacional -> ( expressaoRelacional )
Rule 26    termoRelacional -> FALSO
Rule 27    termoRelacional -> VERDADEIRO
Rule 28    termoRelacional -> NAO termoRelacional
Rule 29    termoRelacional -> expr OP_REL expr
Rule 30    OP_BOOL -> XOU
Rule 31    OP_BOOL -> OU
Rule 32    OP_BOOL -> E
Rule 33    OP_REL -> EQ  [precedence=nonassoc, level=1]
Rule 34    OP_REL -> GT  [precedence=nonassoc, level=1]
Rule 35    OP_REL -> GE  [precedence=nonassoc, level=1]
Rule 36    OP_REL -> LT  [precedence=nonassoc, level=1]
Rule 37    OP_REL -> LE  [precedence=nonassoc, level=1]
Rule 38    OP_REL -> NE  [precedence=nonassoc, level=1]
Rule 39    cmdattrib -> ID ASSIGN ( typeArgs )
Rule 40    cmdattrib -> ID ASSIGN typeArgs
Rule 41    cmdattrib -> ID ASSIGN expr
Rule 42    typeArgs -> CARACTERE
Rule 43    typeArgs -> FALSO
Rule 44    typeArgs -> VERDADEIRO
Rule 45    cmdescrita -> ESCREVAL ( )
Rule 46    cmdescrita -> ESCREVAL ( typeArgsEscrita )
Rule 47    cmdescrita -> ESCREVA ( )
Rule 48    cmdescrita -> ESCREVA ( typeArgsEscrita )
Rule 49    typeArgsEscritaAux -> typeArgs
Rule 50    typeArgsEscritaAux -> expr
Rule 51    typeArgsEscrita -> typeArgsEscritaAux
Rule 52    typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux
Rule 53    expr -> ID
Rule 54    expr -> REAL
Rule 55    expr -> INTEIRO
Rule 56    expr -> - expr  [precedence=right, level=5]
Rule 57    expr -> expr ^ expr  [precedence=right, level=4]
Rule 58    expr -> expr MOD expr  [precedence=left, level=3]
Rule 59    expr -> expr % expr  [precedence=left, level=3]
Rule 60    expr -> expr \ expr  [precedence=left, level=3]
Rule 61    expr -> expr / expr  [precedence=left, level=3]
Rule 62    expr -> expr * expr  [precedence=left, level=3]
Rule 63    expr -> expr - expr  [precedence=left, level=2]
Rule 64    expr -> expr + expr  [precedence=left, level=2]
Rule 65    expr -> ( expr )

Unused terminals:

    RETORNE
    FUNCAO
    CARAC
    REPITA
    FIMFUNCAO
    FIMESCOLHA
    FIMPROCEDIMENTO
    ESCOLHA
    FIMREPITA
    TIMER
    CRONOMETRO
    PROCEDIMENTO
    VETOR
    ASC
    ECO
    POS

Terminals, with rules where they appear:

%                    : 59
(                    : 20 25 39 45 46 47 48 65
)                    : 20 25 39 45 46 47 48 65
*                    : 62
+                    : 64
,                    : 9 52
-                    : 56 63
/                    : 61
:                    : 5 6 7 8
ALGORITMO            : 1
ASC                  : 
ASSIGN               : 39 40 41
CARAC                : 
CARACTERE            : 1 6 42
CRONOMETRO           : 
E                    : 32
ECO                  : 
ENQUANTO             : 19
ENTAO                : 21 22
EQ                   : 33
ESCOLHA              : 
ESCREVA              : 47 48
ESCREVAL             : 45 46
FACA                 : 19
FALSO                : 26 43
FIMALGORITMO         : 1
FIMENQUANTO          : 19
FIMESCOLHA           : 
FIMFUNCAO            : 
FIMPROCEDIMENTO      : 
FIMREPITA            : 
FIMSE                : 21 22
FUNCAO               : 
GE                   : 35
GT                   : 34
ID                   : 9 10 20 39 40 41 53
INICIO               : 1
INTEIRO              : 8 55
LE                   : 37
LEIA                 : 20
LIMPATELA            : 14
LOGICO               : 5
LT                   : 36
MOD                  : 58
NAO                  : 28
NE                   : 38
OU                   : 31
POS                  : 
PROCEDIMENTO         : 
REAL                 : 7 54
REPITA               : 
RETORNE              : 
SE                   : 21 22
SENAO                : 21
TIMER                : 
VAR                  : 1
VERDADEIRO           : 27 44
VETOR                : 
XOU                  : 30
\                    : 60
^                    : 57
error                : 

Nonterminals, with rules where they appear:

OP_BOOL              : 24
OP_REL               : 29
bloco                : 3 11 19 21 21 22
blocoType            : 1
cmd                  : 11 12
cmdCondicao          : 15
cmdRepeticao         : 13
cmdattrib            : 18
cmdescrita           : 17
cmdleitura           : 16
declaracao           : 1
expr                 : 29 29 41 50 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65
expressaoRelacional  : 19 21 22 24 25
initial              : 0
termoRelacional      : 23 24 28
typeArgs             : 39 40 49
typeArgsEscrita      : 46 48 52
typeArgsEscritaAux   : 51 52
vartype              : 5 6 7 8 9


state 0

    (0) S' -> . initial
    (1) initial -> . ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO
    ALGORITMO       shift and go to state 2

    initial                        shift and go to state 1

state 1

    (0) S' -> initial .


state 2

    (1) initial -> ALGORITMO . CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO
    CARACTERE       shift and go to state 3


state 3

    (1) initial -> ALGORITMO CARACTERE . VAR declaracao INICIO blocoType FIMALGORITMO
    VAR             shift and go to state 4


state 4

    (1) initial -> ALGORITMO CARACTERE VAR . declaracao INICIO blocoType FIMALGORITMO
    (4) declaracao -> .
    (5) declaracao -> . vartype : LOGICO
    (6) declaracao -> . vartype : CARACTERE
    (7) declaracao -> . vartype : REAL
    (8) declaracao -> . vartype : INTEIRO
    (9) vartype -> . ID , vartype
    (10) vartype -> . ID
    INICIO          reduce using rule 4 (declaracao -> .)
    ID              shift and go to state 7

    declaracao                     shift and go to state 5
    vartype                        shift and go to state 6

state 5

    (1) initial -> ALGORITMO CARACTERE VAR declaracao . INICIO blocoType FIMALGORITMO
    INICIO          shift and go to state 8


state 6

    (5) declaracao -> vartype . : LOGICO
    (6) declaracao -> vartype . : CARACTERE
    (7) declaracao -> vartype . : REAL
    (8) declaracao -> vartype . : INTEIRO
    :               shift and go to state 9


state 7

    (9) vartype -> ID . , vartype
    (10) vartype -> ID .
    ,               shift and go to state 10
    :               reduce using rule 10 (vartype -> ID .)


state 8

    (1) initial -> ALGORITMO CARACTERE VAR declaracao INICIO . blocoType FIMALGORITMO
    (2) blocoType -> .
    (3) blocoType -> . bloco
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdRepeticao
    (14) cmd -> . LIMPATELA
    (15) cmd -> . cmdCondicao
    (16) cmd -> . cmdleitura
    (17) cmd -> . cmdescrita
    (18) cmd -> . cmdattrib
    (19) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (21) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (20) cmdleitura -> . LEIA ( ID )
    (45) cmdescrita -> . ESCREVAL ( )
    (46) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (47) cmdescrita -> . ESCREVA ( )
    (48) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (39) cmdattrib -> . ID ASSIGN ( typeArgs )
    (40) cmdattrib -> . ID ASSIGN typeArgs
    (41) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 2 (blocoType -> .)
    LIMPATELA       shift and go to state 15
    ENQUANTO        shift and go to state 20
    SE              shift and go to state 21
    LEIA            shift and go to state 22
    ESCREVAL        shift and go to state 24
    ESCREVA         shift and go to state 25
    ID              shift and go to state 23

    blocoType                      shift and go to state 11
    bloco                          shift and go to state 12
    cmd                            shift and go to state 13
    cmdRepeticao                   shift and go to state 14
    cmdCondicao                    shift and go to state 16
    cmdleitura                     shift and go to state 17
    cmdescrita                     shift and go to state 18
    cmdattrib                      shift and go to state 19

state 9

    (5) declaracao -> vartype : . LOGICO
    (6) declaracao -> vartype : . CARACTERE
    (7) declaracao -> vartype : . REAL
    (8) declaracao -> vartype : . INTEIRO
    LOGICO          shift and go to state 26
    CARACTERE       shift and go to state 27
    REAL            shift and go to state 28
    INTEIRO         shift and go to state 29


state 10

    (9) vartype -> ID , . vartype
    (9) vartype -> . ID , vartype
    (10) vartype -> . ID
    ID              shift and go to state 7

    vartype                        shift and go to state 30

state 11

    (1) initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType . FIMALGORITMO
    FIMALGORITMO    shift and go to state 31


state 12

    (3) blocoType -> bloco .
    FIMALGORITMO    reduce using rule 3 (blocoType -> bloco .)


state 13

    (11) bloco -> cmd . bloco
    (12) bloco -> cmd .
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdRepeticao
    (14) cmd -> . LIMPATELA
    (15) cmd -> . cmdCondicao
    (16) cmd -> . cmdleitura
    (17) cmd -> . cmdescrita
    (18) cmd -> . cmdattrib
    (19) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (21) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (20) cmdleitura -> . LEIA ( ID )
    (45) cmdescrita -> . ESCREVAL ( )
    (46) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (47) cmdescrita -> . ESCREVA ( )
    (48) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (39) cmdattrib -> . ID ASSIGN ( typeArgs )
    (40) cmdattrib -> . ID ASSIGN typeArgs
    (41) cmdattrib -> . ID ASSIGN expr
    FIMALGORITMO    reduce using rule 12 (bloco -> cmd .)
    FIMENQUANTO     reduce using rule 12 (bloco -> cmd .)
    SENAO           reduce using rule 12 (bloco -> cmd .)
    FIMSE           reduce using rule 12 (bloco -> cmd .)
    LIMPATELA       shift and go to state 15
    ENQUANTO        shift and go to state 20
    SE              shift and go to state 21
    LEIA            shift and go to state 22
    ESCREVAL        shift and go to state 24
    ESCREVA         shift and go to state 25
    ID              shift and go to state 23

    cmd                            shift and go to state 13
    bloco                          shift and go to state 32
    cmdRepeticao                   shift and go to state 14
    cmdCondicao                    shift and go to state 16
    cmdleitura                     shift and go to state 17
    cmdescrita                     shift and go to state 18
    cmdattrib                      shift and go to state 19

state 14

    (13) cmd -> cmdRepeticao .
    LIMPATELA       reduce using rule 13 (cmd -> cmdRepeticao .)
    ENQUANTO        reduce using rule 13 (cmd -> cmdRepeticao .)
    SE              reduce using rule 13 (cmd -> cmdRepeticao .)
    LEIA            reduce using rule 13 (cmd -> cmdRepeticao .)
    ESCREVAL        reduce using rule 13 (cmd -> cmdRepeticao .)
    ESCREVA         reduce using rule 13 (cmd -> cmdRepeticao .)
    ID              reduce using rule 13 (cmd -> cmdRepeticao .)
    FIMALGORITMO    reduce using rule 13 (cmd -> cmdRepeticao .)
    FIMENQUANTO     reduce using rule 13 (cmd -> cmdRepeticao .)
    SENAO           reduce using rule 13 (cmd -> cmdRepeticao .)
    FIMSE           reduce using rule 13 (cmd -> cmdRepeticao .)


state 15

    (14) cmd -> LIMPATELA .
    LIMPATELA       reduce using rule 14 (cmd -> LIMPATELA .)
    ENQUANTO        reduce using rule 14 (cmd -> LIMPATELA .)
    SE              reduce using rule 14 (cmd -> LIMPATELA .)
    LEIA            reduce using rule 14 (cmd -> LIMPATELA .)
    ESCREVAL        reduce using rule 14 (cmd -> LIMPATELA .)
    ESCREVA         reduce using rule 14 (cmd -> LIMPATELA .)
    ID              reduce using rule 14 (cmd -> LIMPATELA .)
    FIMALGORITMO    reduce using rule 14 (cmd -> LIMPATELA .)
    FIMENQUANTO     reduce using rule 14 (cmd -> LIMPATELA .)
    SENAO           reduce using rule 14 (cmd -> LIMPATELA .)
    FIMSE           reduce using rule 14 (cmd -> LIMPATELA .)


state 16

    (15) cmd -> cmdCondicao .
    LIMPATELA       reduce using rule 15 (cmd -> cmdCondicao .)
    ENQUANTO        reduce using rule 15 (cmd -> cmdCondicao .)
    SE              reduce using rule 15 (cmd -> cmdCondicao .)
    LEIA            reduce using rule 15 (cmd -> cmdCondicao .)
    ESCREVAL        reduce using rule 15 (cmd -> cmdCondicao .)
    ESCREVA         reduce using rule 15 (cmd -> cmdCondicao .)
    ID              reduce using rule 15 (cmd -> cmdCondicao .)
    FIMALGORITMO    reduce using rule 15 (cmd -> cmdCondicao .)
    FIMENQUANTO     reduce using rule 15 (cmd -> cmdCondicao .)
    SENAO           reduce using rule 15 (cmd -> cmdCondicao .)
    FIMSE           reduce using rule 15 (cmd -> cmdCondicao .)


state 17

    (16) cmd -> cmdleitura .
    LIMPATELA       reduce using rule 16 (cmd -> cmdleitura .)
    ENQUANTO        reduce using rule 16 (cmd -> cmdleitura .)
    SE              reduce using rule 16 (cmd -> cmdleitura .)
    LEIA            reduce using rule 16 (cmd -> cmdleitura .)
    ESCREVAL        reduce using rule 16 (cmd -> cmdleitura .)
    ESCREVA         reduce using rule 16 (cmd -> cmdleitura .)
    ID              reduce using rule 16 (cmd -> cmdleitura .)
    FIMALGORITMO    reduce using rule 16 (cmd -> cmdleitura .)
    FIMENQUANTO     reduce using rule 16 (cmd -> cmdleitura .)
    SENAO           reduce using rule 16 (cmd -> cmdleitura .)
    FIMSE           reduce using rule 16 (cmd -> cmdleitura .)


state 18

    (17) cmd -> cmdescrita .
    LIMPATELA       reduce using rule 17 (cmd -> cmdescrita .)
    ENQUANTO        reduce using rule 17 (cmd -> cmdescrita .)
    SE              reduce using rule 17 (cmd -> cmdescrita .)
    LEIA            reduce using rule 17 (cmd -> cmdescrita .)
    ESCREVAL        reduce using rule 17 (cmd -> cmdescrita .)
    ESCREVA         reduce using rule 17 (cmd -> cmdescrita .)
    ID              reduce using rule 17 (cmd -> cmdescrita .)
    FIMALGORITMO    reduce using rule 17 (cmd -> cmdescrita .)
    FIMENQUANTO     reduce using rule 17 (cmd -> cmdescrita .)
    SENAO           reduce using rule 17 (cmd -> cmdescrita .)
    FIMSE           reduce using rule 17 (cmd -> cmdescrita .)


state 19

    (18) cmd -> cmdattrib .
    LIMPATELA       reduce using rule 18 (cmd -> cmdattrib .)
    ENQUANTO        reduce using rule 18 (cmd -> cmdattrib .)
    SE              reduce using rule 18 (cmd -> cmdattrib .)
    LEIA            reduce using rule 18 (cmd -> cmdattrib .)
    ESCREVAL        reduce using rule 18 (cmd -> cmdattrib .)
    ESCREVA         reduce using rule 18 (cmd -> cmdattrib .)
    ID              reduce using rule 18 (cmd -> cmdattrib .)
    FIMALGORITMO    reduce using rule 18 (cmd -> cmdattrib .)
    FIMENQUANTO     reduce using rule 18 (cmd -> cmdattrib .)
    SENAO           reduce using rule 18 (cmd -> cmdattrib .)
    FIMSE           reduce using rule 18 (cmd -> cmdattrib .)


state 20

    (19) cmdRepeticao -> ENQUANTO . expressaoRelacional FACA bloco FIMENQUANTO
    (23) expressaoRelacional -> . termoRelacional
    (24) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (25) termoRelacional -> . ( expressaoRelacional )
    (26) termoRelacional -> . FALSO
    (27) termoRelacional -> . VERDADEIRO
    (28) termoRelacional -> . NAO termoRelacional
    (29) termoRelacional -> . expr OP_REL expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (               shift and go to state 35
    FALSO           shift and go to state 36
    VERDADEIRO      shift and go to state 37
    NAO             shift and go to state 38
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43

    expressaoRelacional            shift and go to state 33
    termoRelacional                shift and go to state 34
    expr                           shift and go to state 39

state 21

    (21) cmdCondicao -> SE . expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> SE . expressaoRelacional ENTAO bloco FIMSE
    (23) expressaoRelacional -> . termoRelacional
    (24) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (25) termoRelacional -> . ( expressaoRelacional )
    (26) termoRelacional -> . FALSO
    (27) termoRelacional -> . VERDADEIRO
    (28) termoRelacional -> . NAO termoRelacional
    (29) termoRelacional -> . expr OP_REL expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (               shift and go to state 35
    FALSO           shift and go to state 36
    VERDADEIRO      shift and go to state 37
    NAO             shift and go to state 38
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43

    expressaoRelacional            shift and go to state 44
    termoRelacional                shift and go to state 34
    expr                           shift and go to state 39

state 22

    (20) cmdleitura -> LEIA . ( ID )
    (               shift and go to state 45


state 23

    (39) cmdattrib -> ID . ASSIGN ( typeArgs )
    (40) cmdattrib -> ID . ASSIGN typeArgs
    (41) cmdattrib -> ID . ASSIGN expr
    ASSIGN          shift and go to state 46


state 24

    (45) cmdescrita -> ESCREVAL . ( )
    (46) cmdescrita -> ESCREVAL . ( typeArgsEscrita )
    (               shift and go to state 47


state 25

    (47) cmdescrita -> ESCREVA . ( )
    (48) cmdescrita -> ESCREVA . ( typeArgsEscrita )
    (               shift and go to state 48


state 26

    (5) declaracao -> vartype : LOGICO .
    INICIO          reduce using rule 5 (declaracao -> vartype : LOGICO .)


state 27

    (6) declaracao -> vartype : CARACTERE .
    INICIO          reduce using rule 6 (declaracao -> vartype : CARACTERE .)


state 28

    (7) declaracao -> vartype : REAL .
    INICIO          reduce using rule 7 (declaracao -> vartype : REAL .)


state 29

    (8) declaracao -> vartype : INTEIRO .
    INICIO          reduce using rule 8 (declaracao -> vartype : INTEIRO .)


state 30

    (9) vartype -> ID , vartype .
    :               reduce using rule 9 (vartype -> ID , vartype .)


state 31

    (1) initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO .
    $end            reduce using rule 1 (initial -> ALGORITMO CARACTERE VAR declaracao INICIO blocoType FIMALGORITMO .)


state 32

    (11) bloco -> cmd bloco .
    FIMALGORITMO    reduce using rule 11 (bloco -> cmd bloco .)
    FIMENQUANTO     reduce using rule 11 (bloco -> cmd bloco .)
    SENAO           reduce using rule 11 (bloco -> cmd bloco .)
    FIMSE           reduce using rule 11 (bloco -> cmd bloco .)


state 33

    (19) cmdRepeticao -> ENQUANTO expressaoRelacional . FACA bloco FIMENQUANTO
    (24) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (30) OP_BOOL -> . XOU
    (31) OP_BOOL -> . OU
    (32) OP_BOOL -> . E
    FACA            shift and go to state 49
    XOU             shift and go to state 51
    OU              shift and go to state 52
    E               shift and go to state 53

    OP_BOOL                        shift and go to state 50

state 34

    (23) expressaoRelacional -> termoRelacional .
    FACA            reduce using rule 23 (expressaoRelacional -> termoRelacional .)
    XOU             reduce using rule 23 (expressaoRelacional -> termoRelacional .)
    OU              reduce using rule 23 (expressaoRelacional -> termoRelacional .)
    E               reduce using rule 23 (expressaoRelacional -> termoRelacional .)
    ENTAO           reduce using rule 23 (expressaoRelacional -> termoRelacional .)
    )               reduce using rule 23 (expressaoRelacional -> termoRelacional .)


state 35

    (25) termoRelacional -> ( . expressaoRelacional )
    (65) expr -> ( . expr )
    (23) expressaoRelacional -> . termoRelacional
    (24) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (25) termoRelacional -> . ( expressaoRelacional )
    (26) termoRelacional -> . FALSO
    (27) termoRelacional -> . VERDADEIRO
    (28) termoRelacional -> . NAO termoRelacional
    (29) termoRelacional -> . expr OP_REL expr
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 54
    FALSO           shift and go to state 36
    VERDADEIRO      shift and go to state 37
    NAO             shift and go to state 38

    expressaoRelacional            shift and go to state 55
    expr                           shift and go to state 56
    termoRelacional                shift and go to state 34

state 36

    (26) termoRelacional -> FALSO .
    FACA            reduce using rule 26 (termoRelacional -> FALSO .)
    XOU             reduce using rule 26 (termoRelacional -> FALSO .)
    OU              reduce using rule 26 (termoRelacional -> FALSO .)
    E               reduce using rule 26 (termoRelacional -> FALSO .)
    ENTAO           reduce using rule 26 (termoRelacional -> FALSO .)
    )               reduce using rule 26 (termoRelacional -> FALSO .)


state 37

    (27) termoRelacional -> VERDADEIRO .
    FACA            reduce using rule 27 (termoRelacional -> VERDADEIRO .)
    XOU             reduce using rule 27 (termoRelacional -> VERDADEIRO .)
    OU              reduce using rule 27 (termoRelacional -> VERDADEIRO .)
    E               reduce using rule 27 (termoRelacional -> VERDADEIRO .)
    ENTAO           reduce using rule 27 (termoRelacional -> VERDADEIRO .)
    )               reduce using rule 27 (termoRelacional -> VERDADEIRO .)


state 38

    (28) termoRelacional -> NAO . termoRelacional
    (25) termoRelacional -> . ( expressaoRelacional )
    (26) termoRelacional -> . FALSO
    (27) termoRelacional -> . VERDADEIRO
    (28) termoRelacional -> . NAO termoRelacional
    (29) termoRelacional -> . expr OP_REL expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (               shift and go to state 35
    FALSO           shift and go to state 36
    VERDADEIRO      shift and go to state 37
    NAO             shift and go to state 38
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43

    termoRelacional                shift and go to state 57
    expr                           shift and go to state 39

state 39

    (29) termoRelacional -> expr . OP_REL expr
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    (33) OP_REL -> . EQ
    (34) OP_REL -> . GT
    (35) OP_REL -> . GE
    (36) OP_REL -> . LT
    (37) OP_REL -> . LE
    (38) OP_REL -> . NE
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    EQ              shift and go to state 67
    GT              shift and go to state 68
    GE              shift and go to state 69
    LT              shift and go to state 70
    LE              shift and go to state 71
    NE              shift and go to state 72

    OP_REL                         shift and go to state 58

state 40

    (53) expr -> ID .
    ^               reduce using rule 53 (expr -> ID .)
    MOD             reduce using rule 53 (expr -> ID .)
    %               reduce using rule 53 (expr -> ID .)
    \               reduce using rule 53 (expr -> ID .)
    /               reduce using rule 53 (expr -> ID .)
    *               reduce using rule 53 (expr -> ID .)
    -               reduce using rule 53 (expr -> ID .)
    +               reduce using rule 53 (expr -> ID .)
    EQ              reduce using rule 53 (expr -> ID .)
    GT              reduce using rule 53 (expr -> ID .)
    GE              reduce using rule 53 (expr -> ID .)
    LT              reduce using rule 53 (expr -> ID .)
    LE              reduce using rule 53 (expr -> ID .)
    NE              reduce using rule 53 (expr -> ID .)
    )               reduce using rule 53 (expr -> ID .)
    LIMPATELA       reduce using rule 53 (expr -> ID .)
    ENQUANTO        reduce using rule 53 (expr -> ID .)
    SE              reduce using rule 53 (expr -> ID .)
    LEIA            reduce using rule 53 (expr -> ID .)
    ESCREVAL        reduce using rule 53 (expr -> ID .)
    ESCREVA         reduce using rule 53 (expr -> ID .)
    ID              reduce using rule 53 (expr -> ID .)
    FIMALGORITMO    reduce using rule 53 (expr -> ID .)
    FIMENQUANTO     reduce using rule 53 (expr -> ID .)
    SENAO           reduce using rule 53 (expr -> ID .)
    FIMSE           reduce using rule 53 (expr -> ID .)
    ,               reduce using rule 53 (expr -> ID .)
    FACA            reduce using rule 53 (expr -> ID .)
    XOU             reduce using rule 53 (expr -> ID .)
    OU              reduce using rule 53 (expr -> ID .)
    E               reduce using rule 53 (expr -> ID .)
    ENTAO           reduce using rule 53 (expr -> ID .)


state 41

    (54) expr -> REAL .
    ^               reduce using rule 54 (expr -> REAL .)
    MOD             reduce using rule 54 (expr -> REAL .)
    %               reduce using rule 54 (expr -> REAL .)
    \               reduce using rule 54 (expr -> REAL .)
    /               reduce using rule 54 (expr -> REAL .)
    *               reduce using rule 54 (expr -> REAL .)
    -               reduce using rule 54 (expr -> REAL .)
    +               reduce using rule 54 (expr -> REAL .)
    EQ              reduce using rule 54 (expr -> REAL .)
    GT              reduce using rule 54 (expr -> REAL .)
    GE              reduce using rule 54 (expr -> REAL .)
    LT              reduce using rule 54 (expr -> REAL .)
    LE              reduce using rule 54 (expr -> REAL .)
    NE              reduce using rule 54 (expr -> REAL .)
    )               reduce using rule 54 (expr -> REAL .)
    LIMPATELA       reduce using rule 54 (expr -> REAL .)
    ENQUANTO        reduce using rule 54 (expr -> REAL .)
    SE              reduce using rule 54 (expr -> REAL .)
    LEIA            reduce using rule 54 (expr -> REAL .)
    ESCREVAL        reduce using rule 54 (expr -> REAL .)
    ESCREVA         reduce using rule 54 (expr -> REAL .)
    ID              reduce using rule 54 (expr -> REAL .)
    FIMALGORITMO    reduce using rule 54 (expr -> REAL .)
    FIMENQUANTO     reduce using rule 54 (expr -> REAL .)
    SENAO           reduce using rule 54 (expr -> REAL .)
    FIMSE           reduce using rule 54 (expr -> REAL .)
    ,               reduce using rule 54 (expr -> REAL .)
    FACA            reduce using rule 54 (expr -> REAL .)
    XOU             reduce using rule 54 (expr -> REAL .)
    OU              reduce using rule 54 (expr -> REAL .)
    E               reduce using rule 54 (expr -> REAL .)
    ENTAO           reduce using rule 54 (expr -> REAL .)


state 42

    (55) expr -> INTEIRO .
    ^               reduce using rule 55 (expr -> INTEIRO .)
    MOD             reduce using rule 55 (expr -> INTEIRO .)
    %               reduce using rule 55 (expr -> INTEIRO .)
    \               reduce using rule 55 (expr -> INTEIRO .)
    /               reduce using rule 55 (expr -> INTEIRO .)
    *               reduce using rule 55 (expr -> INTEIRO .)
    -               reduce using rule 55 (expr -> INTEIRO .)
    +               reduce using rule 55 (expr -> INTEIRO .)
    EQ              reduce using rule 55 (expr -> INTEIRO .)
    GT              reduce using rule 55 (expr -> INTEIRO .)
    GE              reduce using rule 55 (expr -> INTEIRO .)
    LT              reduce using rule 55 (expr -> INTEIRO .)
    LE              reduce using rule 55 (expr -> INTEIRO .)
    NE              reduce using rule 55 (expr -> INTEIRO .)
    )               reduce using rule 55 (expr -> INTEIRO .)
    LIMPATELA       reduce using rule 55 (expr -> INTEIRO .)
    ENQUANTO        reduce using rule 55 (expr -> INTEIRO .)
    SE              reduce using rule 55 (expr -> INTEIRO .)
    LEIA            reduce using rule 55 (expr -> INTEIRO .)
    ESCREVAL        reduce using rule 55 (expr -> INTEIRO .)
    ESCREVA         reduce using rule 55 (expr -> INTEIRO .)
    ID              reduce using rule 55 (expr -> INTEIRO .)
    FIMALGORITMO    reduce using rule 55 (expr -> INTEIRO .)
    FIMENQUANTO     reduce using rule 55 (expr -> INTEIRO .)
    SENAO           reduce using rule 55 (expr -> INTEIRO .)
    FIMSE           reduce using rule 55 (expr -> INTEIRO .)
    ,               reduce using rule 55 (expr -> INTEIRO .)
    FACA            reduce using rule 55 (expr -> INTEIRO .)
    XOU             reduce using rule 55 (expr -> INTEIRO .)
    OU              reduce using rule 55 (expr -> INTEIRO .)
    E               reduce using rule 55 (expr -> INTEIRO .)
    ENTAO           reduce using rule 55 (expr -> INTEIRO .)


state 43

    (56) expr -> - . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 73

state 44

    (21) cmdCondicao -> SE expressaoRelacional . ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> SE expressaoRelacional . ENTAO bloco FIMSE
    (24) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (30) OP_BOOL -> . XOU
    (31) OP_BOOL -> . OU
    (32) OP_BOOL -> . E
    ENTAO           shift and go to state 75
    XOU             shift and go to state 51
    OU              shift and go to state 52
    E               shift and go to state 53

    OP_BOOL                        shift and go to state 50

state 45

    (20) cmdleitura -> LEIA ( . ID )
    ID              shift and go to state 76


state 46

    (39) cmdattrib -> ID ASSIGN . ( typeArgs )
    (40) cmdattrib -> ID ASSIGN . typeArgs
    (41) cmdattrib -> ID ASSIGN . expr
    (42) typeArgs -> . CARACTERE
    (43) typeArgs -> . FALSO
    (44) typeArgs -> . VERDADEIRO
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (               shift and go to state 77
    CARACTERE       shift and go to state 80
    FALSO           shift and go to state 81
    VERDADEIRO      shift and go to state 82
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43

    typeArgs                       shift and go to state 78
    expr                           shift and go to state 79

state 47

    (45) cmdescrita -> ESCREVAL ( . )
    (46) cmdescrita -> ESCREVAL ( . typeArgsEscrita )
    (51) typeArgsEscrita -> . typeArgsEscritaAux
    (52) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (49) typeArgsEscritaAux -> . typeArgs
    (50) typeArgsEscritaAux -> . expr
    (42) typeArgs -> . CARACTERE
    (43) typeArgs -> . FALSO
    (44) typeArgs -> . VERDADEIRO
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    )               shift and go to state 83
    CARACTERE       shift and go to state 80
    FALSO           shift and go to state 81
    VERDADEIRO      shift and go to state 82
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    typeArgsEscrita                shift and go to state 84
    typeArgsEscritaAux             shift and go to state 85
    typeArgs                       shift and go to state 86
    expr                           shift and go to state 87

state 48

    (47) cmdescrita -> ESCREVA ( . )
    (48) cmdescrita -> ESCREVA ( . typeArgsEscrita )
    (51) typeArgsEscrita -> . typeArgsEscritaAux
    (52) typeArgsEscrita -> . typeArgsEscrita , typeArgsEscritaAux
    (49) typeArgsEscritaAux -> . typeArgs
    (50) typeArgsEscritaAux -> . expr
    (42) typeArgs -> . CARACTERE
    (43) typeArgs -> . FALSO
    (44) typeArgs -> . VERDADEIRO
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    )               shift and go to state 88
    CARACTERE       shift and go to state 80
    FALSO           shift and go to state 81
    VERDADEIRO      shift and go to state 82
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    typeArgsEscrita                shift and go to state 89
    typeArgsEscritaAux             shift and go to state 85
    typeArgs                       shift and go to state 86
    expr                           shift and go to state 87

state 49

    (19) cmdRepeticao -> ENQUANTO expressaoRelacional FACA . bloco FIMENQUANTO
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdRepeticao
    (14) cmd -> . LIMPATELA
    (15) cmd -> . cmdCondicao
    (16) cmd -> . cmdleitura
    (17) cmd -> . cmdescrita
    (18) cmd -> . cmdattrib
    (19) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (21) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (20) cmdleitura -> . LEIA ( ID )
    (45) cmdescrita -> . ESCREVAL ( )
    (46) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (47) cmdescrita -> . ESCREVA ( )
    (48) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (39) cmdattrib -> . ID ASSIGN ( typeArgs )
    (40) cmdattrib -> . ID ASSIGN typeArgs
    (41) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 15
    ENQUANTO        shift and go to state 20
    SE              shift and go to state 21
    LEIA            shift and go to state 22
    ESCREVAL        shift and go to state 24
    ESCREVA         shift and go to state 25
    ID              shift and go to state 23

    bloco                          shift and go to state 90
    cmd                            shift and go to state 13
    cmdRepeticao                   shift and go to state 14
    cmdCondicao                    shift and go to state 16
    cmdleitura                     shift and go to state 17
    cmdescrita                     shift and go to state 18
    cmdattrib                      shift and go to state 19

state 50

    (24) expressaoRelacional -> expressaoRelacional OP_BOOL . termoRelacional
    (25) termoRelacional -> . ( expressaoRelacional )
    (26) termoRelacional -> . FALSO
    (27) termoRelacional -> . VERDADEIRO
    (28) termoRelacional -> . NAO termoRelacional
    (29) termoRelacional -> . expr OP_REL expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (               shift and go to state 35
    FALSO           shift and go to state 36
    VERDADEIRO      shift and go to state 37
    NAO             shift and go to state 38
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43

    termoRelacional                shift and go to state 91
    expr                           shift and go to state 39

state 51

    (30) OP_BOOL -> XOU .
    (               reduce using rule 30 (OP_BOOL -> XOU .)
    FALSO           reduce using rule 30 (OP_BOOL -> XOU .)
    VERDADEIRO      reduce using rule 30 (OP_BOOL -> XOU .)
    NAO             reduce using rule 30 (OP_BOOL -> XOU .)
    ID              reduce using rule 30 (OP_BOOL -> XOU .)
    REAL            reduce using rule 30 (OP_BOOL -> XOU .)
    INTEIRO         reduce using rule 30 (OP_BOOL -> XOU .)
    -               reduce using rule 30 (OP_BOOL -> XOU .)


state 52

    (31) OP_BOOL -> OU .
    (               reduce using rule 31 (OP_BOOL -> OU .)
    FALSO           reduce using rule 31 (OP_BOOL -> OU .)
    VERDADEIRO      reduce using rule 31 (OP_BOOL -> OU .)
    NAO             reduce using rule 31 (OP_BOOL -> OU .)
    ID              reduce using rule 31 (OP_BOOL -> OU .)
    REAL            reduce using rule 31 (OP_BOOL -> OU .)
    INTEIRO         reduce using rule 31 (OP_BOOL -> OU .)
    -               reduce using rule 31 (OP_BOOL -> OU .)


state 53

    (32) OP_BOOL -> E .
    (               reduce using rule 32 (OP_BOOL -> E .)
    FALSO           reduce using rule 32 (OP_BOOL -> E .)
    VERDADEIRO      reduce using rule 32 (OP_BOOL -> E .)
    NAO             reduce using rule 32 (OP_BOOL -> E .)
    ID              reduce using rule 32 (OP_BOOL -> E .)
    REAL            reduce using rule 32 (OP_BOOL -> E .)
    INTEIRO         reduce using rule 32 (OP_BOOL -> E .)
    -               reduce using rule 32 (OP_BOOL -> E .)


state 54

    (65) expr -> ( . expr )
    (25) termoRelacional -> ( . expressaoRelacional )
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    (23) expressaoRelacional -> . termoRelacional
    (24) expressaoRelacional -> . expressaoRelacional OP_BOOL termoRelacional
    (25) termoRelacional -> . ( expressaoRelacional )
    (26) termoRelacional -> . FALSO
    (27) termoRelacional -> . VERDADEIRO
    (28) termoRelacional -> . NAO termoRelacional
    (29) termoRelacional -> . expr OP_REL expr
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 54
    FALSO           shift and go to state 36
    VERDADEIRO      shift and go to state 37
    NAO             shift and go to state 38

    expr                           shift and go to state 56
    expressaoRelacional            shift and go to state 55
    termoRelacional                shift and go to state 34

state 55

    (25) termoRelacional -> ( expressaoRelacional . )
    (24) expressaoRelacional -> expressaoRelacional . OP_BOOL termoRelacional
    (30) OP_BOOL -> . XOU
    (31) OP_BOOL -> . OU
    (32) OP_BOOL -> . E
    )               shift and go to state 92
    XOU             shift and go to state 51
    OU              shift and go to state 52
    E               shift and go to state 53

    OP_BOOL                        shift and go to state 50

state 56

    (65) expr -> ( expr . )
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    (29) termoRelacional -> expr . OP_REL expr
    (33) OP_REL -> . EQ
    (34) OP_REL -> . GT
    (35) OP_REL -> . GE
    (36) OP_REL -> . LT
    (37) OP_REL -> . LE
    (38) OP_REL -> . NE
    )               shift and go to state 93
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    EQ              shift and go to state 67
    GT              shift and go to state 68
    GE              shift and go to state 69
    LT              shift and go to state 70
    LE              shift and go to state 71
    NE              shift and go to state 72

    OP_REL                         shift and go to state 58

state 57

    (28) termoRelacional -> NAO termoRelacional .
    FACA            reduce using rule 28 (termoRelacional -> NAO termoRelacional .)
    XOU             reduce using rule 28 (termoRelacional -> NAO termoRelacional .)
    OU              reduce using rule 28 (termoRelacional -> NAO termoRelacional .)
    E               reduce using rule 28 (termoRelacional -> NAO termoRelacional .)
    ENTAO           reduce using rule 28 (termoRelacional -> NAO termoRelacional .)
    )               reduce using rule 28 (termoRelacional -> NAO termoRelacional .)


state 58

    (29) termoRelacional -> expr OP_REL . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 94

state 59

    (57) expr -> expr ^ . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 95

state 60

    (58) expr -> expr MOD . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 96

state 61

    (59) expr -> expr % . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 97

state 62

    (60) expr -> expr \ . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 98

state 63

    (61) expr -> expr / . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 99

state 64

    (62) expr -> expr * . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 100

state 65

    (63) expr -> expr - . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 101

state 66

    (64) expr -> expr + . expr
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 102

state 67

    (33) OP_REL -> EQ .
    ID              reduce using rule 33 (OP_REL -> EQ .)
    REAL            reduce using rule 33 (OP_REL -> EQ .)
    INTEIRO         reduce using rule 33 (OP_REL -> EQ .)
    -               reduce using rule 33 (OP_REL -> EQ .)
    (               reduce using rule 33 (OP_REL -> EQ .)


state 68

    (34) OP_REL -> GT .
    ID              reduce using rule 34 (OP_REL -> GT .)
    REAL            reduce using rule 34 (OP_REL -> GT .)
    INTEIRO         reduce using rule 34 (OP_REL -> GT .)
    -               reduce using rule 34 (OP_REL -> GT .)
    (               reduce using rule 34 (OP_REL -> GT .)


state 69

    (35) OP_REL -> GE .
    ID              reduce using rule 35 (OP_REL -> GE .)
    REAL            reduce using rule 35 (OP_REL -> GE .)
    INTEIRO         reduce using rule 35 (OP_REL -> GE .)
    -               reduce using rule 35 (OP_REL -> GE .)
    (               reduce using rule 35 (OP_REL -> GE .)


state 70

    (36) OP_REL -> LT .
    ID              reduce using rule 36 (OP_REL -> LT .)
    REAL            reduce using rule 36 (OP_REL -> LT .)
    INTEIRO         reduce using rule 36 (OP_REL -> LT .)
    -               reduce using rule 36 (OP_REL -> LT .)
    (               reduce using rule 36 (OP_REL -> LT .)


state 71

    (37) OP_REL -> LE .
    ID              reduce using rule 37 (OP_REL -> LE .)
    REAL            reduce using rule 37 (OP_REL -> LE .)
    INTEIRO         reduce using rule 37 (OP_REL -> LE .)
    -               reduce using rule 37 (OP_REL -> LE .)
    (               reduce using rule 37 (OP_REL -> LE .)


state 72

    (38) OP_REL -> NE .
    ID              reduce using rule 38 (OP_REL -> NE .)
    REAL            reduce using rule 38 (OP_REL -> NE .)
    INTEIRO         reduce using rule 38 (OP_REL -> NE .)
    -               reduce using rule 38 (OP_REL -> NE .)
    (               reduce using rule 38 (OP_REL -> NE .)


state 73

    (56) expr -> - expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    ^               reduce using rule 56 (expr -> - expr .)
    MOD             reduce using rule 56 (expr -> - expr .)
    %               reduce using rule 56 (expr -> - expr .)
    \               reduce using rule 56 (expr -> - expr .)
    /               reduce using rule 56 (expr -> - expr .)
    *               reduce using rule 56 (expr -> - expr .)
    -               reduce using rule 56 (expr -> - expr .)
    +               reduce using rule 56 (expr -> - expr .)
    EQ              reduce using rule 56 (expr -> - expr .)
    GT              reduce using rule 56 (expr -> - expr .)
    GE              reduce using rule 56 (expr -> - expr .)
    LT              reduce using rule 56 (expr -> - expr .)
    LE              reduce using rule 56 (expr -> - expr .)
    NE              reduce using rule 56 (expr -> - expr .)
    )               reduce using rule 56 (expr -> - expr .)
    LIMPATELA       reduce using rule 56 (expr -> - expr .)
    ENQUANTO        reduce using rule 56 (expr -> - expr .)
    SE              reduce using rule 56 (expr -> - expr .)
    LEIA            reduce using rule 56 (expr -> - expr .)
    ESCREVAL        reduce using rule 56 (expr -> - expr .)
    ESCREVA         reduce using rule 56 (expr -> - expr .)
    ID              reduce using rule 56 (expr -> - expr .)
    FIMALGORITMO    reduce using rule 56 (expr -> - expr .)
    FIMENQUANTO     reduce using rule 56 (expr -> - expr .)
    SENAO           reduce using rule 56 (expr -> - expr .)
    FIMSE           reduce using rule 56 (expr -> - expr .)
    ,               reduce using rule 56 (expr -> - expr .)
    FACA            reduce using rule 56 (expr -> - expr .)
    XOU             reduce using rule 56 (expr -> - expr .)
    OU              reduce using rule 56 (expr -> - expr .)
    E               reduce using rule 56 (expr -> - expr .)
    ENTAO           reduce using rule 56 (expr -> - expr .)


state 74

    (65) expr -> ( . expr )
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    expr                           shift and go to state 103

state 75

    (21) cmdCondicao -> SE expressaoRelacional ENTAO . bloco SENAO bloco FIMSE
    (22) cmdCondicao -> SE expressaoRelacional ENTAO . bloco FIMSE
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdRepeticao
    (14) cmd -> . LIMPATELA
    (15) cmd -> . cmdCondicao
    (16) cmd -> . cmdleitura
    (17) cmd -> . cmdescrita
    (18) cmd -> . cmdattrib
    (19) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (21) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (20) cmdleitura -> . LEIA ( ID )
    (45) cmdescrita -> . ESCREVAL ( )
    (46) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (47) cmdescrita -> . ESCREVA ( )
    (48) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (39) cmdattrib -> . ID ASSIGN ( typeArgs )
    (40) cmdattrib -> . ID ASSIGN typeArgs
    (41) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 15
    ENQUANTO        shift and go to state 20
    SE              shift and go to state 21
    LEIA            shift and go to state 22
    ESCREVAL        shift and go to state 24
    ESCREVA         shift and go to state 25
    ID              shift and go to state 23

    bloco                          shift and go to state 104
    cmd                            shift and go to state 13
    cmdRepeticao                   shift and go to state 14
    cmdCondicao                    shift and go to state 16
    cmdleitura                     shift and go to state 17
    cmdescrita                     shift and go to state 18
    cmdattrib                      shift and go to state 19

state 76

    (20) cmdleitura -> LEIA ( ID . )
    )               shift and go to state 105


state 77

    (39) cmdattrib -> ID ASSIGN ( . typeArgs )
    (65) expr -> ( . expr )
    (42) typeArgs -> . CARACTERE
    (43) typeArgs -> . FALSO
    (44) typeArgs -> . VERDADEIRO
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    CARACTERE       shift and go to state 80
    FALSO           shift and go to state 81
    VERDADEIRO      shift and go to state 82
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    typeArgs                       shift and go to state 106
    expr                           shift and go to state 103

state 78

    (40) cmdattrib -> ID ASSIGN typeArgs .
    LIMPATELA       reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    ENQUANTO        reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    SE              reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    LEIA            reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    ESCREVAL        reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    ESCREVA         reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    ID              reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    FIMALGORITMO    reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    FIMENQUANTO     reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    SENAO           reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)
    FIMSE           reduce using rule 40 (cmdattrib -> ID ASSIGN typeArgs .)


state 79

    (41) cmdattrib -> ID ASSIGN expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    LIMPATELA       reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    ENQUANTO        reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    SE              reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    LEIA            reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    ESCREVAL        reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    ESCREVA         reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    ID              reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    FIMALGORITMO    reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    FIMENQUANTO     reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    SENAO           reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    FIMSE           reduce using rule 41 (cmdattrib -> ID ASSIGN expr .)
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66


state 80

    (42) typeArgs -> CARACTERE .
    LIMPATELA       reduce using rule 42 (typeArgs -> CARACTERE .)
    ENQUANTO        reduce using rule 42 (typeArgs -> CARACTERE .)
    SE              reduce using rule 42 (typeArgs -> CARACTERE .)
    LEIA            reduce using rule 42 (typeArgs -> CARACTERE .)
    ESCREVAL        reduce using rule 42 (typeArgs -> CARACTERE .)
    ESCREVA         reduce using rule 42 (typeArgs -> CARACTERE .)
    ID              reduce using rule 42 (typeArgs -> CARACTERE .)
    FIMALGORITMO    reduce using rule 42 (typeArgs -> CARACTERE .)
    FIMENQUANTO     reduce using rule 42 (typeArgs -> CARACTERE .)
    SENAO           reduce using rule 42 (typeArgs -> CARACTERE .)
    FIMSE           reduce using rule 42 (typeArgs -> CARACTERE .)
    )               reduce using rule 42 (typeArgs -> CARACTERE .)
    ,               reduce using rule 42 (typeArgs -> CARACTERE .)


state 81

    (43) typeArgs -> FALSO .
    LIMPATELA       reduce using rule 43 (typeArgs -> FALSO .)
    ENQUANTO        reduce using rule 43 (typeArgs -> FALSO .)
    SE              reduce using rule 43 (typeArgs -> FALSO .)
    LEIA            reduce using rule 43 (typeArgs -> FALSO .)
    ESCREVAL        reduce using rule 43 (typeArgs -> FALSO .)
    ESCREVA         reduce using rule 43 (typeArgs -> FALSO .)
    ID              reduce using rule 43 (typeArgs -> FALSO .)
    FIMALGORITMO    reduce using rule 43 (typeArgs -> FALSO .)
    FIMENQUANTO     reduce using rule 43 (typeArgs -> FALSO .)
    SENAO           reduce using rule 43 (typeArgs -> FALSO .)
    FIMSE           reduce using rule 43 (typeArgs -> FALSO .)
    )               reduce using rule 43 (typeArgs -> FALSO .)
    ,               reduce using rule 43 (typeArgs -> FALSO .)


state 82

    (44) typeArgs -> VERDADEIRO .
    LIMPATELA       reduce using rule 44 (typeArgs -> VERDADEIRO .)
    ENQUANTO        reduce using rule 44 (typeArgs -> VERDADEIRO .)
    SE              reduce using rule 44 (typeArgs -> VERDADEIRO .)
    LEIA            reduce using rule 44 (typeArgs -> VERDADEIRO .)
    ESCREVAL        reduce using rule 44 (typeArgs -> VERDADEIRO .)
    ESCREVA         reduce using rule 44 (typeArgs -> VERDADEIRO .)
    ID              reduce using rule 44 (typeArgs -> VERDADEIRO .)
    FIMALGORITMO    reduce using rule 44 (typeArgs -> VERDADEIRO .)
    FIMENQUANTO     reduce using rule 44 (typeArgs -> VERDADEIRO .)
    SENAO           reduce using rule 44 (typeArgs -> VERDADEIRO .)
    FIMSE           reduce using rule 44 (typeArgs -> VERDADEIRO .)
    )               reduce using rule 44 (typeArgs -> VERDADEIRO .)
    ,               reduce using rule 44 (typeArgs -> VERDADEIRO .)


state 83

    (45) cmdescrita -> ESCREVAL ( ) .
    LIMPATELA       reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    ENQUANTO        reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    SE              reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    LEIA            reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    ESCREVAL        reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    ESCREVA         reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    ID              reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    FIMALGORITMO    reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    FIMENQUANTO     reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    SENAO           reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)
    FIMSE           reduce using rule 45 (cmdescrita -> ESCREVAL ( ) .)


state 84

    (46) cmdescrita -> ESCREVAL ( typeArgsEscrita . )
    (52) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 107
    ,               shift and go to state 108


state 85

    (51) typeArgsEscrita -> typeArgsEscritaAux .
    )               reduce using rule 51 (typeArgsEscrita -> typeArgsEscritaAux .)
    ,               reduce using rule 51 (typeArgsEscrita -> typeArgsEscritaAux .)


state 86

    (49) typeArgsEscritaAux -> typeArgs .
    )               reduce using rule 49 (typeArgsEscritaAux -> typeArgs .)
    ,               reduce using rule 49 (typeArgsEscritaAux -> typeArgs .)


state 87

    (50) typeArgsEscritaAux -> expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    )               reduce using rule 50 (typeArgsEscritaAux -> expr .)
    ,               reduce using rule 50 (typeArgsEscritaAux -> expr .)
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66


state 88

    (47) cmdescrita -> ESCREVA ( ) .
    LIMPATELA       reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    ENQUANTO        reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    SE              reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    LEIA            reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    ESCREVAL        reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    ESCREVA         reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    ID              reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    FIMALGORITMO    reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    FIMENQUANTO     reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    SENAO           reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)
    FIMSE           reduce using rule 47 (cmdescrita -> ESCREVA ( ) .)


state 89

    (48) cmdescrita -> ESCREVA ( typeArgsEscrita . )
    (52) typeArgsEscrita -> typeArgsEscrita . , typeArgsEscritaAux
    )               shift and go to state 109
    ,               shift and go to state 108


state 90

    (19) cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco . FIMENQUANTO
    FIMENQUANTO     shift and go to state 110


state 91

    (24) expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .
    FACA            reduce using rule 24 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    XOU             reduce using rule 24 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    OU              reduce using rule 24 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    E               reduce using rule 24 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    ENTAO           reduce using rule 24 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)
    )               reduce using rule 24 (expressaoRelacional -> expressaoRelacional OP_BOOL termoRelacional .)


state 92

    (25) termoRelacional -> ( expressaoRelacional ) .
    FACA            reduce using rule 25 (termoRelacional -> ( expressaoRelacional ) .)
    XOU             reduce using rule 25 (termoRelacional -> ( expressaoRelacional ) .)
    OU              reduce using rule 25 (termoRelacional -> ( expressaoRelacional ) .)
    E               reduce using rule 25 (termoRelacional -> ( expressaoRelacional ) .)
    ENTAO           reduce using rule 25 (termoRelacional -> ( expressaoRelacional ) .)
    )               reduce using rule 25 (termoRelacional -> ( expressaoRelacional ) .)


state 93

    (65) expr -> ( expr ) .
    ^               reduce using rule 65 (expr -> ( expr ) .)
    MOD             reduce using rule 65 (expr -> ( expr ) .)
    %               reduce using rule 65 (expr -> ( expr ) .)
    \               reduce using rule 65 (expr -> ( expr ) .)
    /               reduce using rule 65 (expr -> ( expr ) .)
    *               reduce using rule 65 (expr -> ( expr ) .)
    -               reduce using rule 65 (expr -> ( expr ) .)
    +               reduce using rule 65 (expr -> ( expr ) .)
    EQ              reduce using rule 65 (expr -> ( expr ) .)
    GT              reduce using rule 65 (expr -> ( expr ) .)
    GE              reduce using rule 65 (expr -> ( expr ) .)
    LT              reduce using rule 65 (expr -> ( expr ) .)
    LE              reduce using rule 65 (expr -> ( expr ) .)
    NE              reduce using rule 65 (expr -> ( expr ) .)
    )               reduce using rule 65 (expr -> ( expr ) .)
    LIMPATELA       reduce using rule 65 (expr -> ( expr ) .)
    ENQUANTO        reduce using rule 65 (expr -> ( expr ) .)
    SE              reduce using rule 65 (expr -> ( expr ) .)
    LEIA            reduce using rule 65 (expr -> ( expr ) .)
    ESCREVAL        reduce using rule 65 (expr -> ( expr ) .)
    ESCREVA         reduce using rule 65 (expr -> ( expr ) .)
    ID              reduce using rule 65 (expr -> ( expr ) .)
    FIMALGORITMO    reduce using rule 65 (expr -> ( expr ) .)
    FIMENQUANTO     reduce using rule 65 (expr -> ( expr ) .)
    SENAO           reduce using rule 65 (expr -> ( expr ) .)
    FIMSE           reduce using rule 65 (expr -> ( expr ) .)
    ,               reduce using rule 65 (expr -> ( expr ) .)
    FACA            reduce using rule 65 (expr -> ( expr ) .)
    XOU             reduce using rule 65 (expr -> ( expr ) .)
    OU              reduce using rule 65 (expr -> ( expr ) .)
    E               reduce using rule 65 (expr -> ( expr ) .)
    ENTAO           reduce using rule 65 (expr -> ( expr ) .)


state 94

    (29) termoRelacional -> expr OP_REL expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    FACA            reduce using rule 29 (termoRelacional -> expr OP_REL expr .)
    XOU             reduce using rule 29 (termoRelacional -> expr OP_REL expr .)
    OU              reduce using rule 29 (termoRelacional -> expr OP_REL expr .)
    E               reduce using rule 29 (termoRelacional -> expr OP_REL expr .)
    ENTAO           reduce using rule 29 (termoRelacional -> expr OP_REL expr .)
    )               reduce using rule 29 (termoRelacional -> expr OP_REL expr .)
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66


state 95

    (57) expr -> expr ^ expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    MOD             reduce using rule 57 (expr -> expr ^ expr .)
    %               reduce using rule 57 (expr -> expr ^ expr .)
    \               reduce using rule 57 (expr -> expr ^ expr .)
    /               reduce using rule 57 (expr -> expr ^ expr .)
    *               reduce using rule 57 (expr -> expr ^ expr .)
    -               reduce using rule 57 (expr -> expr ^ expr .)
    +               reduce using rule 57 (expr -> expr ^ expr .)
    EQ              reduce using rule 57 (expr -> expr ^ expr .)
    GT              reduce using rule 57 (expr -> expr ^ expr .)
    GE              reduce using rule 57 (expr -> expr ^ expr .)
    LT              reduce using rule 57 (expr -> expr ^ expr .)
    LE              reduce using rule 57 (expr -> expr ^ expr .)
    NE              reduce using rule 57 (expr -> expr ^ expr .)
    )               reduce using rule 57 (expr -> expr ^ expr .)
    LIMPATELA       reduce using rule 57 (expr -> expr ^ expr .)
    ENQUANTO        reduce using rule 57 (expr -> expr ^ expr .)
    SE              reduce using rule 57 (expr -> expr ^ expr .)
    LEIA            reduce using rule 57 (expr -> expr ^ expr .)
    ESCREVAL        reduce using rule 57 (expr -> expr ^ expr .)
    ESCREVA         reduce using rule 57 (expr -> expr ^ expr .)
    ID              reduce using rule 57 (expr -> expr ^ expr .)
    FIMALGORITMO    reduce using rule 57 (expr -> expr ^ expr .)
    FIMENQUANTO     reduce using rule 57 (expr -> expr ^ expr .)
    SENAO           reduce using rule 57 (expr -> expr ^ expr .)
    FIMSE           reduce using rule 57 (expr -> expr ^ expr .)
    ,               reduce using rule 57 (expr -> expr ^ expr .)
    FACA            reduce using rule 57 (expr -> expr ^ expr .)
    XOU             reduce using rule 57 (expr -> expr ^ expr .)
    OU              reduce using rule 57 (expr -> expr ^ expr .)
    E               reduce using rule 57 (expr -> expr ^ expr .)
    ENTAO           reduce using rule 57 (expr -> expr ^ expr .)
    ^               shift and go to state 59


state 96

    (58) expr -> expr MOD expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    MOD             reduce using rule 58 (expr -> expr MOD expr .)
    %               reduce using rule 58 (expr -> expr MOD expr .)
    \               reduce using rule 58 (expr -> expr MOD expr .)
    /               reduce using rule 58 (expr -> expr MOD expr .)
    *               reduce using rule 58 (expr -> expr MOD expr .)
    -               reduce using rule 58 (expr -> expr MOD expr .)
    +               reduce using rule 58 (expr -> expr MOD expr .)
    EQ              reduce using rule 58 (expr -> expr MOD expr .)
    GT              reduce using rule 58 (expr -> expr MOD expr .)
    GE              reduce using rule 58 (expr -> expr MOD expr .)
    LT              reduce using rule 58 (expr -> expr MOD expr .)
    LE              reduce using rule 58 (expr -> expr MOD expr .)
    NE              reduce using rule 58 (expr -> expr MOD expr .)
    )               reduce using rule 58 (expr -> expr MOD expr .)
    LIMPATELA       reduce using rule 58 (expr -> expr MOD expr .)
    ENQUANTO        reduce using rule 58 (expr -> expr MOD expr .)
    SE              reduce using rule 58 (expr -> expr MOD expr .)
    LEIA            reduce using rule 58 (expr -> expr MOD expr .)
    ESCREVAL        reduce using rule 58 (expr -> expr MOD expr .)
    ESCREVA         reduce using rule 58 (expr -> expr MOD expr .)
    ID              reduce using rule 58 (expr -> expr MOD expr .)
    FIMALGORITMO    reduce using rule 58 (expr -> expr MOD expr .)
    FIMENQUANTO     reduce using rule 58 (expr -> expr MOD expr .)
    SENAO           reduce using rule 58 (expr -> expr MOD expr .)
    FIMSE           reduce using rule 58 (expr -> expr MOD expr .)
    ,               reduce using rule 58 (expr -> expr MOD expr .)
    FACA            reduce using rule 58 (expr -> expr MOD expr .)
    XOU             reduce using rule 58 (expr -> expr MOD expr .)
    OU              reduce using rule 58 (expr -> expr MOD expr .)
    E               reduce using rule 58 (expr -> expr MOD expr .)
    ENTAO           reduce using rule 58 (expr -> expr MOD expr .)
    ^               shift and go to state 59


state 97

    (59) expr -> expr % expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    MOD             reduce using rule 59 (expr -> expr % expr .)
    %               reduce using rule 59 (expr -> expr % expr .)
    \               reduce using rule 59 (expr -> expr % expr .)
    /               reduce using rule 59 (expr -> expr % expr .)
    *               reduce using rule 59 (expr -> expr % expr .)
    -               reduce using rule 59 (expr -> expr % expr .)
    +               reduce using rule 59 (expr -> expr % expr .)
    EQ              reduce using rule 59 (expr -> expr % expr .)
    GT              reduce using rule 59 (expr -> expr % expr .)
    GE              reduce using rule 59 (expr -> expr % expr .)
    LT              reduce using rule 59 (expr -> expr % expr .)
    LE              reduce using rule 59 (expr -> expr % expr .)
    NE              reduce using rule 59 (expr -> expr % expr .)
    )               reduce using rule 59 (expr -> expr % expr .)
    LIMPATELA       reduce using rule 59 (expr -> expr % expr .)
    ENQUANTO        reduce using rule 59 (expr -> expr % expr .)
    SE              reduce using rule 59 (expr -> expr % expr .)
    LEIA            reduce using rule 59 (expr -> expr % expr .)
    ESCREVAL        reduce using rule 59 (expr -> expr % expr .)
    ESCREVA         reduce using rule 59 (expr -> expr % expr .)
    ID              reduce using rule 59 (expr -> expr % expr .)
    FIMALGORITMO    reduce using rule 59 (expr -> expr % expr .)
    FIMENQUANTO     reduce using rule 59 (expr -> expr % expr .)
    SENAO           reduce using rule 59 (expr -> expr % expr .)
    FIMSE           reduce using rule 59 (expr -> expr % expr .)
    ,               reduce using rule 59 (expr -> expr % expr .)
    FACA            reduce using rule 59 (expr -> expr % expr .)
    XOU             reduce using rule 59 (expr -> expr % expr .)
    OU              reduce using rule 59 (expr -> expr % expr .)
    E               reduce using rule 59 (expr -> expr % expr .)
    ENTAO           reduce using rule 59 (expr -> expr % expr .)
    ^               shift and go to state 59


state 98

    (60) expr -> expr \ expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    MOD             reduce using rule 60 (expr -> expr \ expr .)
    %               reduce using rule 60 (expr -> expr \ expr .)
    \               reduce using rule 60 (expr -> expr \ expr .)
    /               reduce using rule 60 (expr -> expr \ expr .)
    *               reduce using rule 60 (expr -> expr \ expr .)
    -               reduce using rule 60 (expr -> expr \ expr .)
    +               reduce using rule 60 (expr -> expr \ expr .)
    EQ              reduce using rule 60 (expr -> expr \ expr .)
    GT              reduce using rule 60 (expr -> expr \ expr .)
    GE              reduce using rule 60 (expr -> expr \ expr .)
    LT              reduce using rule 60 (expr -> expr \ expr .)
    LE              reduce using rule 60 (expr -> expr \ expr .)
    NE              reduce using rule 60 (expr -> expr \ expr .)
    )               reduce using rule 60 (expr -> expr \ expr .)
    LIMPATELA       reduce using rule 60 (expr -> expr \ expr .)
    ENQUANTO        reduce using rule 60 (expr -> expr \ expr .)
    SE              reduce using rule 60 (expr -> expr \ expr .)
    LEIA            reduce using rule 60 (expr -> expr \ expr .)
    ESCREVAL        reduce using rule 60 (expr -> expr \ expr .)
    ESCREVA         reduce using rule 60 (expr -> expr \ expr .)
    ID              reduce using rule 60 (expr -> expr \ expr .)
    FIMALGORITMO    reduce using rule 60 (expr -> expr \ expr .)
    FIMENQUANTO     reduce using rule 60 (expr -> expr \ expr .)
    SENAO           reduce using rule 60 (expr -> expr \ expr .)
    FIMSE           reduce using rule 60 (expr -> expr \ expr .)
    ,               reduce using rule 60 (expr -> expr \ expr .)
    FACA            reduce using rule 60 (expr -> expr \ expr .)
    XOU             reduce using rule 60 (expr -> expr \ expr .)
    OU              reduce using rule 60 (expr -> expr \ expr .)
    E               reduce using rule 60 (expr -> expr \ expr .)
    ENTAO           reduce using rule 60 (expr -> expr \ expr .)
    ^               shift and go to state 59


state 99

    (61) expr -> expr / expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    MOD             reduce using rule 61 (expr -> expr / expr .)
    %               reduce using rule 61 (expr -> expr / expr .)
    \               reduce using rule 61 (expr -> expr / expr .)
    /               reduce using rule 61 (expr -> expr / expr .)
    *               reduce using rule 61 (expr -> expr / expr .)
    -               reduce using rule 61 (expr -> expr / expr .)
    +               reduce using rule 61 (expr -> expr / expr .)
    EQ              reduce using rule 61 (expr -> expr / expr .)
    GT              reduce using rule 61 (expr -> expr / expr .)
    GE              reduce using rule 61 (expr -> expr / expr .)
    LT              reduce using rule 61 (expr -> expr / expr .)
    LE              reduce using rule 61 (expr -> expr / expr .)
    NE              reduce using rule 61 (expr -> expr / expr .)
    )               reduce using rule 61 (expr -> expr / expr .)
    LIMPATELA       reduce using rule 61 (expr -> expr / expr .)
    ENQUANTO        reduce using rule 61 (expr -> expr / expr .)
    SE              reduce using rule 61 (expr -> expr / expr .)
    LEIA            reduce using rule 61 (expr -> expr / expr .)
    ESCREVAL        reduce using rule 61 (expr -> expr / expr .)
    ESCREVA         reduce using rule 61 (expr -> expr / expr .)
    ID              reduce using rule 61 (expr -> expr / expr .)
    FIMALGORITMO    reduce using rule 61 (expr -> expr / expr .)
    FIMENQUANTO     reduce using rule 61 (expr -> expr / expr .)
    SENAO           reduce using rule 61 (expr -> expr / expr .)
    FIMSE           reduce using rule 61 (expr -> expr / expr .)
    ,               reduce using rule 61 (expr -> expr / expr .)
    FACA            reduce using rule 61 (expr -> expr / expr .)
    XOU             reduce using rule 61 (expr -> expr / expr .)
    OU              reduce using rule 61 (expr -> expr / expr .)
    E               reduce using rule 61 (expr -> expr / expr .)
    ENTAO           reduce using rule 61 (expr -> expr / expr .)
    ^               shift and go to state 59


state 100

    (62) expr -> expr * expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    MOD             reduce using rule 62 (expr -> expr * expr .)
    %               reduce using rule 62 (expr -> expr * expr .)
    \               reduce using rule 62 (expr -> expr * expr .)
    /               reduce using rule 62 (expr -> expr * expr .)
    *               reduce using rule 62 (expr -> expr * expr .)
    -               reduce using rule 62 (expr -> expr * expr .)
    +               reduce using rule 62 (expr -> expr * expr .)
    EQ              reduce using rule 62 (expr -> expr * expr .)
    GT              reduce using rule 62 (expr -> expr * expr .)
    GE              reduce using rule 62 (expr -> expr * expr .)
    LT              reduce using rule 62 (expr -> expr * expr .)
    LE              reduce using rule 62 (expr -> expr * expr .)
    NE              reduce using rule 62 (expr -> expr * expr .)
    )               reduce using rule 62 (expr -> expr * expr .)
    LIMPATELA       reduce using rule 62 (expr -> expr * expr .)
    ENQUANTO        reduce using rule 62 (expr -> expr * expr .)
    SE              reduce using rule 62 (expr -> expr * expr .)
    LEIA            reduce using rule 62 (expr -> expr * expr .)
    ESCREVAL        reduce using rule 62 (expr -> expr * expr .)
    ESCREVA         reduce using rule 62 (expr -> expr * expr .)
    ID              reduce using rule 62 (expr -> expr * expr .)
    FIMALGORITMO    reduce using rule 62 (expr -> expr * expr .)
    FIMENQUANTO     reduce using rule 62 (expr -> expr * expr .)
    SENAO           reduce using rule 62 (expr -> expr * expr .)
    FIMSE           reduce using rule 62 (expr -> expr * expr .)
    ,               reduce using rule 62 (expr -> expr * expr .)
    FACA            reduce using rule 62 (expr -> expr * expr .)
    XOU             reduce using rule 62 (expr -> expr * expr .)
    OU              reduce using rule 62 (expr -> expr * expr .)
    E               reduce using rule 62 (expr -> expr * expr .)
    ENTAO           reduce using rule 62 (expr -> expr * expr .)
    ^               shift and go to state 59


state 101

    (63) expr -> expr - expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    -               reduce using rule 63 (expr -> expr - expr .)
    +               reduce using rule 63 (expr -> expr - expr .)
    EQ              reduce using rule 63 (expr -> expr - expr .)
    GT              reduce using rule 63 (expr -> expr - expr .)
    GE              reduce using rule 63 (expr -> expr - expr .)
    LT              reduce using rule 63 (expr -> expr - expr .)
    LE              reduce using rule 63 (expr -> expr - expr .)
    NE              reduce using rule 63 (expr -> expr - expr .)
    )               reduce using rule 63 (expr -> expr - expr .)
    LIMPATELA       reduce using rule 63 (expr -> expr - expr .)
    ENQUANTO        reduce using rule 63 (expr -> expr - expr .)
    SE              reduce using rule 63 (expr -> expr - expr .)
    LEIA            reduce using rule 63 (expr -> expr - expr .)
    ESCREVAL        reduce using rule 63 (expr -> expr - expr .)
    ESCREVA         reduce using rule 63 (expr -> expr - expr .)
    ID              reduce using rule 63 (expr -> expr - expr .)
    FIMALGORITMO    reduce using rule 63 (expr -> expr - expr .)
    FIMENQUANTO     reduce using rule 63 (expr -> expr - expr .)
    SENAO           reduce using rule 63 (expr -> expr - expr .)
    FIMSE           reduce using rule 63 (expr -> expr - expr .)
    ,               reduce using rule 63 (expr -> expr - expr .)
    FACA            reduce using rule 63 (expr -> expr - expr .)
    XOU             reduce using rule 63 (expr -> expr - expr .)
    OU              reduce using rule 63 (expr -> expr - expr .)
    E               reduce using rule 63 (expr -> expr - expr .)
    ENTAO           reduce using rule 63 (expr -> expr - expr .)
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64


state 102

    (64) expr -> expr + expr .
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    -               reduce using rule 64 (expr -> expr + expr .)
    +               reduce using rule 64 (expr -> expr + expr .)
    EQ              reduce using rule 64 (expr -> expr + expr .)
    GT              reduce using rule 64 (expr -> expr + expr .)
    GE              reduce using rule 64 (expr -> expr + expr .)
    LT              reduce using rule 64 (expr -> expr + expr .)
    LE              reduce using rule 64 (expr -> expr + expr .)
    NE              reduce using rule 64 (expr -> expr + expr .)
    )               reduce using rule 64 (expr -> expr + expr .)
    LIMPATELA       reduce using rule 64 (expr -> expr + expr .)
    ENQUANTO        reduce using rule 64 (expr -> expr + expr .)
    SE              reduce using rule 64 (expr -> expr + expr .)
    LEIA            reduce using rule 64 (expr -> expr + expr .)
    ESCREVAL        reduce using rule 64 (expr -> expr + expr .)
    ESCREVA         reduce using rule 64 (expr -> expr + expr .)
    ID              reduce using rule 64 (expr -> expr + expr .)
    FIMALGORITMO    reduce using rule 64 (expr -> expr + expr .)
    FIMENQUANTO     reduce using rule 64 (expr -> expr + expr .)
    SENAO           reduce using rule 64 (expr -> expr + expr .)
    FIMSE           reduce using rule 64 (expr -> expr + expr .)
    ,               reduce using rule 64 (expr -> expr + expr .)
    FACA            reduce using rule 64 (expr -> expr + expr .)
    XOU             reduce using rule 64 (expr -> expr + expr .)
    OU              reduce using rule 64 (expr -> expr + expr .)
    E               reduce using rule 64 (expr -> expr + expr .)
    ENTAO           reduce using rule 64 (expr -> expr + expr .)
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64


state 103

    (65) expr -> ( expr . )
    (57) expr -> expr . ^ expr
    (58) expr -> expr . MOD expr
    (59) expr -> expr . % expr
    (60) expr -> expr . \ expr
    (61) expr -> expr . / expr
    (62) expr -> expr . * expr
    (63) expr -> expr . - expr
    (64) expr -> expr . + expr
    )               shift and go to state 93
    ^               shift and go to state 59
    MOD             shift and go to state 60
    %               shift and go to state 61
    \               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66


state 104

    (21) cmdCondicao -> SE expressaoRelacional ENTAO bloco . SENAO bloco FIMSE
    (22) cmdCondicao -> SE expressaoRelacional ENTAO bloco . FIMSE
    SENAO           shift and go to state 111
    FIMSE           shift and go to state 112


state 105

    (20) cmdleitura -> LEIA ( ID ) .
    LIMPATELA       reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    ENQUANTO        reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    SE              reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    LEIA            reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    ESCREVAL        reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    ESCREVA         reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    ID              reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    FIMALGORITMO    reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    FIMENQUANTO     reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    SENAO           reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)
    FIMSE           reduce using rule 20 (cmdleitura -> LEIA ( ID ) .)


state 106

    (39) cmdattrib -> ID ASSIGN ( typeArgs . )
    )               shift and go to state 113


state 107

    (46) cmdescrita -> ESCREVAL ( typeArgsEscrita ) .
    LIMPATELA       reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ENQUANTO        reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    SE              reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    LEIA            reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ESCREVAL        reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ESCREVA         reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    ID              reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    FIMALGORITMO    reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    FIMENQUANTO     reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    SENAO           reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)
    FIMSE           reduce using rule 46 (cmdescrita -> ESCREVAL ( typeArgsEscrita ) .)


state 108

    (52) typeArgsEscrita -> typeArgsEscrita , . typeArgsEscritaAux
    (49) typeArgsEscritaAux -> . typeArgs
    (50) typeArgsEscritaAux -> . expr
    (42) typeArgs -> . CARACTERE
    (43) typeArgs -> . FALSO
    (44) typeArgs -> . VERDADEIRO
    (53) expr -> . ID
    (54) expr -> . REAL
    (55) expr -> . INTEIRO
    (56) expr -> . - expr
    (57) expr -> . expr ^ expr
    (58) expr -> . expr MOD expr
    (59) expr -> . expr % expr
    (60) expr -> . expr \ expr
    (61) expr -> . expr / expr
    (62) expr -> . expr * expr
    (63) expr -> . expr - expr
    (64) expr -> . expr + expr
    (65) expr -> . ( expr )
    CARACTERE       shift and go to state 80
    FALSO           shift and go to state 81
    VERDADEIRO      shift and go to state 82
    ID              shift and go to state 40
    REAL            shift and go to state 41
    INTEIRO         shift and go to state 42
    -               shift and go to state 43
    (               shift and go to state 74

    typeArgsEscritaAux             shift and go to state 114
    typeArgs                       shift and go to state 86
    expr                           shift and go to state 87

state 109

    (48) cmdescrita -> ESCREVA ( typeArgsEscrita ) .
    LIMPATELA       reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ENQUANTO        reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    SE              reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    LEIA            reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ESCREVAL        reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ESCREVA         reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    ID              reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    FIMALGORITMO    reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    FIMENQUANTO     reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    SENAO           reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)
    FIMSE           reduce using rule 48 (cmdescrita -> ESCREVA ( typeArgsEscrita ) .)


state 110

    (19) cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .
    LIMPATELA       reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ENQUANTO        reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    SE              reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    LEIA            reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ESCREVAL        reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ESCREVA         reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    ID              reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    FIMALGORITMO    reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    FIMENQUANTO     reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    SENAO           reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)
    FIMSE           reduce using rule 19 (cmdRepeticao -> ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO .)


state 111

    (21) cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO . bloco FIMSE
    (11) bloco -> . cmd bloco
    (12) bloco -> . cmd
    (13) cmd -> . cmdRepeticao
    (14) cmd -> . LIMPATELA
    (15) cmd -> . cmdCondicao
    (16) cmd -> . cmdleitura
    (17) cmd -> . cmdescrita
    (18) cmd -> . cmdattrib
    (19) cmdRepeticao -> . ENQUANTO expressaoRelacional FACA bloco FIMENQUANTO
    (21) cmdCondicao -> . SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE
    (22) cmdCondicao -> . SE expressaoRelacional ENTAO bloco FIMSE
    (20) cmdleitura -> . LEIA ( ID )
    (45) cmdescrita -> . ESCREVAL ( )
    (46) cmdescrita -> . ESCREVAL ( typeArgsEscrita )
    (47) cmdescrita -> . ESCREVA ( )
    (48) cmdescrita -> . ESCREVA ( typeArgsEscrita )
    (39) cmdattrib -> . ID ASSIGN ( typeArgs )
    (40) cmdattrib -> . ID ASSIGN typeArgs
    (41) cmdattrib -> . ID ASSIGN expr
    LIMPATELA       shift and go to state 15
    ENQUANTO        shift and go to state 20
    SE              shift and go to state 21
    LEIA            shift and go to state 22
    ESCREVAL        shift and go to state 24
    ESCREVA         shift and go to state 25
    ID              shift and go to state 23

    bloco                          shift and go to state 115
    cmd                            shift and go to state 13
    cmdRepeticao                   shift and go to state 14
    cmdCondicao                    shift and go to state 16
    cmdleitura                     shift and go to state 17
    cmdescrita                     shift and go to state 18
    cmdattrib                      shift and go to state 19

state 112

    (22) cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .
    LIMPATELA       reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ENQUANTO        reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    SE              reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    LEIA            reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ESCREVAL        reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ESCREVA         reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    ID              reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    FIMALGORITMO    reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    FIMENQUANTO     reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    SENAO           reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)
    FIMSE           reduce using rule 22 (cmdCondicao -> SE expressaoRelacional ENTAO bloco FIMSE .)


state 113

    (39) cmdattrib -> ID ASSIGN ( typeArgs ) .
    LIMPATELA       reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ENQUANTO        reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    SE              reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    LEIA            reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ESCREVAL        reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ESCREVA         reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    ID              reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    FIMALGORITMO    reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    FIMENQUANTO     reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    SENAO           reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)
    FIMSE           reduce using rule 39 (cmdattrib -> ID ASSIGN ( typeArgs ) .)


state 114

    (52) typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .
    )               reduce using rule 52 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)
    ,               reduce using rule 52 (typeArgsEscrita -> typeArgsEscrita , typeArgsEscritaAux .)


state 115

    (21) cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco . FIMSE
    FIMSE           shift and go to state 116


state 116

    (21) cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .
    LIMPATELA       reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ENQUANTO        reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    SE              reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    LEIA            reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ESCREVAL        reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ESCREVA         reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    ID              reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    FIMALGORITMO    reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    FIMENQUANTO     reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    SENAO           reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
    FIMSE           reduce using rule 21 (cmdCondicao -> SE expressaoRelacional ENTAO bloco SENAO bloco FIMSE .)
